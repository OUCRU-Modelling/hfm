{"title":"HFMD Seroprevalence","markdown":{"yaml":{"title":"HFMD Seroprevalence","format":{"html":{"page-layout":"full","toc":true,"fig-format":"svg"}},"knitr":{"opts_chunk":{"out.width":"100%","out.height":"100%"}},"editor":"visual","echo":true,"warning":false,"message":false},"headingText":"Import data","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(mgcv)\nlibrary(tidyverse)\nlibrary(patchwork)\n```\n\n\n```{r}\napr_2023 <- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 <- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 <- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 <- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 <- data.frame(apr_2023[-c(1,2),10:14])\nt423$pos <- replace(t423$...14,is.na(t423$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t423) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age <- as.numeric(t423$age)\n\n\nt823 <- data.frame(aug_2023[-c(1,2),c(9,14:17)])\nt823$pos <- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t823) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age <- as.numeric(t823$age)\n\n\nt1222 <- data.frame(dec_2022[-c(1,2),10:14])\nt1222$pos <- replace(t1222$...14,is.na(t1222$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1222) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age <- as.numeric(t1222$age)\n\n\nt1223 <- data.frame(dec_2023[-c(1,2),c(9,14:17)])\nt1223$pos <- replace(t1223$...17,is.na(t1223$...17),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1223) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age <- as.numeric(t1223$age)\n```\n\n# Function\n\n```{r}\npredict2 <- function(x, ci = .95, le = 512, m = 100) {\n  p <- (1 - ci) / 2\n\n  link_inv <- x$family$linkinv\n  dataset <- x$data\n  n <- nrow(dataset) - length(x$coefficients)\n  age_range <- range(dataset$age)\n\n  ages <- seq(age_range[1], age_range[2], le = le)\n\n  x |>\n    predict(data.frame(age = ages), se.fit = TRUE) |>\n    extract(c(\"fit\", \"se.fit\")) %>%\n    c(age = list(ages), .) |>\n    as_tibble() |>\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |>\n    select(- se.fit)\n}\n```\n\n\n# Seroprevalence by age\n\n## Fit by GLM \n\n```{r}\nm <- 100\neps <- 1\n\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n```\n\n```{r}\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 <-  glm(pos ~ age + I(age ^2), binomial, data = t423) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n```\n\n```{r}\n#| fig-width: 13\n#| fig-height: 8\n#| out-width: \"100%\"\nplot1222 + plot0423 + plot0823 + plot1223\n```\n\n# Model age and time at the same time\n\n```{r}\nlibrary(plotly)\nlibrary(scam)\n```\n\n```{r}\natdf <- rbind(t1222,t423,t823,t1223) %>%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day)) %>%\n  select(age,col_date,pos)\n```\n\n\n```{r}\nhead(atdf)\n```\n\n\n## Fit with SCAM model\n\nmpi is monotone increasing SCOP-splines: bs=\"mpi\". To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\n\n```{r}\ns1 <- scam(pos~s(age,bs = \"mpi\")+s(col_date),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))\n```\n\n```{r}\nage_val <- c(.1, 1:14)\ncollection_date_val <- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 20)\nnew_data <- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf <- cbind(new_data, fit = 100 * predict(s1, new_data,\"response\"))\n```\n\n```{r}\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %>%\n  add_surface()%>%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  )) %>% layout(autosize = F, width = 1000, height = 1500, margin = m)\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(mgcv)\nlibrary(tidyverse)\nlibrary(patchwork)\n```\n\n# Import data\n\n```{r}\napr_2023 <- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 <- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 <- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 <- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 <- data.frame(apr_2023[-c(1,2),10:14])\nt423$pos <- replace(t423$...14,is.na(t423$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t423) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age <- as.numeric(t423$age)\n\n\nt823 <- data.frame(aug_2023[-c(1,2),c(9,14:17)])\nt823$pos <- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t823) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age <- as.numeric(t823$age)\n\n\nt1222 <- data.frame(dec_2022[-c(1,2),10:14])\nt1222$pos <- replace(t1222$...14,is.na(t1222$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1222) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age <- as.numeric(t1222$age)\n\n\nt1223 <- data.frame(dec_2023[-c(1,2),c(9,14:17)])\nt1223$pos <- replace(t1223$...17,is.na(t1223$...17),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1223) <- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age <- as.numeric(t1223$age)\n```\n\n# Function\n\n```{r}\npredict2 <- function(x, ci = .95, le = 512, m = 100) {\n  p <- (1 - ci) / 2\n\n  link_inv <- x$family$linkinv\n  dataset <- x$data\n  n <- nrow(dataset) - length(x$coefficients)\n  age_range <- range(dataset$age)\n\n  ages <- seq(age_range[1], age_range[2], le = le)\n\n  x |>\n    predict(data.frame(age = ages), se.fit = TRUE) |>\n    extract(c(\"fit\", \"se.fit\")) %>%\n    c(age = list(ages), .) |>\n    as_tibble() |>\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |>\n    select(- se.fit)\n}\n```\n\n\n# Seroprevalence by age\n\n## Fit by GLM \n\n```{r}\nm <- 100\neps <- 1\n\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n```\n\n```{r}\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 <-  glm(pos ~ age + I(age ^2), binomial, data = t423) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n```\n\n```{r}\n#| fig-width: 13\n#| fig-height: 8\n#| out-width: \"100%\"\nplot1222 + plot0423 + plot0823 + plot1223\n```\n\n# Model age and time at the same time\n\n```{r}\nlibrary(plotly)\nlibrary(scam)\n```\n\n```{r}\natdf <- rbind(t1222,t423,t823,t1223) %>%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day)) %>%\n  select(age,col_date,pos)\n```\n\n\n```{r}\nhead(atdf)\n```\n\n\n## Fit with SCAM model\n\nmpi is monotone increasing SCOP-splines: bs=\"mpi\". To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\n\n```{r}\ns1 <- scam(pos~s(age,bs = \"mpi\")+s(col_date),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))\n```\n\n```{r}\nage_val <- c(.1, 1:14)\ncollection_date_val <- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 20)\nnew_data <- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf <- cbind(new_data, fit = 100 * predict(s1, new_data,\"response\"))\n```\n\n```{r}\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %>%\n  add_surface()%>%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  )) %>% layout(autosize = F, width = 1000, height = 1500, margin = m)\n```\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"svg","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"sero.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","title":"HFMD Seroprevalence","knitr":{"opts_chunk":{"out.width":"100%","out.height":"100%"}},"editor":"visual","message":false,"page-layout":"full"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}