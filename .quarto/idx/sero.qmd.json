{"title":"HFMD Seroprevalence","markdown":{"headingText":"HFMD Seroprevalence","containsRefs":false,"markdown":"\n```{r}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(mgcv)\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(sf)\nlibrary(janitor)\nlibrary(ggsci)\nlibrary(cowplot)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\n```\n\n# Import data\n\n## Serology data\n\n```{r}\napr_2023 <- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 <- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 <- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 <- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 <- data.frame(apr_2023[-c(1,2),c(6,10:14)])\nt423$pos <- replace(t423$...14,is.na(t423$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t423) <- c(\"id\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age <- as.numeric(t423$age)\n\nt823 <- data.frame(aug_2023[-c(1,2),c(6,9,14:17)])\nt823$pos <- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t823) <- c(\"id\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age <- as.numeric(t823$age)\n\nt1222 <- data.frame(dec_2022[-c(1,2),c(6,10:14)])\nt1222$pos <- replace(t1222$...14,is.na(t1222$...14),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1222) <- c(\"id\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age <- as.numeric(t1222$age)\n\nt1223 <- data.frame(dec_2023[-c(1,2),c(6,9,14:17)])\nt1223$pos <- replace(t1223$...17,is.na(t1223$...17),0) %>%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %>%\n  as.integer(as.logical())\ncolnames(t1223) <- c(\"id\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age <- as.numeric(t1223$age)\n```\n\n## Case\n\n```{r}\ndf1 <- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n                  col_types = c(\"date\", \"numeric\", \"text\", \n                                \"text\", \"text\", \"date\", \"date\", \"date\", \n                                \"text\", \"text\", \"text\"))\ncolnames(df1) <- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob <- df1$dob %>% as_date()\ndf1$adm_date <- df1$adm_date %>% as_date()\n\ndf1$age1 <- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week <- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district <- df1$district %>% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district <- df1$district %>% \n  str_remove(\"Quận|Huyện|Thành phố\") %>%\n  trimws(which = \"both\") \n\ndf_plot <- df1 %>% filter(year(adm_week) == \"2023\") %>%\n  filter(!is.na(adm_week) ) %>%\n  count(adm_week) %>% as.data.frame()\n\nts <- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  labs(x = \"Admission week\",\"Cases\")+\n  geom_vline(xintercept = as.Date(\"2022-12-01\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2022-12-30\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2023-04-01\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-04-30\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-08-01\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-08-30\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-12-01\"),\n             alpha = 0.4,col = \"#33516b\")+\n  geom_vline(xintercept = as.Date(\"2023-12-30\"),\n             alpha = 0.4,col = \"#33516b\")+\n  xlim(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\"))+theme_classic()\n```\n\n# Function\n\n```{r}\npredict2 <- function(x, ci = .95, le = 512, m = 100) {\n  p <- (1 - ci) / 2\n\n  link_inv <- x$family$linkinv\n  dataset <- x$data\n  n <- nrow(dataset) - length(x$coefficients)\n  age_range <- range(dataset$age)\n\n  ages <- seq(age_range[1], age_range[2], le = le)\n\n  x |>\n    predict(data.frame(age = ages), se.fit = TRUE) |>\n    extract(c(\"fit\", \"se.fit\")) %>%\n    c(age = list(ages), .) |>\n    as_tibble() |>\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |>\n    select(- se.fit)\n}\n```\n\n# Seroprevalence by age\n\n## Fit by GLM\n\n```{r}\nm <- 100\neps <- 1\n\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n```\n\n```{r}\nplot1222 <-  glm(pos ~ age, binomial, data = t1222) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 <-  glm(pos ~ age + I(age ^2), binomial, data = t423) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 <-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |>\n  predict2() %>% as.data.frame() %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n```\n\n```{r}\n#| fig-width: 13\n#| fig-height: 8\n#| out-width: \"100%\"\nplot1222 + plot0423 + plot0823 + plot1223\n```\n\n## Fit by GAM\n\n```{r}\n## \npredictg <- function(x, ci = .95, le = 512, m = 100) {\n  p <- (1 - ci) / 2\n  \n  link_inv <- x$family$linkinv\n  dataset <- x$model\n  n <- nrow(dataset) - length(x$coefficients)\n  age_range <- range(dataset$age)\n  \n  ages <- seq(age_range[1], age_range[2], le = le)\n  \n  x |>\n    predict(data.frame(age = ages), se.fit = TRUE) |>\n    extract(c(\"fit\", \"se.fit\")) %>%\n    c(age = list(ages), .) |>\n    as_tibble() |>\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |>\n    select(- se.fit)\n}\n\n## plot\n\nplot_gam <- function(x,date){\n  \n  clo <- case_when(date == 1222 ~ \"Dec 2022\",\n                   date == 423 ~ \"Apr 2023\",\n                   date == 823 ~ \"Aug 2023\",\n                   date == 1223 ~ \"Dec 2023\")\n  clo2 <- case_when(date == 1222 ~ \"#0808cf\",\n                    date == 423 ~ \"#ed097b\",\n                    date == 823 ~ \"#ed6b00\",\n                    date == 1223 ~ \"#33516b\")\n  \n  dtaa <- case_when(date == 1222 ~ t1222,\n                    date == 423 ~ t423,\n                    date == 823 ~ t823,\n                    date == 1223 ~ t1223)\n  \n  x %>% as.data.frame() %>%\n    ggplot(aes(x = age,y = fit))+\n    geom_line(aes(col = clo))+\n    geom_ribbon(aes(x = age,y = fit,\n                    ymin=lwr, ymax=upr),alpha = 0.5,fill = clo2)+\n    ylim(0,101)+\n    theme_minimal() +\n  scale_color_manual(name = \"Y series\",\n                     values = c(clo = clo2))+\n    labs(y = \"Seroprevalence (%)\")+\n    geom_point(data= dtaa, aes(x = age, m * pos + 1),\n               shape = \"|\",\n               col = clo2)+\n    theme(\n      axis.text.x = element_text(size = 15),\n      axis.text.y = element_text(size = 15),\n      legend.position = \"hide\",\n      legend.text = element_text(size = 15),\n      axis.title.x = element_text(size = 15),\n      axis.title.y = element_text(size = 15))+\n    annotate(\"text\", x = 3, y = 90, label = c(clo),size = 6) \n}  \n\ng1222 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %>% \n  predictg() %>% plot_gam(date = 1222)  \n\ng423 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %>% \n  predictg() %>% plot_gam(date = 423)  \n\ng823 <-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t823) %>% \n  predictg() %>% plot_gam(date = 823)  \n\ng1223 <-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1223) %>% \n  predictg() %>% plot_gam(date = 1223)  \n\n```\n\n```{r}\n#| fig-width: 15\n#| fig-height: 6\n#| out-width: \"100%\"\ng1222 | g423 | g823 | g1223\n```\n\n## Constrain in each time point\n\n```{r}\n## Constrain function\ncontrain <- function(data1,data2){\n  new_data <- data.frame(age = data2$age,\n                         fit = rep(0,nrow(data2)),\n                         lwr = rep(0,nrow(data2)),\n                         up = rep(0,nrow(data2)))\n  for (i in 1:512){\n    if(data2$fit[i] < data1$fit[i]){\n      new_data$fit[i] <- data1$fit[i]\n      new_data$lwr[i] <- data1$lwr[i]\n      new_data$upr[i] <- data1$upr[i]\n    } else{\n      new_data$fit[i] <- data2$fit[i]\n      new_data$lwr[i] <- data2$lwr[i]\n      new_data$upr[i] <- data2$upr[i]\n    }\n  }\n  \n  new_data$fit <- gam(fit ~ s(age),data = new_data)$fitted.values\n  new_data$lwr <- gam(lwr ~ s(age),data = new_data)$fitted.values\n  new_data$upr <- gam(upr ~ s(age),data = new_data)$fitted.values\n  \n  return(new_data)\n}\n\ntes1222 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %>% \n  predictg() \ntes0423 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %>% \n  predictg() \ntes0823 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t823) %>% \n  predictg() \ntes1223 <- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t1223) %>% \n  predictg() \n\n## contrain \ncon423 <- contrain(tes1222,tes0423)\ncon823 <- contrain(con423,tes0823)\ncon1223 <- contrain(con823,tes1223)\n\n\nc423 <- con423 %>% plot_gam(date = 423) \nc823 <- con823 %>% plot_gam(date = 823) \nc1223 <- con1223 %>% plot_gam(date = 1223) \n\n```\n\n```{r}\n#| fig-width: 15\n#| fig-height: 8\n#| out-width: \"100%\"\n\ngam_contrain <- g1222 | c423 | c823 | c1223\n\ngam_contrain/\n  ts\n```\n\n# Model age and time at the same time\n\n```{r}\nlibrary(plotly)\nlibrary(scam)\n```\n\n```{r}\natdf <- rbind(t1222,t423,t823,t1223) %>%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day)) %>%\n  select(age,col_date,pos)\n```\n\n```{r}\nhead(atdf)\n```\n\n## Fit with SCAM model\n\nmpi is monotone increasing SCOP-splines: bs=\"mpi\". To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\n\nModel\n\n```{r}\ns1 <- scam(pos~s(age)+s(col_date,bs = \"mpi\"),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))\n```\n\n## 3D plot\n\n```{r}\nage_val <- c(.1,1:14)\n\ncollection_date_val <- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 512)\n\nnew_data <- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf <- cbind(new_data,\n               fit = 100 * predict(s1, new_data,\"response\"))\n\nscamf$col_date <- as.Date(scamf$col_date)\n\n```\n\n```{r}\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %>%\n  add_surface()%>%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%>% layout(autosize = F, width = 890, height = 1000, margin = m)\n```\n\n## 2-D plot\n\n```{r}\npredict2 <- function(x, ci = .95, le = 512, m = 100){\n  p <- (1 - ci) / 2\n  link_inv <- x$family$linkinv\n  dataset <- x$model\n  n <- nrow(dataset) - length(x$coefficients)\n  age_range <- range(dataset$age)\n  ages <- seq(age_range[1], age_range[2], le = le)\n  date_range <- range(dataset$col_date)\n  dates <- seq(date_range[1], date_range[2], le = le)\n\nout <- x |>\n  predict(expand.grid(age = ages,\n                        col_date = dates), se.fit = TRUE) |>\n  extract(c(\"fit\", \"se.fit\")) %>%\n  c(expand.grid(age = ages,\n               date = dates),\n    .) |>\n  as_tibble() |>\n  mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |>\n  select(-se.fit)\n\nreturn(out)\n}\n```\n\n```{r}\nout <- predict2(s1)\n\nout$date <- as.Date(out$date)\n```\n\n```{r}\ns1222 <- out %>% filter(month(date) == 12 & year(date) == 2022) %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\ns423 <- out %>% filter(month(date) == 4 & year(date) == 2023) %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\ns823 <- out %>% filter(month(date) == 8 & year(date) == 2023) %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\ns1223 <- out %>% filter(month(date) == 12 & year(date) == 2023) %>%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n```\n\n```{r}\n#| fig-width: 13\n#| fig-height: 8\n#| out-width: \"100%\"\nresult_sero <- s1222 | s423 | s823 | s1223\n\nresult_sero/\n  ts\n```\n\n## GLM with PAVA algorithm\n\nIn chapter 9 of 2012 serobook, there are an argument that following Friedman and Tibshirani (1984) and Mammen et al. (2001), Shkedy et al. (2003) suggested to estimate π(a) and λ(a) using local polynomials and smoothing splines and, if necessary, **a posteriori apply the PAVA to isotonize the resulting estimate**.\n\nWithout loss of generality they assume $\\pi(a_{1}) \\leq \\pi(a_{2}) \\leq ...\\leq \\pi(a_{i})$. The PAVA states that if $\\pi(a_{i}) \\leq \\pi(a_{i - 1})$ these values need to be “pooled.” In other words $\\hat{\\pi}(a_{i})$ and $\\hat{\\pi}(a_{i-1})$ are both replaced by\n\n$$\\frac{\\hat{\\pi}(a_{i})+\\hat{\\pi}(a_{i-1})}{2}$$\n\nIn my case, I fitted the glm to seropositive by age and time, then applied PAVA for fitted seroprevalence and 95% CI of each age group.\n\n```{=html}\n<details>\n  <summary> PAVA algorithm </summary>\n```\n```{r}\n#| code-fold: false\npavit <- function(pos=pos,tot=rep(1,length(pos))){\n  gi<- pos/tot\n  pai1 <- pai2 <- gi\n  N <- length(pai1)\n  ni<-tot\n  for(i in 1:(N - 1)) {\n    if(pai2[i] > pai2[i + 1]) {\n      pool <- (ni[i]*pai1[i] + ni[i+1]*pai1[i + 1])/(ni[i]+ni[i+1])\n      pai2[i:(i + 1)] <- pool\n      k <- i + 1\n      for(j in (k - 1):1) {\n        if(pai2[j] > pai2[k]) {\n          pool.2 <- sum(ni[j:k]*pai1[j:k])/(sum(ni[j:k]))\n          pai2[j:k] <- pool.2\n        }\n      }\n    }\n  }\n  return(list(pai1=pai1,pai2=pai2))\n}\n```\n\n</details>\n\n```{=html}\n<details>\n  <summary> Model </summary>\n```\n```{r}\n#| code-fold: false\nmod1 <- glm(pos ~ age * col_date + I(age ^ 2) * col_date +\n              I(age ^ 3) * col_date + I(age ^ 4) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\n```\n\n</details>\n\n```{r}\ndataset <- mod1$data\nage_val <- c(.1,1:15)\ncollection_date_val <- seq(min(dataset$col_date),\n                           max(dataset$col_date),le=512)\n\nnew_data <- expand.grid(age = age_val, col_date = collection_date_val)\n\nprdcts <- cbind(new_data,predict(mod1, new_data,type = \"link\",se.fit = TRUE) |> as.data.frame()) %>%  \n  select(-c(\"residual.scale\")) %>% \n  mutate(fit2 = mod1$family$linkinv(fit),\n         lwr = mod1$family$linkinv(fit - 1.96*se.fit),\n         upr = mod1$family$linkinv(fit + 1.96*se.fit))|>\n  arrange(col_date) |>\n  mutate(across(col_date, as_date))\n```\n\n### **Unconstrained plot**\n\n```{r}\nplot_ly(prdcts, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit2*100, 16),\n        showscale = F) %>%\n  add_surface()%>%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%>% layout(autosize = F, width = 890, height = 1000, margin = m)\n```\n\n### **Applying PAVA algorithm**\n\n```{r}\ndf_c <- data.frame()\nfor (i in 1:length(age_val)){\n  pred <- prdcts %>% filter(age == age_val[i])\n  pred$fitc <- pavit(as.numeric(pred$fit2))$pai2*100\n  pred$l_fitc <- pavit(as.numeric(pred$lwr))$pai2*100\n  pred$u_fitc <- pavit(as.numeric(pred$upr))$pai2*100\n  df_c <- rbind(df_c,pred)\n}\n\ndf_c <- df_c[order(as.Date(df_c$col_date, format=\"%m/%d/%Y\")),]\n```\n\n```{r}\nplot_ly(df_c, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fitc, 16),\n        showscale = F) %>%\n  add_surface()%>%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%>% layout(autosize = F, width = 890, height = 1000, margin = m)\n```\n\n```{=html}\n<details>\n  <summary> smooth_plot function </summary>\n```\n```{r}\n#| code-fold: false\nsmooth_plot <- function(data,month,year){\n  \n  clo <- case_when(year == 2022 & month == 12 ~ \"Dec 2022\",\n                   year == 2023 & month == 4 ~ \"Apr 2023\",\n                   year == 2023 & month == 8 ~ \"Aug 2023\",\n                   year == 2023 & month == 12 ~ \"Dec 2023\")\n  \n  clo2 <- case_when(year == 2022 & month == 12 ~ \"#0808cf\",\n                    year == 2023 & month == 4 ~ \"#ed097b\",\n                    year == 2023 & month == 8 ~ \"#ed6b00\",\n                    year == 2023 & month == 12 ~ \"#33516b\")\n  \n  dtaa <- case_when(year == 2022 & month == 12 ~ t1222,\n                    year == 2023 & month == 4 ~ t423,\n                    year == 2023 & month == 8 ~ t823,\n                    year == 2023 & month == 12 ~ t1223)\n  \n  ccc <- data %>% filter(year(col_date) == year & \n                           month(col_date) == month) %>% \n          select(c(\"age\",\"fitc\",\"l_fitc\",\"u_fitc\"))\n  \n  ss <- ccc %>% mutate(age2 = ksmooth(ccc$age ,ccc$fitc ,kernel=\"normal\",bandwidth=2)$x,\n                 fit2c = ksmooth(ccc$age ,ccc$fitc ,kernel=\"normal\",bandwidth=2)$y,\n                 uprc = ksmooth(ccc$age ,ccc$u_fitc ,kernel=\"normal\",bandwidth=2)$y,\n                 lwrc = ksmooth(ccc$age ,ccc$l_fitc ,kernel=\"normal\",bandwidth=2)$y)\n    \n  ss %>%  \n    ggplot(aes(x = age2,y = fit2c))+\n    geom_line(aes(col = clo))+\n    geom_ribbon(aes(x = age2,y = fit2c,\n                    ymin=lwrc, ymax=uprc),alpha = 0.5,fill = clo2)+\n    ylim(0,101)+\n    theme_minimal() +\n    scale_color_manual(name = \"Y series\",\n                       values = c(clo = clo2))+\n    labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n    geom_point(data= dtaa, aes(x = age, m * pos + 1),\n               shape = \"|\",\n               col = clo2)+\n    theme(\n      axis.text.x = element_text(size = 15),\n      axis.text.y = element_text(size = 15),\n      legend.position = \"hide\",\n      legend.text = element_text(size = 15),\n      axis.title.x = element_text(size = 15),\n      axis.title.y = element_text(size = 15))+\n    annotate(\"text\", x = 3, y = 90, label = c(clo),size = 6)  \n}\n```\n\n</details>\n\n```{r}\n#| fig-width: 13\n#| fig-height: 8\n#| out-width: \"100%\"\n\np1222 <- smooth_plot(data = df_c,month = 12,year = 2022)\np423 <- smooth_plot(data = df_c,month = 4,year = 2023)\np823 <- smooth_plot(data = df_c,month = 8,year = 2023)\np1223 <- smooth_plot(data = df_c,month = 12,year = 2023)\n\nresult_sero2 <- p1222 | p423 | p823 | p1223\n\nresult_sero2/\n  ts\n\n```\n\n# Spatial distribution of serum sample\n\n```{r}\ncleaned <- read_csv(\"D:/OUCRU/HCDC/project phân tích sero quận huyện/cleaned.csv\")\n\nsero <- rbind(t1222,t1223,t423,t823)\n\nsero_add <- full_join(cleaned,sero, by =  c(\"id\" = \"id\"))\n\ndata_pt <- sero_add %>% filter(!is.na(age)&!is.na(qhchuan)) %>% \n  select(qhchuan,age,col_month,col_year,pos) %>% \n  as.data.frame()\n\n# HCMC map\nmap_path <- \"D:/OUCRU/HCDC/project phân tích sero quận huyện/\"\nvn_qh <- st_read(dsn = file.path(map_path, \"gadm41_VNM.gpkg\"), layer = \"ADM_ADM_2\")\n\nvn_qh1 <- vn_qh %>%\n  clean_names() %>%     ## cho thành chữ thường\n  filter(\n    str_detect(\n      name_1,\n      \"Hồ Chí Minh\"\n    )\n  )\nqhtp <- vn_qh1[-c(14,21),]\n\nqhtp$geom[qhtp$varname_2 == \"Thu Duc\"] <- vn_qh1[c(\"21\",\"24\",\"14\"),] %>%\n  st_union()\n\nqhtp <- qhtp %>% st_cast(\"MULTIPOLYGON\")\nlibrary(stringi)\nqhtp$varname_2 <- stri_trans_general(qhtp$varname_2, \"latin-ascii\") %>%\n  tolower() %>%\n  str_remove(\"district\") %>%\n  trimws(which = \"both\")\n\nqhtp$nl_name_2 <- c(\"BC\",\"BTân\",\"BT\",\"CG\",\"CC\",\"GV\",\n                    \"HM\",\"NB\",\"PN\",\"1\",\"10\",\"11\",\"12\",\n                    \"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"TB\",\n                    \"TP\",\"TĐ\")\n```\n\n```{r}\n## function\nget_sp <- function(month,year){\n  data_pt %>% filter(col_month == month & col_year == year) %>% \n    select(-age) %>% group_by(qhchuan) %>% count()  %>% \n    as.data.frame() %>%\n    dplyr::mutate(pre = n / sum(n))  \n}\n\nplot_cover <- function(data,map){\n  output <- left_join(map, data.frame(data), by = join_by(varname_2 == qhchuan))\n  output %>% ggplot() +\n    geom_sf(aes(fill = pre),show.legend = T)+\n    # scale_fill_continuous(low=\"yellow\", high=\"red\",\n    #                       guide=\"colorbar\",na.value=\"white\",\n    #                       name = \"Percentage\",\n    #                       limits = c(0,20))+\n    # geom_sf_text(aes(label = nl_name_2),size=2.5)+\n    scale_fill_gsea(na.value = \"white\",\n                    breaks = seq(0,0.2,by = 0.05),\n                    limits = c(0, 0.2),\n                    name = \"Percentage\",\n                    labels = scales::label_percent())+\n    theme_void()  \n}\n```\n\n```{r}\nsp1222 <- get_sp(12,2022)\nsp0423 <- get_sp(4,2023)\nsp0823 <- get_sp(8,2023)\nsp1223 <- get_sp(12,2023)\n\np1222 <- plot_cover(data = sp1222,map = qhtp)\np423 <- plot_cover(data = sp0423,map = qhtp)\np823 <- plot_cover(data = sp0823,map = qhtp)\np1223 <- plot_cover(data = sp1223,map = qhtp)\n\nserum_dis <- plot_grid(p1222,p423,p823,p1223,\n          # labels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\"),\n          ncol = 4)\n```\n\n# Final visualization\n\n## Unconstrained fit\n\n```{r}\n#| fig-width: 15\n#| fig-height: 8\n#| out-width: \"100%\"\nglmfit <- plot1222 | plot0423 | plot0823 | plot1223\n\nserum_dis/\n  glmfit/\n  ts\n\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.svg\",dpi = 500,width = 15,height = 8,bg = \"white\")\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.png\",dpi = 500,width = 15,height = 8,bg = \"white\")\n```\n\n## Constrained fit\n\n```{r}\n#| fig-width: 15\n#| fig-height: 8\n#| out-width: \"100%\"\n\nserum_dis/\n  result_sero2/\n  ts\n\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/con.svg\",dpi = 500,width = 15,height = 8,bg = \"white\")\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/con.png\",dpi = 500,width = 15,height = 8,bg = \"white\")\n```\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"svg","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"sero.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","knitr":{"opts_chunk":{"out.width":"100%","out.height":"100%"}},"editor":"visual","theme":"cosmo","code-copy":true},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"sero.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"knitr":{"opts_chunk":{"out.width":"100%","out.height":"100%"}},"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}