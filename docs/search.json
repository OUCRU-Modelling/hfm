[
  {
    "objectID": "analysis_N.html#new-method",
    "href": "analysis_N.html#new-method",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "5.1 New method",
    "text": "5.1 New method\n\n\nCode\nbeta_from_alpha &lt;- function(alpha, mu) alpha * (1 - mu) / mu\n\nbeta_parameters &lt;- function(L, U, mu, ci = .95, interval = c(.01, 1e3), ...) {\n  p &lt;- (1 - ci) / 2\n  objective &lt;- function(alpha) {\n    beta &lt;- beta_from_alpha(alpha, mu)\n    q025 &lt;- qbeta(p, alpha, beta)\n    q975 &lt;- qbeta(1 - p, alpha, beta)\n    (q025 - L)^2 + (q975 - U)^2\n  }\n  alpha_est &lt;- optimize(objective, interval, ...)$minimum\n  c(alpha = alpha_est, beta = beta_from_alpha(alpha_est, mu))\n}\n\n\n\n\nCode\nsimulate_values &lt;- function(col = 6, ages = seq(0, 15, le = 512),\n                            ci = .95, interval = c(.01, 1e3), n = 100, ...) {\n  p &lt;- (1 - ci) / 2\n  dat &lt;- filter(hfmd, collection == col)\n  mod &lt;- gam(pos ~ s(age), binomial, dat)\n  df &lt;- nrow(dat) - length(coef(mod))\n  link_inv &lt;- family(mod)$linkinv\n  predict(mod, list(age = ages), se.fit = TRUE) |&gt; \n    magrittr::extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt; \n    mutate(lwr = link_inv(fit + qt(    p, df) * se.fit),\n           upr = link_inv(fit + qt(1 - p, df) * se.fit),\n           fit = link_inv(fit)) |&gt; \n    select(- se.fit) |&gt; \n    mutate(est = pmap(list(lwr, upr, fit), beta_parameters, ci, interval, ...)) |&gt; \n    unnest_wider(est) |&gt; \n    mutate(meancheck = map2_dbl(alpha, beta, ~ .x / (.x + .y)),\n           rndvalues = map2(alpha, beta, ~ rbeta(n, .x, .y)))\n}\n\n\n\n\nCode\nmean_col_dates &lt;- hfmd |&gt; \n  group_by(collection) |&gt; \n  summarise(mean_col_date = mean(col_date2)) |&gt; \n  pull(mean_col_date)\n\n\n\n\nCode\nset.seed(123)\nsimulations &lt;- map(6:9, simulate_values)\n\n\n\n\nCode\nl &lt;- length(simulations[[1]]$rndvalues[[1]])\n\nsim_data &lt;- map2(simulations, mean_col_dates,\n                 ~ .x |&gt;\n                   select(age, rndvalues) |&gt; \n                   mutate(coll_time = list(rep(.y, l)))) |&gt; \n  bind_rows()\n\n\n\n\nCode\nN &lt;- length(mean_col_dates) * l\nci &lt;- .95\n\np &lt;- (1 - ci) / 2\n\nmod &lt;- sim_data |&gt; \n  filter(age == 0) |&gt; \n  select(-age) |&gt; \n  map(unlist) |&gt; \n  as_tibble() |&gt; \n  mutate(pos = rbinom(N, 1, rndvalues)) %&gt;%\n  scam(pos ~ s(coll_time, bs = \"mpi\"), binomial, .)\n\ndf &lt;- N - length(coef(mod))\n\nlink_inv &lt;- family(mod)$linkinv\n\nmod |&gt;\n  predict(list(coll_time = mean_col_dates), se.fit = TRUE) |&gt;\n  magrittr::extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(coll_time = list(mean_col_dates), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = link_inv(fit + qt(    p, df) * se.fit),\n           upr = link_inv(fit + qt(1 - p, df) * se.fit),\n           fit = link_inv(fit)) |&gt;\n    select(- se.fit)\n\n\n# A tibble: 4 × 4\n  coll_time       fit       lwr       upr\n      &lt;dbl&gt; &lt;dbl[1d]&gt; &lt;dbl[1d]&gt; &lt;dbl[1d]&gt;\n1    19349.    0.0513    0.0280    0.0921\n2    19457.    0.0513    0.0280    0.0922\n3    19580.    0.252     0.197     0.316 \n4    19700.    0.256     0.199     0.321 \n\n\n28”:\n\n\nCode\nmodels &lt;- sim_data |&gt; \n  group_by(age) |&gt; \n  group_map(~ .x |&gt;\n              map(unlist) |&gt; \n              as_tibble() |&gt; \n              mutate(pos = rbinom(N, 1, rndvalues)) %&gt;%\n              scam(pos ~ s(coll_time, bs = \"mpi\"), binomial, .))\n\n\n\n\nCode\na &lt;- map2(models,\n          N - map_int(models, ~ length(coef(.x))),\n          ~{\n            linkinv &lt;- family(.x)$linkinv\n            .x |&gt; \n            predict(list(coll_time = mean_col_dates), se.fit = TRUE) |&gt; \n            magrittr::extract(c(\"fit\", \"se.fit\")) %&gt;%\n            c(coll_time = list(mean_col_dates), .) |&gt;\n            as_tibble() |&gt; \n            mutate(lwr = link_inv(fit + qt(    p, .y) * se.fit),\n                   upr = link_inv(fit + qt(1 - p, .y) * se.fit),\n                   fit = link_inv(fit)) |&gt; \n            select(- se.fit)  \n          } ) |&gt;\n  setNames(unique(sim_data$age)) |&gt; \n  bind_rows(.id = \"age\") |&gt; \n  mutate(across(age, as.numeric))\n\n\n\n\nCode\na |&gt; arrange(coll_time, age)\n\n\n# A tibble: 2,048 × 5\n      age coll_time       fit       lwr       upr\n    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl[1d]&gt; &lt;dbl[1d]&gt; &lt;dbl[1d]&gt;\n 1 0         19349.    0.0762    0.0448    0.127 \n 2 0.0294    19349.    0.0611    0.0351    0.104 \n 3 0.0587    19349.    0.0427    0.0201    0.0881\n 4 0.0881    19349.    0.0642    0.0341    0.117 \n 5 0.117     19349.    0.0490    0.0210    0.110 \n 6 0.147     19349.    0.0510    0.0278    0.0919\n 7 0.176     19349.    0.0494    0.0209    0.112 \n 8 0.205     19349.    0.0859    0.0541    0.134 \n 9 0.235     19349.    0.0494    0.0209    0.112 \n10 0.264     19349.    0.0411    0.0208    0.0795\n# ℹ 2,038 more rows\n\n\n\n\nCode\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19349) |&gt; \n  with({\n    plot(age, fit, ylim = 0:1)\n  })\n\n\n\n\n\n\n\nCode\nages &lt;- seq(0, 15, le = 512)\n\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19349) %&gt;%\n  gam(fit ~ s(age), betar, .) |&gt; \n  predict(list(age = ages), \"response\")  %&gt;% \n  plot(ages, .,type = \"l\",ylim = 0:1)\n\n\n\n\n\n\n\nCode\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19349) |&gt; \n  with({\n    plot(age, fit, ylim = 0:1)\n  })\n\n\n\n\n\n\n\nCode\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19457) |&gt; \n  with({\n    plot(age, fit, ylim = 0:1)\n  })\n\n\n\n\n\n\n\nCode\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19580) |&gt; \n  with({\n    plot(age, fit, ylim = 0:1)\n  })\n\n\n\n\n\n\n\nCode\na |&gt; \n  mutate(across(coll_time, round)) |&gt; \n  filter(coll_time == 19700) |&gt; \n  with({\n    plot(age, fit, ylim = 0:1)\n  })"
  },
  {
    "objectID": "analysis_N.html#plot",
    "href": "analysis_N.html#plot",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "5.2 Plot",
    "text": "5.2 Plot\n\n\nCode\nsmothh &lt;- function(timee){\n  dt_fit &lt;- a |&gt; \n    mutate(across(coll_time, round)) |&gt; \n    filter(coll_time == timee)\n  \n  mod_fit &lt;- gam(fit ~ s(age, k = 30), data = dt_fit)\n  mod_lwr &lt;- gam(lwr ~ s(age, k = 30), data = dt_fit)\n  mod_upr &lt;- gam(upr ~ s(age, k = 30), data = dt_fit)\n  \n  # Predict smooths\n  tibble(age = seq(min(dt_fit$age), max(dt_fit$age), length.out = 500)) %&gt;%\n    mutate(\n      fit = predict(mod_fit, newdata = .),\n      lwr = predict(mod_lwr, newdata = .),\n      upr = predict(mod_upr, newdata = .)\n    )  \n}\n\n\n\n\nCode\nlibrary(tidyverse)\n\nmap(c(19349,19457,19580,19700),smothh) |&gt;\n  bind_rows() %&gt;% \n  mutate(col_time = rep(c(19349,19457,19580,19700),each = 500),\n         col_time = factor(col_time,\n                           levels = c(19349,19457,19580,19700),\n                           labels = c(\"Dec 2022\",\n                                      \"Apr 2023\",\n                                      \"Aug 2023\",\n                                      \"Dec 2023\"))) %&gt;% \n  ggplot(aes(x = age, y = fit)) +\n  geom_ribbon(aes(ymin = lwr, ymax = upr), fill = \"blue\", alpha = 0.3) +\n  geom_line(color = \"blue\") +\n  facet_wrap(~col_time,nrow = 1)+\n  labs(y = \"Smoothed fit\", x = \"Age\") +\n  ylim(c(0,1))+\n  theme_minimal()"
  },
  {
    "objectID": "sero_description.html#number-of-samples-per-district",
    "href": "sero_description.html#number-of-samples-per-district",
    "title": "3  Serological data description",
    "section": "3.1 Number of samples per district",
    "text": "3.1 Number of samples per district\n\n\nCode\ndata_pt %&gt;%\n  # filter(qhchuan == data_pt$qhchuan[1]) %&gt;%\n  ggplot() +\n  geom_bar(aes(x = col_time))+\n  scale_x_discrete(limits = c(\"Dec 2022\",\n                              \"Apr 2023\",\n                              \"Aug 2023\",\n                              \"Dec 2023\"))+\n  scale_y_continuous(breaks = seq(0,14,by=4),\n                     limits = c(0,14))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  labs(x = \"Collection date\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 1"
  },
  {
    "objectID": "sero_description.html#age-serological-profiles-of-each-districts",
    "href": "sero_description.html#age-serological-profiles-of-each-districts",
    "title": "3  Serological data description",
    "section": "3.2 Age serological profiles of each districts",
    "text": "3.2 Age serological profiles of each districts\n\n\nCode\n# data_pt %&gt;%\n#   ggplot() +\n#   geom_bar(aes(fill = age_gr2,x = factor(col_time,levels = c(\"Dec 2022\",\n#                                                              \"Apr 2023\",\n#                                                              \"Aug 2023\",\n#                                                              \"Dec 2023\"))))+\n#   scale_y_continuous(breaks = seq(0,14,by=4),\n#                      limits = c(0,14))+\n#   scale_x_discrete(limits = c(\"Dec 2022\",\n#                               \"Apr 2023\",\n#                               \"Aug 2023\",\n#                               \"Dec 2023\"))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(fill = \"Age group\",y = \"Number of samples\",\n#        x =\"Collection date\")+\n#   theme_bw()+\n  ## axis.text.x = element_text(vjust = 0.5,angle = 45)\n  # theme(legend.position = \"top\")\n\n# data_pt %&gt;% ggplot() +\n#   geom_density(aes(x = age))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(x = \"Age group\",y = \"Number of samples\")+\n#   theme_bw()\n\ndata_pt %&gt;% ggplot() +\n  geom_bar(aes(x = age_gr3))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  scale_y_continuous(breaks = seq(0,10,by = 2),\n                     limits = c(0,10))+\n  labs(x = \"Age group\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 2\n\n\n\n\nFig 2 shows the age structure of each district’s collection times. I divided continuous age variables into five groups: &lt;0 & ≤3 years old,&lt;3 & ≤6 years old,&lt;6 & ≤9 years old, &lt;9 & ≤12 years old,&lt;12 & ≤15 years old to facilitate the visualization (instead of visualizing 15 age group).\n\n\nCode\nselect_dis &lt;- c(\"10\", \"11\", \"12\", \"8\", \"binh chanh\", \"binh tan\", \"cu chi\", \"hoc mon\", \"tan binh\", \"tan phu\")\n\ndata_sle &lt;- data_pt %&gt;% filter(qhchuan %in% select_dis)\n\n## smooth function to fit\nbinomial_smooth &lt;- function(...) {\n    geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...)\n}\n\n\nIn this part, I used a generalized linear model for districts to fit the seropositive by age with formula \\(seropositive \\sim age + age^{2}\\).\n\n\nCode\n# data_sle  %&gt;% \n#   ggplot(aes(x = age, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(vars(qhchuan,\n#                   factor(col_time,levels = c(\"Dec 2022\",\n#                                              \"Apr 2023\",\n#                                              \"Aug 2023\",\n#                                              \"Dec 2023\"))),ncol=4)+\n#   binomial_smooth(formula = y ~ x + I(x^2) )+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()\n\ndata_pt %&gt;% \n  ggplot(aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  # geom_point(shape = \"|\",size = 2,\n  #            col = \"#0808cf\")+\n  facet_wrap(~qhchuan,\n             ncol=5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Age\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\nFig 3\n\n\n\n\nFig 3 shows the result of the fitting process: visualization with seroprevalence (solid line) with a 95% confidence interval (coloured area) and serum sample (point)."
  },
  {
    "objectID": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "href": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "title": "3  Serological data description",
    "section": "3.3 Seroprevalence in the same age group over time",
    "text": "3.3 Seroprevalence in the same age group over time\n\n\nCode\ndata_pt$col_date &lt;- make_date(data_pt$col_year,data_pt$col_month,data_pt$col_day)\ndata_pt$age_gr &lt;- factor(data_pt$age_gr,\n                         levels = c(unique(data_pt$age_gr)))\n\n\n\n\nCode\n# | fig-width: 13\n# | fig-height: 8\n# | out-width: \"100%\"\n# | fig-cap: \"Fig 4\"\n\n# ggplot(data_pt,\n#        aes(x = col_date, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(~age_gr,\n#              ncol = 5)+\n#   binomial_smooth(formula = y ~ x + I(x^2))+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()+\n#   theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n##Fig 4 gives information on the seroprevalence of the 15 age groups. The seroprevalence of the age group 1-5 years old increased, which reflect the outbreak's impact in seroprevalence. The outbreak began in June, and 95% of symptomatic cases were aged 0-6 years old; and seroprevalence result also increased in 1-6 years old. However, there is a contrast; our serological shows an increase in the 2-3 years old age group in the 2nd peak (September), while the leading symptomatic group contributing to this peak is children aged 0-2 years old.\n\n\nI combined all samples for four collection times and fitted the GLM model with formula \\(seropositive \\sim age + age^{2}\\) for each age group. Fig 4 show the seroprevalence over time in the same age group.\nFor our assumption, asymptomatic cases of children who went to school infected their siblings. As you can see, the high seroprevalence of children at school age at the beginning of 2023 may cause the infection in their siblings aged 0-6, who have low seroprevalence simultaneously.\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n\n\n\n\nFig 4"
  },
  {
    "objectID": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "href": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "title": "3  Serological data description",
    "section": "3.4 Investigate location of 0-3 year-old serosample",
    "text": "3.4 Investigate location of 0-3 year-old serosample\n\n3.4.1 Total collected samples\n\n\nCode\n# Split by col_time\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\") %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n3.4.2 Total collected positive samples\n\n\nCode\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\" & pos == 1) %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of positive samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "fig_manu.html#figure-1-heat-map",
    "href": "fig_manu.html#figure-1-heat-map",
    "title": "4  Manuscript figure",
    "section": "4.1 Figure 1: heat map",
    "text": "4.1 Figure 1: heat map\n\n\nCode\nlibrary(paletteer)\ndf23 &lt;- df1 %&gt;% filter(year(adm_week) == 2023)\n\nco &lt;- data.frame()\n\nfor (i in 0:6){\n  gen &lt;- seq(0,1,le=52) + i\n  co &lt;- rbind(co,gen)\n}\n\n\ndf23 &lt;- df1 %&gt;% filter(year(adm_date) == 2023)\nwwww &lt;- slide_age(time1 = df23$adm_date,\n                  age1 =  df23$age1,\n                  w1 = 7, s1=7)\n\nch &lt;- data.frame(date = wwww$adat$date,\n                 c0 = as.numeric(co[1,]),\n                 c1 = as.numeric(co[2,]),\n                 c2 = as.numeric(co[3,]),\n                 c3 = as.numeric(co[4,]),\n                 c4 = as.numeric(co[5,]),\n                 c5 = as.numeric(co[6,]))\n\nleb_month &lt;- c(\"Jan\",rep(\"\",3),\"Feb\",rep(\"\",3),\"Mar\",rep(\"\",4),\"Apr\",rep(\"\",3),\n               \"May\",rep(\"\",4),\"Jun\",rep(\"\",3),\"Jul\",rep(\"\",3),\"Aug\",rep(\"\",4),\n               \"Sep\",rep(\"\",3),\"Oct\",rep(\"\",3),\"Nov\",rep(\"\",4),\"Dec\",rep(\"\",3))\n\nts &lt;- data.frame(wwww$wdat$date,wwww$wdat$age) %&gt;%\n  filter(!is.na(wwww$wdat$date) & !is.na(wwww$wdat$age)) %&gt;%\n  count(wwww$wdat$date) %&gt;%\n  set_colnames(c(\"time\",\"n\")) %&gt;% \n  mutate(peak = c(rep(\"1st\",36),rep(\"2nd\",nrow(.)-36))) %&gt;% \n  ggplot(aes(x = time, y = n,fill = peak)) +\n  geom_col(alpha = 0.6,color=\"black\") +\n  geom_vline(xintercept = 36.5) +\n  theme_minimal()+\n  scale_y_continuous(name = \"Cases\",\n                     breaks = seq(0,3000,by = 1000),\n                     limit =c(0,3000), \n                     minor_breaks = NULL)+\n  scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\"))+\n  labs(tag = \"A\")+ \n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18))\n\nhm &lt;- ggplot(data=wwww$wdat, aes(x=date, y=age)) +\n      stat_density(\n        aes(fill = after_stat(density)),\n        geom = \"raster\",\n        position = \"identity\"\n      )+\n      scale_fill_paletteer_c(\"grDevices::Inferno\")+\n      # scale_fill_gradient(low=\"#040404FF\", high= \"#FFFE9EFF\")+\n      # scale_fill_distiller(palette = \"Blues\")+\n      theme_minimal()+\n      scale_y_reverse(name = \"Age (years)\",lim= rev(c(0,6)),breaks = seq(0,6))+\n      scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n      labs(tag = \"B\",fill = \"Density\")+\n      # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8))+\n      geom_line(data = ch,aes(x = date,y = c0),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c1),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c2),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c3),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c4),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c5),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      theme(axis.title.y = element_text(size = 18),\n            axis.ticks.x = element_blank(),\n            legend.position = \"bottom\",\n            plot.tag = element_text(face = \"bold\", size = 18),\n            axis.title.x = element_text(size = 18),\n            axis.text.x = element_text(size = 18),\n            axis.text.y = element_text(size = 18),\n            legend.text = element_text(size = 15),\n            legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\")) \n\nfi_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &lt;= as.Date(\"2023-09-03\")&\n            !is.na(adm_date) & !is.na(age1)))\n\nse_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &gt; as.Date(\"2023-09-03\")) &\n           !is.na(adm_date) & !is.na(age1))\n\ndata &lt;- data.frame(\n  peak = c( rep(\"1st wave\",nrow(data.frame(se_peak$age1))),\n            rep(\"2nd wave\",nrow(data.frame(fi_peak$age1)))),\n  age = c( fi_peak$age1, se_peak$age1 )\n)\n\n## density plot\n\nad &lt;- ggplot(data=data, aes(x=age, group=peak, fill=peak)) +\n      geom_density(alpha = 0.6) +\n      scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\")) +\n      scale_x_reverse(limit = c(6,0),breaks = seq(0,6,by=1), \n                      minor_breaks = NULL)+\n      scale_y_continuous(minor_breaks = NULL)+\n      coord_flip()+\n      theme_minimal()+\n      labs(x = \"Age\", y =\"Density\",tag = \"C\",fill = \"Outbreak\")+\n      theme(axis.title.y = element_blank(),\n            axis.ticks.x = element_blank(),\n            legend.position = \"bottom\",\n            plot.tag = element_text(face = \"bold\", size = 18),\n            axis.title.x = element_text(size = 18),\n            axis.text.x = element_text(size = 18),\n            axis.text.y = element_text(size = 18),\n            legend.text = element_text(size = 18),\n            legend.title = element_text(size = 18))\n\n\n\n\nCode\n((ts/hm)|(plot_spacer()/ad))+\n  plot_layout(widths = c(2.5,1))\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig1.svg\",\n       width = 15,height = 8,dpi = 500)\n\n\n\n\nCode\ndata %&gt;% \n  tbl_summary(by = peak,\n              digits = list(all_continuous() ~ 3)) %&gt;% \n  add_overall() %&gt;% \n  add_p()\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Overall\nN = 43,3721\n      1st wave\nN = 20,3581\n      2nd wave\nN = 23,0141\n      p-value2\n    \n  \n  \n    age\n2.536 (1.679, 3.723)\n2.649 (1.784, 3.726)\n2.393 (1.548, 3.721)\n&lt;0.001\n  \n  \n  \n    \n      1 Median (Q1, Q3)\n    \n    \n      2 Wilcoxon rank sum test"
  },
  {
    "objectID": "fig_manu.html#figure-2-compare-attack-rate-and-seroprevalence-per-age-group-over-time",
    "href": "fig_manu.html#figure-2-compare-attack-rate-and-seroprevalence-per-age-group-over-time",
    "title": "4  Manuscript figure",
    "section": "4.2 Figure 2: Compare attack rate and seroprevalence per age group over time",
    "text": "4.2 Figure 2: Compare attack rate and seroprevalence per age group over time\n\n\nCode\ndf23$agr &lt;- cut(df23$age1, breaks = c(0, 1, 2, 3, 4,5,6,Inf), right = F)\ndf23$agr &lt;- factor(df23$agr, labels = c(\"[0-1)\", \"[1-2)\", \"[2-3)\",\n                                        \"[3-4)\",\"[4-5)\",\"[5-6)\",\"6+\"))\n\ndf23$age_gr2 &lt;- cut(df23$age1+0.00000001, breaks = c(seq(0, 15, by = 3),82),\n                       labels = c(\"&lt;0 & ≤3 year-old\",\n                                  \"&lt;3 & ≤6 year-old\",\n                                  \"&lt;6 & ≤9 year-old\",\n                                  \"&lt;9 & ≤12 year-old\",\n                                  \"&lt;12 & ≤15 year-old\",\n                                  \"16+ \"))\n\nhcm19 &lt;- census2019 %&gt;% filter(province == \"Thành phố Hồ Chí Minh\")\n\nhcm19$district &lt;- hcm19$district %&gt;%\n  str_remove_all(\"Quận|Huyện\") %&gt;%\n  str_replace_all(\n    c(\"\\\\b2\\\\b|\\\\b9\\\\b\"  = \"Thủ Đức\")) %&gt;%\n  trimws(which = \"both\")\n\n\n\n\nhcm19$age2 &lt;- word(hcm19$age,end = 1) |&gt; as.numeric()\n\nhcm19$age3 &lt;- cut(hcm19$age2,breaks = c(seq(0, 15, by = 3),82),\n                     labels = c(\"&lt;0 & ≤3 year-old\",\n                                \"&lt;3 & ≤6 year-old\",\n                                \"&lt;6 & ≤9 year-old\",\n                                \"&lt;9 & ≤12 year-old\",\n                                \"&lt;12 & ≤15 year-old\",\n                                \"16+\"))\n\npop_agegr &lt;- hcm19 %&gt;%\n  group_by(age3) %&gt;%\n  summarise(n = sum(n))\n\n# atk_plot_df &lt;- df23 %&gt;%\n#   select(adm_week,age_gr2)%&gt;%\n#   count(age_gr2,adm_week) %&gt;%\n#   left_join(pop_agegr,by = join_by(age_gr2 == age3)) %&gt;%\n#   group_by(age_gr2) %&gt;%\n#   mutate(pop = n.y - cumsum(lag(n.x, default = 0)),\n#          atr = n.x/pop)  %&gt;%\n#   select(-n.y)\n# \n# \n# atk_rate &lt;- atk_plot_df %&gt;% na.omit() %&gt;% filter(age_gr2 != \"16+\") %&gt;%\n#   ggplot(aes(x = adm_week,y=log(atr*100000))) +\n#   # geom_bar(stat = \"identity\")+\n#   geom_line()+\n#   facet_wrap(vars(age_gr2),ncol = 5)+\n#   # scale_x_date(limits = as.Date(c(\"2023-01-01\",\"2023-12-31\")))+\n#   coord_cartesian(xlim = as.Date(c(\"2023-01-01\",\"2023-12-31\")),\n#                   ylim = c(-2.5,7.5))+\n#   scale_x_date(date_breaks = \"3 months\",date_labels = \"%b %Y\")+\n#   theme_bw()+\n#   labs(x = \"Admission week\",y= \"Log attack rate\",tag = \"A\")+\n#   theme(axis.text.x = element_blank(),\n#         axis.ticks.x = element_blank())\n\natk_rate &lt;- df23 %&gt;%\n  select(adm_week,age_gr2)%&gt;%\n  count(age_gr2,adm_week) %&gt;%\n  left_join(pop_agegr,by = join_by(age_gr2 == age3)) %&gt;%\n  group_by(age_gr2) %&gt;%\n  mutate(pop = n.y - cumsum(lag(n.x, default = 0)),\n         atr = cumsum(n.x)/pop)  %&gt;%\n  select(-n.y) %&gt;% \n  mutate(\n    attack_rate_ma = slide_dbl(\n      .x      = atr,\n      .f      = mean,         # function to compute\n      .before = 4,            # 4 weeks before = 5-week window total\n      .after  = 0,\n      .step = 1,\n      .complete = TRUE        # only compute for full windows\n    )\n  ) %&gt;%\n  ungroup() %&gt;% na.omit() %&gt;% filter(age_gr2 != \"16+\") %&gt;% \n  ggplot(aes(x = adm_week,y=log10(attack_rate_ma))) +\n  # geom_bar(stat = \"identity\")+\n  geom_line()+\n  facet_wrap(vars(age_gr2),ncol = 5)+\n  scale_x_date(breaks = seq(as.Date(\"2022-12-01\"),as.Date(\"2023-12-31\"), le = 4),\n               date_labels = \"%b %Y\", minor_breaks = NULL)+\n  scale_y_continuous(minor_breaks = NULL)+\n  # scale_x_date(date_breaks = \"4 months\",date_labels = \"%b %Y\")+\n  coord_cartesian(xlim = as.Date(c(\"2022-12-01\",\"2023-12-31\")))+\n  theme_bw()+\n  labs(x = \"Admission week\",y= \"Log 10 cumulative attack rate\",tag = \"A\")+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_blank(),\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 15))\n\n\n## sero_prevalence by age group\n\nsero &lt;- rbind(t1222,t1223,t423,t823)\n\nsero$age_gr2 &lt;- cut(sero$age+0.00000001, breaks = seq(0, 15, by = 3),\n                       labels = c(\"&lt;0 & ≤3 year-old\",\n                                  \"&lt;3 & ≤6 year-old\",\n                                  \"&lt;6 & ≤9 year-old\",\n                                  \"&lt;9 & ≤12 year-old\",\n                                  \"&lt;12 & ≤15 year-old\"))\n\nsero$col_date &lt;- make_date(sero$col_year,sero$col_month,sero$col_day)\n\nsero$age_gr2 &lt;- factor(sero$age_gr2,\n                         levels = c(\"&lt;0 & ≤3 year-old\",\n                                    \"&lt;3 & ≤6 year-old\",\n                                    \"&lt;6 & ≤9 year-old\",\n                                    \"&lt;9 & ≤12 year-old\",\n                                    \"&lt;12 & ≤15 year-old\"))\n\n## observation seroprevalence\nte_sp &lt;- sero %&gt;% \n  group_by(age_gr2,col_time) %&gt;% \n  count(pos) %&gt;% \n  pivot_wider(names_from = pos, values_from = n) %&gt;%\n  ungroup() %&gt;% \n  mutate(tot = `0`+`1`,\n         sp = `1`/(`0`+`1`)) %&gt;% \n  as.data.frame()\n\nfor (i in 1:nrow(te_sp)) {\n  te_sp$lwr[i] &lt;- prop.test(te_sp$`1`[i],te_sp$tot[i],correct=TRUE)$conf.int[1]\n  te_sp$upr[i] &lt;- prop.test(te_sp$`1`[i],te_sp$tot[i],correct=TRUE)$conf.int[2]\n}\n\n\ncol_ddd&lt;- sero %&gt;% \n  group_by(age_gr2,col_time) %&gt;% \n  summarise(mean = mean(col_date)) %&gt;%\n  ungroup()\n\nte_sp$col_date &lt;- col_ddd$mean\n\nsp_agr &lt;- ggplot(sero,\n       aes(x = col_date, y = pos)) +\n  # geom_jitter(height = 0.05)+\n  geom_point(aes(x = col_date, pos),\n             shape = \"|\")+\n  geom_smooth(fill = \"blue\",alpha = 1/10,\n              method = mgcv::gam,formula = y ~ s(x, bs = \"bs\"),\n              method.args = list(method = \"REML\",link = \"logit\",\n                                 family = \"binomial\"))+\n  geom_point(data = te_sp,\n             aes(x  = col_date,y = sp))+\n  geom_errorbar(data = te_sp,\n                aes(x  = col_date,y = sp,ymin = lwr, ymax = upr),alpha = .5)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  labs(x = \"Collection date\", y  = \"Seroprevalence (%)\",tag = \"B\")+\n  scale_x_date(breaks = seq(as.Date(\"2022-12-01\"),as.Date(\"2023-12-31\"), le = 4),\n               date_labels = \"%b %y\", minor_breaks = NULL)+\n  scale_y_continuous(labels = scales::label_percent(), minor_breaks = NULL)+\n  # scale_x_date(date_breaks = \"4 months\",date_labels = \"%b %Y\")+\n  coord_cartesian(ylim = c(0, 1),xlim = as.Date(c(\"2022-12-01\",\"2023-12-31\")))+\n  theme_bw()+\n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 12,vjust = 0.5,\n                                   hjust = 0.5,angle = 45),\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 15))\n\n\n\n\nCode\natk_rate/\n  sp_agr\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig3.svg\",\n       width = 12,height = 7,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#figure-3-seroepidemiology",
    "href": "fig_manu.html#figure-3-seroepidemiology",
    "title": "4  Manuscript figure",
    "section": "4.3 Figure 3: seroepidemiology",
    "text": "4.3 Figure 3: seroepidemiology\n\n4.3.1 GLM\n\n\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$data\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n\n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\n\n\n\nCode\nm &lt;- 100\neps &lt;- 1\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 &lt;-  glm(pos ~ age + I(age ^2), binomial, data = t423) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\ndf_plot &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week) %&gt;% as.data.frame()\n\natdf &lt;- rbind(t1222,t423,t823,t1223) %&gt;%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day))\n\nts2 &lt;- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  geom_point(aes(x = as.Date(col_date), y =  pos*3000),\n            shape = \"|\",data = atdf)+\n  labs(x = \"Admission week\",y = \"Cases\",tag = \"B\")+\n  annotate(\"rect\", fill = \"blue\",\n           xmin = as.Date(c(\"2022-12-01\",\"2023-04-01\",\"2023-08-01\",\"2023-12-01\")), \n           xmax = as.Date(c(\"2022-12-31\",\"2023-04-30\",\"2023-08-30\",\"2023-12-30\")), \n           ymin = 0, ymax = Inf, alpha = .2)+\n  theme_classic()+\n  scale_y_continuous(breaks = seq(0,3000,by = 1000),\n                     limit =c(0-1,3000+1))+\n  scale_x_date(\n    breaks = as.Date(c(\"2022-12-15\", \"2023-04-15\", \"2023-08-15\", \"2023-12-15\")),\n    labels = c(\"Dec 2022\", \"Apr 2023\", \"Aug 2023\", \"Dec 2023\"),\n    limits = c(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\")))+\n  theme(\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18))\n\n\n\n\nCode\nglmfit &lt;- (plot1222 | plot0423 | plot0823 | plot1223) \n\n\nfig3 &lt;- glmfit/\n  ts2\n\nfig3+ \n  plot_annotation(tag_levels = c('A'))\n\n\n\n\n\nCode\n# ggsave(\"./fig_manuscript/fig2.svg\",\n#        width = 15,height = 7,dpi = 500)\n\n\n\n\n4.3.2 GAM\nCompare GAM fitting manually and geom_smooth\n\n\nCode\npredictg &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n  \n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  \n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  \n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\ndf.list &lt;- list(t1222,t423,t823,t1223)\n\n## fit manually\n\nfig2m &lt;- lapply(df.list, function(x) \n            gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n                family = \"binomial\",data = x) |&gt;\n            predictg() %&gt;% as.data.frame() \n            ) %&gt;%\n  bind_rows(.id = \"label\") %&gt;% \n  mutate(col_date = case_when(\n    label == 1 ~ \"Dec 2022\",\n    label == 2 ~ \"Apr 2023\",\n    label == 3 ~ \"Aug 2023\",\n    label == 4 ~ \"Dec 2023\"\n  )) %&gt;% \n  ggplot(aes(x = age,y = fit, \n             fill = factor(col_date,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                               \"Aug 2023\",\"Dec 2023\"))))+\n  geom_line()+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  scale_fill_paletteer_d(\"nbapalettes::thunder\")+\n  ylim(0,101)+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\",tag = \"Manually\")+\n  scale_x_continuous(breaks = seq(0,15,by = 3))+\n  theme_bw()+\n  facet_wrap(~factor(col_date,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                         \"Aug 2023\",\"Dec 2023\")),\n              ncol = 4)+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n## geom_smooth\n\nfig2a &lt;- df.list %&gt;% bind_rows(.id = \"label\") %&gt;% \n        ggplot(aes(x = age, y = pos)) +\n          # geom_jitter(height = 0.05)+\n          geom_point(aes(x = age, pos),\n                     shape = \"|\")+\n          facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                                 \"Aug 2023\",\"Dec 2023\")),\n                     ncol = 4)+\n          geom_smooth(fill = \"blue\",alpha = 1/10,\n                      method = mgcv::gam,formula = y ~ s(x, bs = \"bs\"),\n                      method.args = list(method = \"REML\",link = \"logit\",\n                                         family = \"binomial\"))+\n          labs(y = \"Seroprevalence (%)\",x = \"Age\",tag = \"A\")+\n          scale_x_continuous(breaks = seq(0,15,by = 3), minor_breaks = NULL)+\n          scale_y_continuous(labels = scales::label_percent(), minor_breaks = NULL)+\n          coord_cartesian(ylim = c(0, 1))+\n          theme_bw()+ \n          theme(axis.title.x = element_text(size = 18),\n                axis.text.x = element_text(size = 18),\n                legend.position = \"none\",\n                plot.tag = element_text(face = \"bold\", size = 18),\n                axis.title.y = element_text(size = 18),\n                axis.text.y = element_text(size = 18),\n                strip.text.x = element_text(size = 18))\n\n\n\n\nCode\nfig2m/\n  fig2a\n\n\n\n\n\n\n\nCode\nfig2a/\n  ts2\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig2.svg\",\n       width = 13,height = 8,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#glm-with-pava-algorithm",
    "href": "fig_manu.html#glm-with-pava-algorithm",
    "title": "4  Manuscript figure",
    "section": "4.4 GLM with PAVA algorithm",
    "text": "4.4 GLM with PAVA algorithm\n\n\nCode\nlibrary(Iso)\n\nmod1 &lt;- glm(pos ~ age * col_date +\n              I(age ^ 2) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\nage_val &lt;- c(.1, seq(1,15,0.5))\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date))\n\nnew_data &lt;- expand.grid(age = age_val, col_date = as.numeric(collection_date_val))\n\nprdcts &lt;- cbind(new_data, fit = 100 * predict(mod1, new_data, \"response\")) |&gt; \n  as_tibble() |&gt; \n  arrange(col_date) |&gt; \n  mutate(across(col_date, as_date))\n\nout_pava &lt;- prdcts %&gt;% \n  mutate(time_numeric = as.numeric(col_date)) %&gt;% \n  group_by(age) %&gt;% \n  arrange(time_numeric) %&gt;%\n  mutate(\n    seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE)\n  )\n\n## boostrap \n\nbootstrap &lt;- function(data, new_data) {\n  # Step 1: resample\n  boot_data &lt;- data %&gt;% slice_sample(n = nrow(data), replace = TRUE)\n  \n  # Step 2: refit model\n  mod &lt;- glm(pos ~ age * col_date + I(age^2) * col_date, \n             family = binomial, \n             data = mutate(boot_data, col_date = as.numeric(col_date)))\n  \n  # Step 3: predict\n  preds &lt;- predict(mod, new_data, type = \"response\") * 100  # seroprev %\n  preds_df &lt;- bind_cols(new_data, fit = preds) |&gt; \n    mutate(col_date = as_date(col_date))\n  \n  # Step 4: apply PAVA per age\n  preds_df %&gt;%\n    mutate(time_numeric = as.numeric(col_date)) %&gt;%\n    group_by(age) %&gt;%\n    arrange(time_numeric) %&gt;%\n    summarise(\n      col_date = col_date,\n      seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE),\n      .groups = \"keep\"\n    )\n}\n\n\nB &lt;- 10000  # number of bootstrap iterations\n\nset.seed(42)  # for reproducibility\nboot_results &lt;- map_dfr(1:B, ~bootstrap(atdf, new_data) %&gt;% \n                          mutate(bootstrap = .x))\n\npoint_est &lt;- out_pava %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    sp = mean(seroprev_monotonic)\n  )\n\nsp_ci &lt;- boot_results %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    lower = quantile(seroprev_monotonic, 0.025),\n    upper = quantile(seroprev_monotonic, 0.975),\n    .groups = \"drop\"\n  )  \n\n# df.list &lt;- list(t1222,t423,t823,t1223)\n\nsp_pava &lt;- ggplot() +\n  geom_line(data = point_est,aes(x = age, y = sp), color = \"blue\") +\n  geom_ribbon(data = sp_ci, aes(x = age,ymin = lower, ymax = upper), fill = \"blue\", alpha = 0.3) +\n  geom_point(aes(x = age, pos*100),\n             shape = \"|\",data = atdf)+\n  labs(y = \"Seroprevalence (%)\", x = \"Age (years)\") +\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\")),\n             nrow = 1) +\n  scale_x_continuous(breaks = seq(0,15,by = 3), minor_breaks = NULL)+\n  scale_y_continuous(limits = c(0,100),breaks = seq(0,100,by = 25),\n                     labels = scales::label_percent(scale = 1), minor_breaks = NULL)+\n  theme_bw()+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n\n\n\nCode\nsp_pava/\n  ts2\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/glm_pava.svg\",\n       width = 15,height = 8,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#supplementary-plot",
    "href": "fig_manu.html#supplementary-plot",
    "title": "4  Manuscript figure",
    "section": "4.5 Supplementary plot",
    "text": "4.5 Supplementary plot\n\n4.5.1 Attack rate\n\n\nCode\npop &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky.rds\")\npop_a &lt;- pop %&gt;% group_by(birth_month, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\n\ncolnames(pop_a) &lt;- c(\"m\",\"y\",\"n\")\n\npop_a$dob &lt;- str_c(pop_a$y,pop_a$m,sep = \"-\") %&gt;% ym()\n\ntime1 = df1$adm_date\nage1 =  df1$age1\ndob = pop_a$dob\nn = pop_a$n\n\ndft &lt;- data.frame(time1,age1) %&gt;%\n  filter(!is.na(time1) & !is.na(age1)) %&gt;%\n  arrange(time1)\n\n\ndft$agr=as.factor(cut(dft$age1, c(0,0.5,\n                                  1,1.5,\n                                  2,2.5,\n                                  3,3.5,\n                                  4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (dft$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                     \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                     \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                     \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nout_total &lt;- data.frame()\n\nhfmd23 &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week)\n\nhfmd23$week &lt;- 1:length(hfmd23$adm_week)\nhfmd23$week &lt;- ifelse(hfmd23$week == 53,52,hfmd23$week)\n\nhfmd23$n2 &lt;- ifelse(hfmd23$week == 52, sum(hfmd23$n[hfmd23$week==52]), hfmd23$n)\n\nhfmd23 &lt;- hfmd23[-53,]\n\ndateaa &lt;- hfmd23$adm_week+3\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nfor (i in 1:52){\n  sus_pop$age &lt;- interval(sus_pop$dob, dateaa[i]) / years(1)\n  \n  sus_pop$agr=as.factor(cut(sus_pop$age, c(0,0.5,\n                                           1,1.5,\n                                           2,2.5,\n                                           3,3.5,\n                                           4,4.5,5,5.5,6,100), right=TRUE ))\n  levels (sus_pop$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                           \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                           \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                           \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n  outcum &lt;- sus_pop %&gt;% group_by(agr) %&gt;%\n    summarise(n = sum(n)) %&gt;%\n    as.data.frame()\n  outcum$date &lt;- rep(dateaa[i],nrow(outcum))\n  out_total &lt;- rbind(out_total,outcum)\n}\n\ndeno &lt;- out_total %&gt;%\n  pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\ncasss &lt;- wwww$wdat\n\ncasss$agr=as.factor(cut(casss$age, c(0,0.5,1,1.5,2,2.5,\n                                     3,3.5,4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (casss$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                       \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                       \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                       \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\ncasss &lt;- casss %&gt;% group_by(date,agr) %&gt;%\n  count() %&gt;% pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\n\ncasss &lt;- casss[,-ncol(casss)]\ncasss &lt;- replace(casss,is.na(casss), 0)\ncasss &lt;- casss[,c(1:10,13,11,14,12)]\n\natkr &lt;- data.frame()\natkr &lt;- rbind(atkr,as.numeric(casss[1,-1])/as.numeric(deno[1,-1]))\nfor (i in 1:51){\n  new &lt;- as.numeric(casss[i+1,-1])/(as.numeric(deno[i+1,-1]) - as.numeric(casss[i,-1]))\n  atkr &lt;- rbind(atkr,new)\n}\natkr &lt;- cbind(deno$date,atkr)\n\ncolnames(atkr) &lt;- colnames(deno)\natkr &lt;- replace(atkr,is.na(atkr), 0)\n\n\n\natk_plot &lt;- atkr %&gt;% pivot_longer(cols=colnames(atkr)[-1],\n                                  names_to= 'agr',\n                                  values_to='atk') %&gt;% as.data.frame()\n\natk &lt;- ggplot(atk_plot, aes(x=as.character(date), y=agr, fill = atk)) +\n  geom_raster()+\n  scale_fill_paletteer_c(\"grDevices::Inferno\",\n                         breaks = c(0.01, 0.02, 0.03, 0.04, 0.05))+\n  scale_y_discrete(limits=rev)+\n  scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n  theme_minimal()+\n  labs(tag = \"B\",fill = \"Attack rate\",y = \"Age group (years)\")+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\")) \n\n\n\n\nCode\nts/\n  atk\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/sup1.svg\",\n       width = 15,height = 8,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#figure-4-calibration-plot",
    "href": "fig_manu.html#figure-4-calibration-plot",
    "title": "4  Manuscript figure",
    "section": "4.6 Figure 4: Calibration plot",
    "text": "4.6 Figure 4: Calibration plot\n\n\nCode\n# correct_lv &lt;- c(\"0≤ & &lt;1\",\"1≤ & &lt;2\",\"2≤ & &lt;3\",\"3≤ & &lt;4\",\"4≤ & &lt;5\",\n#                 \"5≤ & &lt;6\",\"6≤ & &lt;7\",\"7≤ & &lt;8\",\"8≤ & &lt;9\",\"9≤ & &lt;10\",\n#                 \"10≤ & &lt;11\",\"11≤ & &lt;12\",\"12≤ & &lt;13\",\"13≤ & &lt;14\",\"14≤ & &lt;15\")\n# \n# cali_sero &lt;- sero %&gt;% group_by(age_gr) %&gt;%\n#             count(pos) %&gt;%\n#             pivot_wider(names_from = pos,values_from = n) %&gt;%\n#             clean_names() %&gt;%\n#             mutate(sp = x1/sum(x0,x1)) %&gt;%\n#             select(-c(x0,x1)) %&gt;%\n#             ungroup()\n# \n# cali_sero$age_gr &lt;- factor(cali_sero$age_gr,levels = correct_lv)\n# \n# ## case noti\n# df23$age_cali &lt;- cut(df23$age1+0.00000001, breaks = c(seq(0, 15, by = 1),82),\n#                     labels = c(correct_lv,\n#                                \"16+\"))\n# \n# ## population\n# hcm19$age_cali &lt;- cut(hcm19$age2,breaks = c(seq(0, 15, by = 1),82),\n#                       labels = c(correct_lv,\n#                                  \"16+\"))\n# \n# pop_agegr_cali &lt;- hcm19 %&gt;%\n#                   group_by(age_cali) %&gt;%\n#                   summarise(n = sum(n))\n# \n# cali_plot_df &lt;- df23 %&gt;%\n#                 select(age_cali) %&gt;%\n#                 group_by(age_cali) %&gt;%\n#                 count() %&gt;% na.omit() %&gt;%\n#                 left_join(pop_agegr_cali,by = join_by(age_cali == age_cali)) %&gt;%\n#                 # group_by(age_gr2) %&gt;%\n#                 mutate(atr = n.x/n.y) %&gt;%\n#                 filter(age_cali != \"16+\")  %&gt;%\n#                 left_join(cali_sero,by = join_by(age_cali == age_gr))\n# \n# model_clb &lt;- glm(atr*100000 ~ sp,data = cali_plot_df)\n# \n# model_clb$pred &lt;- predict.glm(model_clb, type = 'response')\n\n\n\n\nCode\n# calibration_plot(data = data.frame(y = model_clb$y,pred = model_clb$pred),\n#                  obs = \"y\", pred = \"pred\")"
  }
]