[
  {
    "objectID": "sero.html",
    "href": "sero.html",
    "title": "2  HFMD Seroprevalence",
    "section": "",
    "text": "3 Import data\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$data\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n\n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\nCode\nlibrary(plotly)\nlibrary(scam)\nCode\natdf &lt;- rbind(t1222,t423,t823,t1223) %&gt;%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day))\nCode\nhead(atdf)\n\n\n               id  age_gr        age col_day col_month col_year neutralization\n1 20FL-001-060001 0≤ & &lt;1 0.36986301      28        12     2022           &lt;NA&gt;\n2 20FL-001-060002 0≤ & &lt;1 0.33150685      27        12     2022           &lt;NA&gt;\n3 20FL-001-060003 0≤ & &lt;1 0.07671233       4         1     2023           &lt;NA&gt;\n4 20FL-001-060004 0≤ & &lt;1 0.43835616      27        12     2022           &lt;NA&gt;\n5 20FL-001-060005 0≤ & &lt;1 0.93150685       3         1     2023           &lt;NA&gt;\n6 20FL-001-060006 1≤ & &lt;2 1.95616438      26        12     2022           1:16\n  pos col_time   col_date\n1   0 Dec 2022 2022-12-28\n2   0 Dec 2022 2022-12-27\n3   0 Dec 2022 2023-01-04\n4   0 Dec 2022 2022-12-27\n5   0 Dec 2022 2023-01-03\n6   1 Dec 2022 2022-12-26\nCode\n# cleaned &lt;- read_csv(\"D:/OUCRU/HCDC/project phân tích sero quận huyện/cleaned.csv\")\n# \n# sero &lt;- rbind(t1222,t1223,t423,t823)\n# \n# sero_add &lt;- full_join(cleaned,sero, by =  c(\"id\" = \"id\"))\n# \n# data_pt &lt;- sero_add %&gt;% filter(!is.na(age)&!is.na(qhchuan)) %&gt;% \n#   select(qhchuan,age,col_month,col_year,pos) %&gt;% \n#   as.data.frame()\n# \n# # HCMC map\n# map_path &lt;- \"D:/OUCRU/HCDC/project phân tích sero quận huyện/\"\n# vn_qh &lt;- st_read(dsn = file.path(map_path, \"gadm41_VNM.gpkg\"), layer = \"ADM_ADM_2\")\n# \n# vn_qh1 &lt;- vn_qh %&gt;%\n#   clean_names() %&gt;%     ## cho thành chữ thường\n#   filter(\n#     str_detect(\n#       name_1,\n#       \"Hồ Chí Minh\"\n#     )\n#   )\n# qhtp &lt;- vn_qh1[-c(14,21),]\n# \n# qhtp$geom[qhtp$varname_2 == \"Thu Duc\"] &lt;- vn_qh1[c(\"21\",\"24\",\"14\"),] %&gt;%\n#   st_union()\n# \n# qhtp &lt;- qhtp %&gt;% st_cast(\"MULTIPOLYGON\")\n# library(stringi)\n# qhtp$varname_2 &lt;- stri_trans_general(qhtp$varname_2, \"latin-ascii\") %&gt;%\n#   tolower() %&gt;%\n#   str_remove(\"district\") %&gt;%\n#   trimws(which = \"both\")\n# \n# qhtp$nl_name_2 &lt;- c(\"BC\",\"BTân\",\"BT\",\"CG\",\"CC\",\"GV\",\n#                     \"HM\",\"NB\",\"PN\",\"1\",\"10\",\"11\",\"12\",\n#                     \"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"TB\",\n#                     \"TP\",\"TĐ\")\nCode\n# ## function\n# get_sp &lt;- function(month,year){\n#   data_pt %&gt;% filter(col_month == month & col_year == year) %&gt;% \n#     select(-age) %&gt;% group_by(qhchuan) %&gt;% count()  %&gt;% \n#     as.data.frame() %&gt;%\n#     dplyr::mutate(pre = n / sum(n))  \n# }\n# \n# plot_cover &lt;- function(data,map){\n#   output &lt;- left_join(map, data.frame(data), by = join_by(varname_2 == qhchuan))\n#   output %&gt;% ggplot() +\n#     geom_sf(aes(fill = pre),show.legend = T)+\n#     # scale_fill_continuous(low=\"yellow\", high=\"red\",\n#     #                       guide=\"colorbar\",na.value=\"white\",\n#     #                       name = \"Percentage\",\n#     #                       limits = c(0,20))+\n#     # geom_sf_text(aes(label = nl_name_2),size=2.5)+\n#     scale_fill_gsea(na.value = \"white\",\n#                     breaks = seq(0,0.2,by = 0.05),\n#                     limits = c(0, 0.2),\n#                     name = \"Percentage\",\n#                     labels = scales::label_percent())+\n#     theme_void()  \n# }\nCode\n# sp1222 &lt;- get_sp(12,2022)\n# sp0423 &lt;- get_sp(4,2023)\n# sp0823 &lt;- get_sp(8,2023)\n# sp1223 &lt;- get_sp(12,2023)\n# \n# p1222 &lt;- plot_cover(data = sp1222,map = qhtp)\n# p423 &lt;- plot_cover(data = sp0423,map = qhtp)\n# p823 &lt;- plot_cover(data = sp0823,map = qhtp)\n# p1223 &lt;- plot_cover(data = sp1223,map = qhtp)\n# \n# serum_dis &lt;- plot_grid(p1222,p423,p823,p1223,\n#           # labels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\"),\n#           ncol = 4)"
  },
  {
    "objectID": "sero.html#fit-by-glm",
    "href": "sero.html#fit-by-glm",
    "title": "2  HFMD Seroprevalence",
    "section": "5.1 Fit by GLM",
    "text": "5.1 Fit by GLM\n\n\nCode\nm &lt;- 100\neps &lt;- 1\n\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n\n\n\n\nCode\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 &lt;-  glm(pos ~ age + I(age ^2), binomial, data = t423) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\nplot1222 + plot0423 + plot0823 + plot1223"
  },
  {
    "objectID": "sero.html#fit-with-scam-model",
    "href": "sero.html#fit-with-scam-model",
    "title": "2  HFMD Seroprevalence",
    "section": "6.1 Fit with SCAM model",
    "text": "6.1 Fit with SCAM model\nmpi is monotone increasing SCOP-splines: bs=“mpi”. To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\nModel\n\n\nCode\ns1 &lt;- scam(pos~s(age)+s(col_date,bs = \"mpi\"),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))"
  },
  {
    "objectID": "sero.html#d-plot",
    "href": "sero.html#d-plot",
    "title": "2  HFMD Seroprevalence",
    "section": "6.2 3D plot",
    "text": "6.2 3D plot\n\n\nCode\nage_val &lt;- c(.1,1:14)\n\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 512)\n\nnew_data &lt;- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf &lt;- cbind(new_data,\n               fit = 100 * predict(s1, new_data,\"response\"))\n\nscamf$col_date &lt;- as.Date(scamf$col_date)\n\n\n\n\nCode\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)"
  },
  {
    "objectID": "sero.html#d-plot-1",
    "href": "sero.html#d-plot-1",
    "title": "2  HFMD Seroprevalence",
    "section": "6.3 2-D plot",
    "text": "6.3 2-D plot\n\n\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100){\n  p &lt;- (1 - ci) / 2\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  date_range &lt;- range(dataset$col_date)\n  dates &lt;- seq(date_range[1], date_range[2], le = le)\n\nout &lt;- x |&gt;\n  predict(expand.grid(age = ages,\n                        col_date = dates), se.fit = TRUE) |&gt;\n  extract(c(\"fit\", \"se.fit\")) %&gt;%\n  c(expand.grid(age = ages,\n               date = dates),\n    .) |&gt;\n  as_tibble() |&gt;\n  mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n  select(-se.fit)\n\nreturn(out)\n}\n\n\n\n\nCode\nout &lt;- predict2(s1)\n\nout$date &lt;- as.Date(out$date)\n\n\n\n\nCode\ns1222 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2022) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\ns423 &lt;- out %&gt;% filter(month(date) == 4 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\ns823 &lt;- out %&gt;% filter(month(date) == 8 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\ns1223 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\nresult_sero &lt;- s1222 | s423 | s823 | s1223\n\nresult_sero/\n  ts"
  },
  {
    "objectID": "sero.html#case",
    "href": "sero.html#case",
    "title": "2  HFMD Seroprevalence",
    "section": "3.2 Case",
    "text": "3.2 Case\n\n\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n                  col_types = c(\"date\", \"numeric\", \"text\", \n                                \"text\", \"text\", \"date\", \"date\", \"date\", \n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;% \n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\") \n\ndf_plot &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week) %&gt;% as.data.frame()\n\nts &lt;- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  labs(x = \"Admission week\",\"Cases\")+\n  geom_vline(xintercept = as.Date(\"2022-12-01\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2022-12-30\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2023-04-01\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-04-30\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-08-01\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-08-30\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-12-01\"),\n             alpha = 0.4,col = \"#33516b\")+\n  geom_vline(xintercept = as.Date(\"2023-12-30\"),\n             alpha = 0.4,col = \"#33516b\")+\n  xlim(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\"))+theme_classic()"
  },
  {
    "objectID": "sero.html#glm-unconstrained",
    "href": "sero.html#glm-unconstrained",
    "title": "2  HFMD Seroprevalence",
    "section": "6.4 GLM (unconstrained)",
    "text": "6.4 GLM (unconstrained)\nModel\n\n\nCode\nmod1 &lt;- glm(pos ~ age * col_date +\n              I(age ^ 2) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\ndataset &lt;- mod1$data\n\ncollection_date_val &lt;- seq(min(dataset$col_date),\n                           max(dataset$col_date),le=20)\n\nnew_data &lt;- expand.grid(age = age_val, col_date = collection_date_val)\n\n\nprdcts &lt;- cbind(new_data, fit = 100 * predict(mod1, new_data, \"response\")) |&gt;\n  as_tibble() |&gt;\n  arrange(col_date) |&gt;\n  mutate(across(col_date, as_date))\n\n\n\n\nCode\nplot_ly(prdcts, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n    ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HFMD 2023",
    "section": "",
    "text": "1 Epidemiological Analysis\nCode\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(gtsummary)\nlibrary(patchwork)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n    col_types = c(\"date\", \"numeric\", \"text\", \n        \"text\", \"text\", \"date\", \"date\", \"date\", \n        \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                  \"reported_date\", \"onset_date\",\"adm_date\",\n                  \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n          c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;% \n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\")"
  },
  {
    "objectID": "index.html#model-structure",
    "href": "index.html#model-structure",
    "title": "HFMD 2023",
    "section": "4.1 Model structure",
    "text": "4.1 Model structure\n\nage_mod &lt;- odin({\n  deriv(S1) &lt;- -(beta11*I1 + beta12*I2) * S1 + mu * S1\n  deriv(I1) &lt;- (beta11*I1 + beta12*I2) * S1 - gamma1*I1\n  deriv(R1) &lt;- gamma1 * I1\n\n  deriv(S2) &lt;- -(beta12*I1 + beta22*I2) * S2\n  deriv(I2) &lt;- (beta12*I1 + beta22*I2) * S2 - gamma2*I2\n  deriv(R2) &lt;- gamma2 * I2\n\n  initial(S1) &lt;- S1_init\n  initial(I1) &lt;- I1_init\n  initial(R1) &lt;- R1_init\n\n  initial(S2) &lt;- S2_init\n  initial(I2) &lt;- I2_init\n  initial(R2) &lt;- R2_init\n\n  beta11 &lt;- user(0.003)\n  beta12 &lt;- user(0.003)\n  # beta21 &lt;- user(0.003)\n  beta22 &lt;- user(0.003)\n\n  mu &lt;- user(0.5)\n\n  gamma1 &lt;- user(0.5)\n  gamma2 &lt;- user(0.5)\n\n  S1_init &lt;- user(0.8)\n  I1_init &lt;- user(0.2)\n  R1_init &lt;- user(0)\n\n  S2_init &lt;- user(0.6)\n  I2_init &lt;- user(0.4)\n  R2_init &lt;- user(0)\n})\n\n── R CMD INSTALL ───────────────────────────────────────────────────────────────\n* installing *source* package 'odin23cdddbb' ...\n** using staged installation\n** libs\nusing C compiler: 'gcc.exe (GCC) 13.2.0'\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c odin.c -o odin.o\nodin.c: In function 'odin_metadata':\nodin.c:168:18: warning: unused variable 'internal' [-Wunused-variable]\n  168 |   odin_internal *internal = odin_get_internal(internal_p, 1);\n      |                  ^~~~~~~~\nodin.c: In function 'user_get_scalar_int':\nodin.c:265:47: warning: format '%d' expects argument of type 'int', but argument 2 has type 'const char *' [-Wformat=]\n  265 |       Rf_error(\"Expected scalar integer for '%d'\", name);\n      |                                              ~^    ~~~~\n      |                                               |    |\n      |                                               int  const char *\n      |                                              %s\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c registration.c -o registration.o\ngcc -shared -static-libgcc -o odin23cdddbb.dll tmp.def odin.o registration.o -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -LC:/PROGRA~1/R/R-44~1.2/bin/x64 -lR\ninstalling to C:/Users/ASUS/AppData/Local/Temp/RtmpaQwxVR/devtools_install_705c1ba24a1c/00LOCK-file705c713a4d7/00new/odin23cdddbb/libs/x64\n* DONE (odin23cdddbb)\n\n\n\n\nCode\nmu0 = 0.5\ngamma1_0 = 5/30\ngamma2_0 = 5/30\n\nS1_0 = 0.4\nI1_0 = 0.6\nR1_0 = 0\n\nS2_0 = .5\nI2_0 = .5\nR2_0 = 0"
  },
  {
    "objectID": "index.html#likelihood",
    "href": "index.html#likelihood",
    "title": "HFMD 2023",
    "section": "4.2 Likelihood",
    "text": "4.2 Likelihood\n\n\nCode\nbinom_loglik &lt;- function(data,par,N=N1) {\n\n  sir_odin_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                              # beta21 = par[3],\n                              beta22 = par[3],\n                              mu = mu0,\n                              gamma1 = gamma1_0, gamma2 = gamma2_0,\n                              S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                              S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(0, 52, by = 1)\n\n  sir_output &lt;- sir_odin_run$run(times)\n  sir_output &lt;- data.frame(sir_output) %&gt;% mutate(prev = I1/N1)\n  -sum(dbinom(x=data$n, size=N, prob=sir_output$prev[-1], log=TRUE))\n}\n\n\n\n\nCode\nbeta_mle &lt;- optim(par=c(beta11 = 0.1, beta12 = 0.1,\n                        # beta21 = 0.1,\n                        beta22 = 0.1),\n                  fn=binom_loglik,\n                  data=case,\n                  method=\"L-BFGS-B\",\n                  lower=0.1, upper=0.9)\n\nbeta_mle$par\n\n\n   beta11    beta12    beta22 \n0.1000000 0.6409961 0.1000000 \n\n\n\n\nCode\n## function to apply new parameters from optimization\nafter_cal &lt;- function(par){\n  age_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                         # beta21 = par[3],\n                         beta22 = par[3],\n                         mu = mu0,\n                         gamma1 = gamma1_0, gamma2 = gamma2_0,\n                         S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                         S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(1:52)\n\n  out_mod &lt;- data.frame(age_run$run(times)) %&gt;% mutate(prev=I1/N1)\n  return(out_mod)\n}\n\n\n\n\nCode\niii &lt;- after_cal(beta_mle$par) %&gt;% mutate(ca = case$n[-53]/N1)\n\n\nggplot(iii) +\n  geom_line(aes(x = t,y=prev*250))+\n  geom_point(aes(x = t,y=ca))"
  },
  {
    "objectID": "sero.html#fit-by-gam",
    "href": "sero.html#fit-by-gam",
    "title": "2  HFMD Seroprevalence",
    "section": "5.2 Fit by GAM",
    "text": "5.2 Fit by GAM\n\n\nCode\n## \npredictg &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n  \n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  \n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  \n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\n## plot\n\nplot_gam &lt;- function(x,date){\n  \n  clo &lt;- case_when(date == 1222 ~ \"Dec 2022\",\n                   date == 423 ~ \"Apr 2023\",\n                   date == 823 ~ \"Aug 2023\",\n                   date == 1223 ~ \"Dec 2023\")\n  clo2 &lt;- case_when(date == 1222 ~ \"#0808cf\",\n                    date == 423 ~ \"#ed097b\",\n                    date == 823 ~ \"#ed6b00\",\n                    date == 1223 ~ \"#33516b\")\n  \n  dtaa &lt;- case_when(date == 1222 ~ t1222,\n                    date == 423 ~ t423,\n                    date == 823 ~ t823,\n                    date == 1223 ~ t1223)\n  \n  x %&gt;% as.data.frame() %&gt;%\n    ggplot(aes(x = age,y = fit))+\n    geom_line(aes(col = clo))+\n    geom_ribbon(aes(x = age,y = fit,\n                    ymin=lwr, ymax=upr),alpha = 0.5,fill = clo2)+\n    ylim(0,101)+\n    theme_minimal() +\n  scale_color_manual(name = \"Y series\",\n                     values = c(clo = clo2))+\n    labs(y = \"Seroprevalence (%)\")+\n    geom_point(data= dtaa, aes(x = age, m * pos + 1),\n               shape = \"|\",\n               col = clo2)+\n    theme(\n      axis.text.x = element_text(size = 15),\n      axis.text.y = element_text(size = 15),\n      legend.position = \"hide\",\n      legend.text = element_text(size = 15),\n      axis.title.x = element_text(size = 15),\n      axis.title.y = element_text(size = 15))+\n    annotate(\"text\", x = 3, y = 90, label = c(clo),size = 6) \n}  \n\ng1222 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %&gt;% \n  predictg() %&gt;% plot_gam(date = 1222)  \n\ng423 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %&gt;% \n  predictg() %&gt;% plot_gam(date = 423)  \n\ng823 &lt;-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t823) %&gt;% \n  predictg() %&gt;% plot_gam(date = 823)  \n\ng1223 &lt;-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1223) %&gt;% \n  predictg() %&gt;% plot_gam(date = 1223)  \n\n\n\n\nCode\ng1222 | g423 | g823 | g1223"
  },
  {
    "objectID": "sero.html#serology-data",
    "href": "sero.html#serology-data",
    "title": "2  HFMD Seroprevalence",
    "section": "3.1 Serology data",
    "text": "3.1 Serology data\n\n\nCode\napr_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 &lt;- data.frame(apr_2023[-c(1,2),c(6,8,10:14)])\nt423$pos &lt;- replace(t423$...14,is.na(t423$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t423) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age &lt;- as.numeric(t423$age)\nt423$col_time &lt;- rep(\"Apr 2023\",nrow(t423))\n\n\nt823 &lt;- data.frame(aug_2023[-c(1,2),c(6,8,9,14:17)])\nt823$pos &lt;- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t823) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age &lt;- as.numeric(t823$age)\nt823$col_time &lt;- rep(\"Aug 2023\",nrow(t823))\n\nt1222 &lt;- data.frame(dec_2022[-c(1,2),c(6,8,10:14)])\nt1222$pos &lt;- replace(t1222$...14,is.na(t1222$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1222) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age &lt;- as.numeric(t1222$age)\nt1222$col_time &lt;- rep(\"Dec 2022\",nrow(t1222))\n\n\nt1223 &lt;- data.frame(dec_2023[-c(1,2),c(6,8,9,14:17)])\nt1223$pos &lt;- replace(t1223$...17,is.na(t1223$...17),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1223) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age &lt;- as.numeric(t1223$age)\nt1223$col_time &lt;- rep(\"Dec 2023\",nrow(t1223))"
  },
  {
    "objectID": "sero.html#constrain-in-each-time-point",
    "href": "sero.html#constrain-in-each-time-point",
    "title": "2  HFMD Seroprevalence",
    "section": "5.3 Constrain in each time point",
    "text": "5.3 Constrain in each time point\n\n\nCode\n## Constrain function\ncontrain &lt;- function(data1,data2){\n  new_data &lt;- data.frame(age = data2$age,\n                         fit = rep(0,nrow(data2)),\n                         lwr = rep(0,nrow(data2)),\n                         up = rep(0,nrow(data2)))\n  for (i in 1:512){\n    if(data2$fit[i] &lt; data1$fit[i]){\n      new_data$fit[i] &lt;- data1$fit[i]\n      new_data$lwr[i] &lt;- data1$lwr[i]\n      new_data$upr[i] &lt;- data1$upr[i]\n    } else{\n      new_data$fit[i] &lt;- data2$fit[i]\n      new_data$lwr[i] &lt;- data2$lwr[i]\n      new_data$upr[i] &lt;- data2$upr[i]\n    }\n  }\n  \n  new_data$fit &lt;- gam(fit ~ s(age),data = new_data)$fitted.values\n  new_data$lwr &lt;- gam(lwr ~ s(age),data = new_data)$fitted.values\n  new_data$upr &lt;- gam(upr ~ s(age),data = new_data)$fitted.values\n  \n  return(new_data)\n}\n\ntes1222 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %&gt;% \n  predictg() \ntes0423 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %&gt;% \n  predictg() \ntes0823 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t823) %&gt;% \n  predictg() \ntes1223 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t1223) %&gt;% \n  predictg() \n\n## contrain \ncon423 &lt;- contrain(tes1222,tes0423)\ncon823 &lt;- contrain(con423,tes0823)\ncon1223 &lt;- contrain(con823,tes1223)\n\n\nc423 &lt;- con423 %&gt;% plot_gam(date = 423) \nc823 &lt;- con823 %&gt;% plot_gam(date = 823) \nc1223 &lt;- con1223 %&gt;% plot_gam(date = 1223) \n\n\n\n\nCode\ngam_contrain &lt;- g1222 | c423 | c823 | c1223\n\ngam_contrain/\n  ts"
  },
  {
    "objectID": "sero.html#glm-with-pava-algorithm",
    "href": "sero.html#glm-with-pava-algorithm",
    "title": "2  HFMD Seroprevalence",
    "section": "6.4 GLM with PAVA algorithm",
    "text": "6.4 GLM with PAVA algorithm\nIn chapter 9 of 2012 serobook, there are an argument that following Friedman and Tibshirani (1984) and Mammen et al. (2001), Shkedy et al. (2003) suggested to estimate π(a) and λ(a) using local polynomials and smoothing splines and, if necessary, a posteriori apply the PAVA to isotonize the resulting estimate.\nWithout loss of generality they assume \\(\\pi(a_{1}) \\leq \\pi(a_{2}) \\leq ...\\leq \\pi(a_{i})\\). The PAVA states that if \\(\\pi(a_{i}) \\leq \\pi(a_{i - 1})\\) these values need to be “pooled.” In other words \\(\\hat{\\pi}(a_{i})\\) and \\(\\hat{\\pi}(a_{i-1})\\) are both replaced by\n\\[\\frac{\\hat{\\pi}(a_{i})+\\hat{\\pi}(a_{i-1})}{2}\\]\nIn my case, I fitted the glm to seropositive by age and time, then applied PAVA for fitted seroprevalence and 95% CI of each age group.\n\n   Model \n\nmod1 &lt;- glm(pos ~ age * col_date +\n              I(age ^ 2) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\nage_val &lt;- c(.1, seq(1,15,0.5))\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date))\n\nnew_data &lt;- expand.grid(age = age_val, col_date = as.numeric(collection_date_val))\n\nprdcts &lt;- cbind(new_data, fit = 100 * predict(mod1, new_data, \"response\")) |&gt; \n  as_tibble() |&gt; \n  arrange(col_date) |&gt; \n  mutate(across(col_date, as_date))\n\n\n\n6.4.1 Unconstrained plot\n\n\nCode\nplot_ly(prdcts, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, length(age_val)),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\n6.4.2 Applying PAVA algorithm\n\n\nCode\nlibrary(Iso)\nout_pava &lt;- prdcts %&gt;% \n  mutate(time_numeric = as.numeric(col_date)) %&gt;% \n  group_by(age) %&gt;% \n  arrange(time_numeric) %&gt;%\n  mutate(\n    seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE)\n  )\n\n\n\n\nCode\nplot_ly(out_pava,x = ~sort(unique(as.Date(col_date))),\n          y = ~sort(unique(age)),\n          z = ~matrix(seroprev_monotonic, length(age_val)),\n          showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\nCode\n## boostrap \n\nbootstrap &lt;- function(data, new_data) {\n  # Step 1: resample\n  boot_data &lt;- data %&gt;% slice_sample(n = nrow(data), replace = TRUE)\n  \n  # Step 2: refit model\n  mod &lt;- glm(pos ~ age * col_date + I(age^2) * col_date, \n             family = binomial, \n             data = mutate(boot_data, col_date = as.numeric(col_date)))\n  \n  # Step 3: predict\n  preds &lt;- predict(mod, new_data, type = \"response\") * 100  # seroprev %\n  preds_df &lt;- bind_cols(new_data, fit = preds) |&gt; \n    mutate(col_date = as_date(col_date))\n  \n  # Step 4: apply PAVA per age\n  preds_df %&gt;%\n    mutate(time_numeric = as.numeric(col_date)) %&gt;%\n    group_by(age) %&gt;%\n    arrange(time_numeric) %&gt;%\n    summarise(\n      col_date = col_date,\n      seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE),\n      .groups = \"keep\"\n    )\n}\n\n\nB &lt;- 500  # number of bootstrap iterations\n\nset.seed(42)  # for reproducibility\nboot_results &lt;- map_dfr(1:B, ~bootstrap(atdf, new_data) %&gt;% \n                          mutate(bootstrap = .x))\n\npoint_est &lt;- out_pava %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    sp = mean(seroprev_monotonic)\n  )\n\nsp_ci &lt;- boot_results %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    lower = quantile(seroprev_monotonic, 0.025),\n    upper = quantile(seroprev_monotonic, 0.975),\n    .groups = \"drop\"\n  )  \n\n# df.list &lt;- list(t1222,t423,t823,t1223)\n\nggplot() +\n  geom_line(data = point_est,aes(x = age, y = sp), color = \"blue\") +\n  geom_ribbon(data = sp_ci, aes(x = age,ymin = lower, ymax = upper), fill = \"blue\", alpha = 0.3) +\n  geom_point(aes(x = age, pos*100),\n             shape = \"|\",data = atdf)+\n  labs(y = \"Seroprevalence (%)\", x = \"Age (years)\") +\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\")),\n             nrow = 1) +\n  scale_x_continuous(breaks = seq(0,15,by = 3), minor_breaks = NULL)+\n  scale_y_continuous(limits = c(0,100),breaks = seq(0,100,by = 25),\n                     labels = scales::label_percent(scale = 1), minor_breaks = NULL)+\n  theme_bw()+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))"
  },
  {
    "objectID": "sero.html#unconstrained-plot",
    "href": "sero.html#unconstrained-plot",
    "title": "2  HFMD Seroprevalence",
    "section": "6.5 Unconstrained plot",
    "text": "6.5 Unconstrained plot\n\n\nCode\nplot_ly(prdcts, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit2*100, 16),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)"
  },
  {
    "objectID": "sero.html#applying-pava-algorithm",
    "href": "sero.html#applying-pava-algorithm",
    "title": "2  HFMD Seroprevalence",
    "section": "6.6 Applying PAVA algorithm",
    "text": "6.6 Applying PAVA algorithm\n\n\nCode\ndf_c &lt;- data.frame()\nfor (i in 1:length(age_val)){\n  pred &lt;- prdcts %&gt;% filter(age == age_val[i])\n  pred$fitc &lt;- pavit(as.numeric(pred$fit2))$pai2*100\n  pred$l_fitc &lt;- pavit(as.numeric(pred$lwr))$pai2*100\n  pred$u_fitc &lt;- pavit(as.numeric(pred$upr))$pai2*100\n  df_c &lt;- rbind(df_c,pred)\n}\n\ndf_c &lt;- df_c[order(as.Date(df_c$col_date, format=\"%m/%d/%Y\")),]\n\n\n\n\nCode\nplot_ly(df_c, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fitc, 16),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)\n\n\n\n\n\n\n\n   smooth_plot function \n\nsmooth_plot &lt;- function(data,month,year){\n  \n  clo &lt;- case_when(year == 2022 & month == 12 ~ \"Dec 2022\",\n                   year == 2023 & month == 4 ~ \"Apr 2023\",\n                   year == 2023 & month == 8 ~ \"Aug 2023\",\n                   year == 2023 & month == 12 ~ \"Dec 2023\")\n  \n  clo2 &lt;- case_when(year == 2022 & month == 12 ~ \"#0808cf\",\n                    year == 2023 & month == 4 ~ \"#ed097b\",\n                    year == 2023 & month == 8 ~ \"#ed6b00\",\n                    year == 2023 & month == 12 ~ \"#33516b\")\n  \n  dtaa &lt;- case_when(year == 2022 & month == 12 ~ t1222,\n                    year == 2023 & month == 4 ~ t423,\n                    year == 2023 & month == 8 ~ t823,\n                    year == 2023 & month == 12 ~ t1223)\n  \n  ccc &lt;- data %&gt;% filter(year(col_date) == year & \n                           month(col_date) == month) %&gt;% \n          select(c(\"age\",\"fitc\",\"l_fitc\",\"u_fitc\"))\n  \n  ss &lt;- ccc %&gt;% mutate(age2 = ksmooth(ccc$age ,ccc$fitc ,kernel=\"normal\",bandwidth=2)$x,\n                 fit2c = ksmooth(ccc$age ,ccc$fitc ,kernel=\"normal\",bandwidth=2)$y,\n                 uprc = ksmooth(ccc$age ,ccc$u_fitc ,kernel=\"normal\",bandwidth=2)$y,\n                 lwrc = ksmooth(ccc$age ,ccc$l_fitc ,kernel=\"normal\",bandwidth=2)$y)\n    \n  ss %&gt;%  \n    ggplot(aes(x = age2,y = fit2c))+\n    geom_line(aes(col = clo))+\n    geom_ribbon(aes(x = age2,y = fit2c,\n                    ymin=lwrc, ymax=uprc),alpha = 0.5,fill = clo2)+\n    ylim(0,101)+\n    theme_minimal() +\n    scale_color_manual(name = \"Y series\",\n                       values = c(clo = clo2))+\n    labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n    geom_point(data= dtaa, aes(x = age, m * pos + 1),\n               shape = \"|\",\n               col = clo2)+\n    theme(\n      axis.text.x = element_text(size = 15),\n      axis.text.y = element_text(size = 15),\n      legend.position = \"hide\",\n      legend.text = element_text(size = 15),\n      axis.title.x = element_text(size = 15),\n      axis.title.y = element_text(size = 15))+\n    annotate(\"text\", x = 3, y = 90, label = c(clo),size = 6)  \n}\n\n\n\n\nCode\np1222 &lt;- smooth_plot(data = df_c,month = 12,year = 2022)\np423 &lt;- smooth_plot(data = df_c,month = 4,year = 2023)\np823 &lt;- smooth_plot(data = df_c,month = 8,year = 2023)\np1223 &lt;- smooth_plot(data = df_c,month = 12,year = 2023)\n\nresult_sero2 &lt;- p1222 | p423 | p823 | p1223\n\nresult_sero2/\n  ts"
  },
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "3  Age specific model",
    "section": "",
    "text": "4 Case notification\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\",\n                  col_types = c(\"date\", \"numeric\", \"text\",\n                                \"text\", \"text\", \"date\", \"date\", \"date\",\n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;%\n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\")\n\ncase &lt;- df1 %&gt;% filter(year(adm_date) == 2023 ) %&gt;%\n        group_by(adm_week) %&gt;%\n        count()\ncase$t &lt;- 1:nrow(case)\nCode\ncensus2019 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\")\n\npophcm &lt;- census2019 %&gt;% filter(province == \"Thành phố Hồ Chí Minh\") %&gt;%\n  group_by(age) %&gt;% summarise(n = sum(n))\n\npophcm$agee &lt;- as.numeric(word(pophcm$age,1))\npop1 &lt;- pophcm %&gt;% filter(agee &lt;= 6)\nN1 &lt;- sum(pop1$n)\nCode\ncase2 &lt;- df1 %&gt;%\n  group_by(adm_week) %&gt;%\n  count()\n\ncase2 %&gt;% ggplot(aes(x = adm_week,y = n )) +\n  geom_line()+\n  geom_vline(xintercept = as.Date(\"2014-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2014-08-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2015-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2015-08-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2016-05-27\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2016-08-15\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2017-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2017-08-14\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2018-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2018-08-20\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2019-05-25\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2019-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2020-07-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2020-09-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2021-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2021-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2022-06-30\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2022-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2023-05-26\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2023-08-21\"),\n             alpha = 0.4)+\n  scale_x_date(breaks = \"1 year\",date_labels = \"%Y\")+\n  labs(x = \"Admission week\",y = \"Number of cases\")+\n  theme_minimal()"
  },
  {
    "objectID": "model.html#model-structure",
    "href": "model.html#model-structure",
    "title": "3  Age specific model",
    "section": "6.1 Model structure",
    "text": "6.1 Model structure\n\nage_mod &lt;- odin({\n  deriv(S1) &lt;- -(beta11*I1 + beta12*I2) * S1 + mu * S1\n  deriv(I1) &lt;- (beta11*I1 + beta12*I2) * S1 - gamma1*I1\n  deriv(R1) &lt;- gamma1 * I1\n\n  deriv(S2) &lt;- -(beta12*I1 + beta22*I2) * S2\n  deriv(I2) &lt;- (beta12*I1 + beta22*I2) * S2 - gamma2*I2\n  deriv(R2) &lt;- gamma2 * I2\n\n  initial(S1) &lt;- S1_init\n  initial(I1) &lt;- I1_init\n  initial(R1) &lt;- R1_init\n\n  initial(S2) &lt;- S2_init\n  initial(I2) &lt;- I2_init\n  initial(R2) &lt;- R2_init\n\n  beta11 &lt;- user(0.003)\n  beta12 &lt;- user(0.003)\n  # beta21 &lt;- user(0.003)\n  beta22 &lt;- user(0.003)\n\n  mu &lt;- user(0.5)\n\n  gamma1 &lt;- user(0.5)\n  gamma2 &lt;- user(0.5)\n\n  S1_init &lt;- user(0.8)\n  I1_init &lt;- user(0.2)\n  R1_init &lt;- user(0)\n\n  S2_init &lt;- user(0.6)\n  I2_init &lt;- user(0.4)\n  R2_init &lt;- user(0)\n})\n\n── R CMD INSTALL ───────────────────────────────────────────────────────────────\n* installing *source* package 'odin23cdddbb' ...\n** using staged installation\n** libs\nusing C compiler: 'gcc.exe (GCC) 13.2.0'\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c odin.c -o odin.o\nodin.c: In function 'odin_metadata':\nodin.c:168:18: warning: unused variable 'internal' [-Wunused-variable]\n  168 |   odin_internal *internal = odin_get_internal(internal_p, 1);\n      |                  ^~~~~~~~\nodin.c: In function 'user_get_scalar_int':\nodin.c:265:47: warning: format '%d' expects argument of type 'int', but argument 2 has type 'const char *' [-Wformat=]\n  265 |       Rf_error(\"Expected scalar integer for '%d'\", name);\n      |                                              ~^    ~~~~\n      |                                               |    |\n      |                                               int  const char *\n      |                                              %s\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c registration.c -o registration.o\ngcc -shared -static-libgcc -o odin23cdddbb.dll tmp.def odin.o registration.o -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -LC:/PROGRA~1/R/R-44~1.2/bin/x64 -lR\ninstalling to C:/Users/ASUS/AppData/Local/Temp/RtmpmyRCfN/devtools_install_561842464c96/00LOCK-file56181781123e/00new/odin23cdddbb/libs/x64\n* DONE (odin23cdddbb)\n\n\n\n\nCode\nmu0 = 0.5\ngamma1_0 = 5/30\ngamma2_0 = 5/30\n\nS1_0 = 0.4\nI1_0 = 0.6\nR1_0 = 0\n\nS2_0 = .5\nI2_0 = .5\nR2_0 = 0"
  },
  {
    "objectID": "model.html#likelihood",
    "href": "model.html#likelihood",
    "title": "3  Age specific model",
    "section": "6.2 Likelihood",
    "text": "6.2 Likelihood\n\n\nCode\nbinom_loglik &lt;- function(data,par,N=N1) {\n\n  sir_odin_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                              # beta21 = par[3],\n                              beta22 = par[3],\n                              mu = mu0,\n                              gamma1 = gamma1_0, gamma2 = gamma2_0,\n                              S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                              S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(0, 52, by = 1)\n\n  sir_output &lt;- sir_odin_run$run(times)\n  sir_output &lt;- data.frame(sir_output) %&gt;% mutate(prev = I1/N1)\n  -sum(dbinom(x=data$n, size=N, prob=sir_output$prev[-1], log=TRUE))\n}\n\n\n\n\nCode\nbeta_mle &lt;- optim(par=c(beta11 = 0.1, beta12 = 0.1,\n                        # beta21 = 0.1,\n                        beta22 = 0.1),\n                  fn=binom_loglik,\n                  data=case,\n                  method=\"L-BFGS-B\",\n                  lower=0.1, upper=0.9)\n\nbeta_mle$par\n\n\n   beta11    beta12    beta22 \n0.1000000 0.6409961 0.1000000 \n\n\n\n\nCode\n## function to apply new parameters from optimization\nafter_cal &lt;- function(par){\n  age_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                         # beta21 = par[3],\n                         beta22 = par[3],\n                         mu = mu0,\n                         gamma1 = gamma1_0, gamma2 = gamma2_0,\n                         S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                         S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(1:52)\n\n  out_mod &lt;- data.frame(age_run$run(times)) %&gt;% mutate(prev=I1/N1)\n  return(out_mod)\n}\n\n\n\n\nCode\niii &lt;- after_cal(beta_mle$par) %&gt;% mutate(ca = case$n[-53]/N1)\n\n\n# ggplot(iii) +\n#   geom_line(aes(x = t,y=prev*250))+\n#   geom_point(aes(x = t,y=ca))"
  },
  {
    "objectID": "index.html#data-description",
    "href": "index.html#data-description",
    "title": "HFMD 2023",
    "section": "1.1 Data description",
    "text": "1.1 Data description\n\n\nCode\ndf1$gender &lt;- df1$gender %&gt;% str_replace_all(\n  c( \"nam|NAM|Nam\"  = \"Male\",\n     \"nữ|NỮ|Nữ\"  = \"Female\"))\n\ndf1$inout &lt;- df1$inout %&gt;% str_replace_all(\n  c( \"Chuyển viện\"  = \"Transfer\",\n     \"Điều trị nội trú\"  = \"Inpatient\",\n     \"Điều trị ngoại trú\"  = \"Outpatient\",\n     \"Ra viện\" = \"Discharge\",\n     \"Tình trạng khác\" = \"Others\",\n     \"Tử vong\" = \"Death\"\n     ))\n\ndf1 %&gt;% mutate(year = year(adm_date)) %&gt;% \n  tbl_summary(by = year,\n              label = c(age1 ~ \"Age\",\n                        gender ~ \"Gender\"),\n              statistic = list(\n                age1 ~ \"{median} ({p5}, {p95})\",\n                c(gender) ~ c( \"{n} ({p}%)\")\n              ),\n              missing = \"no\",\n              include = c(age1,gender))  %&gt;%\n  bold_labels()\n\n\n\n\n\n\n  \n    \n      Characteristic\n      2013\nN = 8,0781\n      2014\nN = 10,0431\n      2015\nN = 8,7291\n      2016\nN = 5,7401\n      2017\nN = 30,8251\n      2018\nN = 39,3521\n      2019\nN = 28,4861\n      2020\nN = 16,3981\n      2021\nN = 9,7721\n      2022\nN = 19,1651\n      2023\nN = 43,3801\n      2024\nN = 7,3971\n    \n  \n  \n    Age\nNA (NA, NA)\nNA (NA, NA)\nNA (NA, NA)\nNA (NA, NA)\n1.84 (0.69, 5.06)\n1.95 (0.69, 5.68)\n1.85 (0.66, 5.44)\n1.83 (0.71, 5.02)\n2.21 (0.74, 5.45)\n2.25 (0.78, 5.50)\n2.54 (0.79, 6.04)\n2.35 (0.69, 5.95)\n    Gender\n\n\n\n\n\n\n\n\n\n\n\n\n        Female\n3,159 (39%)\n4,070 (41%)\n3,617 (41%)\n2,391 (42%)\n12,982 (42%)\n16,815 (43%)\n12,196 (43%)\n6,944 (42%)\n4,123 (42%)\n7,950 (41%)\n18,461 (43%)\n3,121 (42%)\n        Male\n4,919 (61%)\n5,973 (59%)\n5,112 (59%)\n3,349 (58%)\n17,843 (58%)\n22,537 (57%)\n16,290 (57%)\n9,454 (58%)\n5,649 (58%)\n11,215 (59%)\n24,919 (57%)\n4,276 (58%)\n  \n  \n  \n    \n      1 Median (5% Centile, 95% Centile); n (%)"
  },
  {
    "objectID": "index.html#location",
    "href": "index.html#location",
    "title": "HFMD 2023",
    "section": "1.2 Location",
    "text": "1.2 Location\n\n\nCode\nspa_df &lt;- df1[,c(\"district\",\"adm_date\",\"adm_week\")] %&gt;% na.omit()\n\nspa_df$day &lt;- day(spa_df$adm_date)\nspa_df$month &lt;- month(spa_df$adm_date)\nspa_df$year &lt;- year(spa_df$adm_date)\n\nqhage &lt;- spa_df %&gt;% \n  filter(year == 2023) %&gt;% group_by(year,month,day) %&gt;%\n  count(district) %&gt;% \n  mutate(datetime = lubridate::make_datetime(2023, month,day)) %&gt;% \n  ggplot(aes(x = datetime, y = n)) + geom_line() +\n  scale_x_datetime(breaks = lubridate::make_datetime(2023,1:12),labels = month.abb)+\n  facet_wrap(~district,\n             ncol = 5)+\n  theme_bw()+\n  xlab(\"Addmission date (day)\")+\n  ylab(\"Cases\")+\n  ylim(0,50)+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 10),\n        axis.text.y = element_text(size = 15),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        strip.text.x = element_text(size = 15))\n\n\n\n\nCode\nqhage"
  },
  {
    "objectID": "index.html#age-structure",
    "href": "index.html#age-structure",
    "title": "HFMD 2023",
    "section": "1.3 Age structure",
    "text": "1.3 Age structure\n\n\nCode\ndf23 &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter(!is.na(adm_date) & !is.na(dob)) \n\n# df23 &lt;- df23[,c(\"adm_date\",\"age1\")]\n\ndf23 &lt;- df23[,c(\"adm_week\",\"age1\")]\n\ndf23$agr &lt;- cut(df23$age1, breaks = c(0, 1, 2, 3, 4,5,6,Inf), right = F)\ndf23$agr &lt;- factor(df23$agr, labels = c(\"[0-1)\", \"[1-2)\", \"[2-3)\",\n                                        \"[3-4)\",\"[4-5)\",\"[5-6)\",\"6+\"))\n\n\n\n\nCode\ndf23 |&gt; \n  filter(!is.na(adm_week), !is.na(agr)) |&gt; \n  count(adm_week, agr) |&gt; \n  group_by(adm_week) |&gt; \n  mutate(prop = n / sum(n)) |&gt; \n  data.frame() %&gt;% \n  ggplot(aes(x = adm_week,y=prop)) +\n  geom_bar(stat = \"identity\")+\n  facet_wrap(vars(agr))+\n  theme_bw()+\n  labs(x = \"Admission week\",y= \"Percentage (%)\")+\n  theme(axis.text.x = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.title.y = element_text(size = 6))\n\n\n\n\n\n\n\nCode\n## sliding window function\nslide_age &lt;- function(time1,age1,w1,s1){\n  df1 &lt;- data.frame(time1,age1) %&gt;%                   ## line listing data frame\n    filter(!is.na(time1) & !is.na(age1)) %&gt;%\n    arrange(time1)\n\n  a_df1 &lt;- df1 %&gt;% count(time1)                      ## aggregate data frame\n\n  total1 &lt;- nrow(a_df1)\n  spots1 &lt;- seq(from = 1, to = (total1 - w1 + 1), by = s1)\n\n  out_total &lt;- data.frame()\n\n  for (i in 1:length(spots1)){\n    range1 &lt;- data.frame(a_df1[spots1[i]:(spots1[i] + w1 - 1),1])\n    result1 &lt;- df1$age1[df1$time1 &gt;= range1[1,] & df1$time1 &lt;= range1[w1,]]\n    out &lt;- data.frame(date = rep(as.character(range1[ceiling(w1/2),]),length(result1)),\n                      age = result1)\n    out &lt;- out[order(out$age),]\n    out_total &lt;- rbind(out_total,out)\n  }\n  output &lt;- list()\n  output$wdat &lt;- out_total\n  output$adat &lt;- out_total %&gt;% count(date)\n  output$parms &lt;- data.frame(w = w1,s =s1)\n  return(output)\n}\n\n\ncase_noti &lt;- function(timee, agee,lab = FALSE){\n\n  dat &lt;- data.frame(timee,agee) %&gt;%\n    filter(!is.na(timee) & !is.na(agee)) %&gt;%\n    count(timee)\n\n  ts &lt;- ggplot(dat, aes(x =timee, y = n)) +\n    geom_bar(stat = \"identity\") +\n    labs(y = \"Cases\") +\n    theme_minimal()\n\n  if(lab == TRUE){\n    ts\n  } else {\n    ts + theme(axis.title.x = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank())\n  }\n\n}\n\n## plot\n\nco &lt;- data.frame()\n\nfor (i in 0:6){\n  gen &lt;- seq(0,1,le=52) + i\n  co &lt;- rbind(co,gen)\n}\n\n\ndf23 &lt;- df1 %&gt;% filter(year(adm_date) == 2023) \nwwww &lt;- slide_age(time1 = df23$adm_date,\n                  age1 =  df23$age1,\n                  w1 = 7, s1=7)\n\nch &lt;- data.frame(date = wwww$adat$date,\n           c0 = as.numeric(co[1,]),\n           c1 = as.numeric(co[2,]),\n           c2 = as.numeric(co[3,]),\n           c3 = as.numeric(co[4,]),\n           c4 = as.numeric(co[5,]),\n           c5 = as.numeric(co[6,]))\n\ntshm &lt;- function(model,agelim) {\n  ts &lt;- case_noti(model$wdat$date,model$wdat$age)\n  hm &lt;- ggplot(data=model$wdat, aes(x=date, y=age)) +\n    stat_density(\n      aes(fill = after_stat(density)),\n      geom = \"raster\",\n      position = \"identity\"\n    )+\n    scale_fill_gradient(low=\"yellow\", high=\"red\")+\n    theme_minimal()+\n    scale_y_reverse(lim= rev(agelim),breaks = seq(0,6))+\n    # scale_x_discrete(guide = guide_axis(n.dodge = 2))+\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8))+\n  geom_line(data = ch,aes(x = date,y = c0),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c1),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c2),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c3),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c4),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c5),col = \"white\",\n            group = 1,lwd = 0.25,alpha = 0.5)\n  ts/hm\n}\n\n\n\n\nCode\ntshm(wwww,c(0,6))"
  },
  {
    "objectID": "index.html#tsir-model",
    "href": "index.html#tsir-model",
    "title": "HFMD 2023",
    "section": "1.4 tSIR model",
    "text": "1.4 tSIR model\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(mgcv)\nlibrary(patchwork)\nlibrary(odin)\nlibrary(tsiR)\nlibrary(janitor)\n\n\n\n\nCode\ncount_dangky_week &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky_week.rds\")\nchild &lt;- count_dangky_week %&gt;% filter(birth_year &gt;= 2017) %&gt;% group_by(birth_week, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\ncolnames(child) &lt;- c(\"week\",\"year\",\"birth\")\n## combine week 52 and 53\n\nchild$week &lt;- ifelse(child$week == 53,52,child$week)\n\nchild &lt;- child %&gt;% group_by(year) %&gt;%\n  mutate(newn = ifelse(week == 52, sum(birth[week==52]), birth)) %&gt;%\n  {data.frame(.$week, .$year, .$newn )} %&gt;% unique() %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"birth\"))\n\nchild$week2 &lt;- seq(1:length(child$week))\n\ntime &lt;- data.frame()\n\nfor (i in 2017:2022){\n  range &lt;- child$week[child$year == i]\n  if (length(range) == 52){\n  time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                                 length.out = length(range)) %&gt;% data.frame()\n  } else {\n  time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                                   length.out = 52)[1:length(range)] %&gt;% data.frame()\n  }\n  time &lt;- rbind(time,time_add)\n}\n\n\nchild[,5] &lt;- time %&gt;%\n  magrittr::set_colnames(c(\"time\"))\n\n## model fitting\nfit &lt;- mgcv::gam(birth ~ s(week) + s(week2),method = \"REML\",data = child)\n\n\n\n\nCode\ncutpoint &lt;- function(point){\n  fitt &lt;- mgcv::gam(birth ~ s(week) + s(week2),\n                    method = \"REML\",data = child[-c(point:nrow(child)),])\n\n  new_data2 &lt;- data.frame(week = rep(1:52,7))\n\n  new_data2$week2 &lt;- seq(1,nrow(new_data2))\n  new_data2$year &lt;- rep(2017:2023,each = 52)\n\n  time &lt;- data.frame()\n  for (i in 2017:2023){\n    range &lt;- new_data2$week[new_data2$year == i]\n    time_add &lt;- data.frame(seq.int(i + 7/365 ,(i+1) - 7/365,\n                                   length.out = length(range)))\n    time &lt;- rbind(time,time_add)\n  }\n\n  new_data2[4] &lt;- time %&gt;%\n    magrittr::set_colnames(c(\"time\"))\n\n  est2 &lt;- predict.gam(fitt,newdata = new_data2,\n                      type=\"response\",se.fit = TRUE)\n\n  new_data2 &lt;- new_data2 %&gt;% mutate(\n    fit = est2$fit,\n    lwr = est2$fit - qt(0.95,nrow(new_data2))*est2$se.fit,\n    upr = est2$fit + qt(0.95,nrow(new_data2))*est2$se.fit,\n  )\n  out &lt;- list()\n  out$point &lt;- point\n  out$df &lt;- new_data2\n  return(out)\n}\n\n\nplot_cp &lt;- function(model){\n  dta &lt;- model$df\n  ggplot(data = dta) +\n    geom_line(aes(x = time,y = fit),col = \"blue\")+\n    geom_ribbon(aes(x = time,ymin = lwr, ymax = upr), fill = \"royalblue\",alpha = 0.4)+\n    geom_vline(xintercept = dta$time[dta$week2 == model$point])+\n    ylab(\"births\")+\n    theme_minimal()\n}\n\n\n\n\nCode\nmodel &lt;- cutpoint(270)\n\nplot_cp(model)+\n  geom_point(data = child[1:270,], aes(x = time, y = birth))+\n  annotate(\"text\", x= 2017, y=3500, label= \"Fitting\") +\n  annotate(\"text\", x = 2023.5, y=3500, label = \"Estimation\")+\n  plot_annotation(\n    title = \"Fitting data until week 10/2022\"\n  )\n\n\n\n\n\n\n\nCode\nhfmd1723 &lt;- df1 %&gt;% filter(year(adm_week) &gt;= \"2017\" & year(adm_week) &lt;= \"2023\") %&gt;%\n    filter(!is.na(adm_week) ) %&gt;%\n    count(adm_week)\n\n\nagr17 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2017\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week)) %&gt;% as.data.frame()\n\nagr17$week &lt;- ifelse(agr17$week == 53,52,agr17$week)\n\nd17 &lt;- agr17 %&gt;% mutate(newn = ifelse(week == 52, sum(n[week==52]), n),\n                        year = year(adm_week)) %&gt;%\n  {data.frame(.$week, .$year, .$newn )} %&gt;% unique() %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 18\n\nd18 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2018\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week),\n                                       year = year(adm_week)) %&gt;%\n  as.data.frame() %&gt;% select(week,year,n) %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 19\nd19 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2019\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week),\n                                       year = year(adm_week)) %&gt;%\n  as.data.frame() %&gt;% select(week,year,n) %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 20\nd20 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2020\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week),\n                                       year = year(adm_week)) %&gt;%\n  as.data.frame() %&gt;% select(week,year,n) %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 21\nd21 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2021\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week),\n                                       year = year(adm_week)) %&gt;%\n  as.data.frame() %&gt;% select(week,year,n) %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 22\nd22 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2022\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week),\n                                       year = year(adm_week)) %&gt;%\n  as.data.frame() %&gt;% select(week,year,n) %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n## 23\nagr23 &lt;- hfmd1723 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;% mutate(week = 1:length(adm_week)) %&gt;% as.data.frame()\n\nagr23$week &lt;- ifelse(agr23$week == 53,52,agr23$week)\n\nd23 &lt;- agr23 %&gt;% mutate(newn = ifelse(week == 52, sum(n[week==52]), n),\n                        year = year(adm_week)) %&gt;%\n  {data.frame(.$week, .$year, .$newn )} %&gt;% unique() %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"cases\"))\n\n\ncases1723 &lt;- rbind(d17,d18,d19,d20,d21,d22,d23)\n\n\n\n\nCode\nbirth1723 &lt;- model$df %&gt;%\n  select(week,year,fit)\n\nhcm1723 &lt;- left_join(cases1723,birth1723, by = c(\"week\" = \"week\",\"year\" = \"year\"))\n\ntime &lt;- data.frame()\n\nfor (i in 2017:2023){\n  range &lt;- hcm1723$week[hcm1723$year == i]\n  if (length(range) == 52){\n    time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                        length.out = length(range)) %&gt;% data.frame()\n  } else {\n    time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                        length.out = 52)[1:length(range)] %&gt;% data.frame()\n  }\n  time &lt;- rbind(time,time_add)\n}\n\nhcm1723[,5] &lt;- time %&gt;%\n  magrittr::set_colnames(c(\"time\"))\n\nhcm1723 &lt;- hcm1723 %&gt;% select(time,cases,fit) %&gt;%\n  magrittr::set_colnames(c(\"time\",\"cases\",\"births\"))\n\n\n\n\nCode\ngenerator &lt;- odin::odin({\n  deriv(N) &lt;- r * N * (1 - N / K)\n  initial(N) &lt;- N0\n\n  N0 &lt;- user(1)\n  K &lt;- user(100)\n  r &lt;- user()\n})\n\n\n\n\nCode\nmod2 &lt;- generator$new(N0 = 8446000,r = 7.4/52,K= 9456700)\ny1723 &lt;- mod2$run(1:360)\n\n\n\n\nCode\nhcm1723 &lt;- cbind(hcm1723,y1723)\ncolnames(hcm1723) &lt;- c(\"time\",\"cases\",\"births\",\"t\",\"pop\")\nhcm_hfmd1723 &lt;- runtsir(data = hcm1723[,-4], IP = 1, xreg = \"cumcases\", \n                        regtype = \"gaussian\",alpha = NULL, sbar = NULL, \n                        method = \"deterministic\", nsim = 1000,\n                        family = \"gaussian\", link = \"identity\")\n\n\n\n\nCode\nplotdata(hcm1723[,-4])\n\n\n\n\n\ntSIR model fitting for the whole period\n\n\nCode\nhcm1723 %&gt;% \nggplot() +\n  geom_line(aes(x = time ,group = 1, y = hcm_hfmd1723$res$mean,\n                linetype = \"model fitted\"))+\n  geom_line(aes(x= time, group = 1, y = cases,\n                linetype = \"cases reported\"))+\n  # geom_bar(aes(x= as.character(date), y = cases),stat = \"identity\")+\n  theme_minimal()+\n  labs(y = \"Cases\",x=\"Time\")+\n    scale_linetype_manual(values = c(\"cases reported\" = \"dashed\",\n                                   \"model fitted\" = \"solid\"),\n                        name=\"Analysis Type\")+\n  geom_vline(xintercept = 2021.491,\n             alpha = 0.25,col = \"blue\",lwd = 0.5)+\n  geom_vline(xintercept = 2021.491+(7/365*4)*4,\n             alpha = 0.25,col = \"blue\",lwd = 0.5)\n\n\n\n\n\nMay be the covid quarantine effect the performance of model. Tried to fit before and after covid quanrantine\n\n\nBefore quarantine\n\n\nCode\nbefore &lt;- hcm1723[,-4] %&gt;%  filter(time &lt;= 2021.491)\nhcmbefore &lt;- runtsir(data = before, IP = 1, xreg = \"cumcases\", \n                        regtype = \"gaussian\",alpha = NULL, sbar = NULL, \n                        method = \"deterministic\", nsim = 1000,\n                        family = \"gaussian\", link = \"identity\")\n\n\n\n\nCode\nbefore %&gt;% \nggplot() +\n  geom_line(aes(x = time ,group = 1, y = hcmbefore$res$mean,\n                linetype = \"model fitted\"))+\n  geom_line(aes(x= time, group = 1, y = cases,\n                linetype = \"cases reported\"))+\n  # geom_bar(aes(x= as.character(date), y = cases),stat = \"identity\")+\n  theme_minimal()+\n  labs(y = \"Cases\",x=\"Time\")+\n    scale_linetype_manual(values = c(\"cases reported\" = \"dashed\",\n                                   \"model fitted\" = \"solid\"),\n                        name=\"Analysis Type\")\n\n\n\n\n\n\nAfter quarantine\n\n\nCode\nafter &lt;- hcm1723[,-4] %&gt;%  filter(time &gt;= 2022.189)\nhcmafter &lt;- runtsir(data = after, IP = 1, xreg = \"cumcases\", \n                        regtype = \"gaussian\",alpha = NULL, sbar = NULL, \n                        method = \"deterministic\", nsim = 1000,\n                        family = \"gaussian\", link = \"identity\")\n\n\n\n\nCode\nafter %&gt;% \nggplot() +\n  geom_line(aes(x = time ,group = 1, y = hcmafter$res$mean,\n                linetype = \"model fitted\"))+\n  geom_line(aes(x= time, group = 1, y = cases,\n                linetype = \"cases reported\"))+\n  # geom_bar(aes(x= as.character(date), y = cases),stat = \"identity\")+\n  theme_minimal()+\n  labs(y = \"Cases\",x=\"Time\")+\n    scale_linetype_manual(values = c(\"cases reported\" = \"dashed\",\n                                   \"model fitted\" = \"solid\"),\n                        name=\"Analysis Type\")"
  },
  {
    "objectID": "index.html#attack-rate",
    "href": "index.html#attack-rate",
    "title": "HFMD 2023",
    "section": "1.5 Attack rate",
    "text": "1.5 Attack rate\n\n\nCode\nw23 &lt;- slide_age(time1 = df23$adm_date,\n                  age1 =  df23$age1,\n                  w1 = 7, s1=7)\n\n\n\n\nCode\npop &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky.rds\")\npop_a &lt;- pop %&gt;% group_by(birth_month, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\n\ncolnames(pop_a) &lt;- c(\"m\",\"y\",\"n\")\n\npop_a$dob &lt;- str_c(pop_a$y,pop_a$m,sep = \"-\") %&gt;% ym()\n\n##\nhfmd23 &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week)\n\nhfmd23$week &lt;- 1:length(hfmd23$adm_week)\nhfmd23$week &lt;- ifelse(hfmd23$week == 53,52,hfmd23$week)\n\nhfmd23$n2 &lt;- ifelse(hfmd23$week == 52, sum(hfmd23$n[hfmd23$week==52]), hfmd23$n)\n\nhfmd23 &lt;- hfmd23[-53,]\n\n##\ngenerator &lt;- odin::odin({\n  deriv(N) &lt;- r * N * (1 - N / K)\n  initial(N) &lt;- N0\n\n  N0 &lt;- user(1)\n  K &lt;- user(100)\n  r &lt;- user()\n})\n\nmod &lt;- generator$new(N0 = 9381717,r = 7.4/52,K= 9456700)\ny3 &lt;- mod$run(1:52)\n\n\n##\ndta23 &lt;- model$df %&gt;% filter(year == 2023)\nhcm23 &lt;- data.frame(time = dta23$time,\n                    cases = hfmd23$n,\n                    births = dta23$fit,\n                    pop = y3[,2])\n\nhcm_hfmd23 &lt;- runtsir(data = hcm23, IP = 1, xreg = \"cumcases\", regtype = \"gaussian\",\n                     alpha = NULL, sbar = NULL, method = \"negbin\", nsim = 100,\n                     family = \"gaussian\", link = \"identity\")\n\n\n[1] \"gaussian regressian failed -- switching to loess regression\"\n\n\n           alpha        mean beta         mean rho         mean sus \n        6.90e-01         7.62e-05         1.03e+00         9.46e+04 \nprop. init. sus. prop. init. inf. \n        7.54e-03         6.05e-06 \n\n\nCode\n## recaculate attack rate\n\ntime1 = df1$adm_date\nage1 =  df1$age1\ndob = pop_a$dob\nn = pop_a$n\n\ndft &lt;- data.frame(time1,age1) %&gt;%\n  filter(!is.na(time1) & !is.na(age1)) %&gt;%\n  arrange(time1)\n\n\ndft$agr=as.factor(cut(dft$age1, c(0,0.5,\n                                  1,1.5,\n                                  2,2.5,\n                                  3,3.5,\n                                  4,4.5,5,100), right=TRUE ))\nlevels (dft$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                     \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                     \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                     \"4.5-5\",\"5+\")\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nout_total &lt;- data.frame()\ndateaa &lt;- hfmd23$adm_week+3\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nfor (i in 1:52){\n  sus_pop$age &lt;- interval(sus_pop$dob, dateaa[i]) / years(1)\n\n  sus_pop$agr=as.factor(cut(sus_pop$age, c(0,0.5,\n                                           1,1.5,\n                                           2,2.5,\n                                           3,3.5,\n                                           4,4.5,5,100), right=TRUE ))\n  levels (sus_pop$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                           \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                           \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                           \"4.5-5\",\"5+\")\n  outcum &lt;- sus_pop %&gt;% group_by(agr) %&gt;%\n    summarise(n = sum(n)) %&gt;%\n    as.data.frame()\n  outcum$date &lt;- rep(dateaa[i],nrow(outcum))\n  out_total &lt;- rbind(out_total,outcum)\n}\n\ndeno &lt;- out_total %&gt;%\n  pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\ncasss &lt;- wwww$wdat\n\ncasss$agr=as.factor(cut(casss$age, c(0,0.5,1,1.5,2,2.5,\n                                     3,3.5,4,4.5,5,100), right=TRUE ))\nlevels (casss$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                       \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                       \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                       \"4.5-5\",\"5+\")\n\ncasss &lt;- casss %&gt;% group_by(date,agr) %&gt;%\n  count() %&gt;% pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\ncasss &lt;- casss[,-13]\ncasss &lt;- replace(casss,is.na(casss), 0)\ncasss &lt;- casss[,c(1:10,12,11)]\n\natkr &lt;- data.frame()\n\natkr &lt;- rbind(atkr,as.numeric(casss[1,-1])/as.numeric(deno[1,-1]))\nfor (i in 1:51){\n  new &lt;- as.numeric(casss[i+1,-1])/(as.numeric(deno[i+1,-1]) - as.numeric(casss[i,-1]))\n  atkr &lt;- rbind(atkr,new)\n}\natkr &lt;- cbind(deno$date,atkr)\n\ncolnames(atkr) &lt;- colnames(deno)\natkr &lt;- replace(atkr,is.na(atkr), 0)\n\natk_plot &lt;- atkr %&gt;% pivot_longer(cols=c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                                         \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                                         \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                                         \"4.5-5\",\"5+\"),\n                                  names_to= 'agr',\n                                  values_to='atk') %&gt;% as.data.frame()\n\n\n\n\nCode\nbeta &lt;- hcm_hfmd23$contact\nbeta[52,] &lt;- beta[51,]\n\natk &lt;- ggplot(atk_plot, aes(x=as.character(date), y=agr, fill = atk)) +\n  geom_raster()+\n  scale_fill_gradient(low=\"yellow\", high=\"red\",\n                        name = \"Attack rate\")+\n  scale_y_discrete(limits=rev)+\n  theme_minimal()+\n  labs(y = \"Age group\")+\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.y = element_text(size = 8),\n        legend.text = element_text(size=4),\n        legend.title = element_text(size=7))\n\nc &lt;- ggplot(data = hcm23 %&gt;%\n  select(time,cases) %&gt;% mutate(date = hfmd23$adm_week + 3)) +\n  geom_line(aes(x= as.character(date), group = 1, y = cases,\n                linetype = \"cases reported\"))+\n  # geom_bar(aes(x= as.character(date), y = cases),stat = \"identity\")+\n  geom_line(aes(x = as.character(date) ,group = 1, y = hcm_hfmd23$res$mean,\n                linetype = \"model fitted\"))+\n  geom_line(aes(x = as.character(date),\n                y= beta$beta*15000000,\n                group =1,col = \"contact rate\"),alpha = 0.3,inherit.aes = FALSE) +\n  scale_color_manual(values = c(\"contact rate\" = \"blue\"),\n                     name=\"Analysis Type\")+\n  scale_linetype_manual(values = c(\"cases reported\" = \"dashed\",\"model fitted\" = \"solid\"),\n                        name=\"Analysis Type\")+\n  scale_y_continuous(\n    name = \"Cases\",\n    # Add a second axis and specify its features\n    sec.axis = sec_axis(~./15000000, name=\"Contact rate\")\n  )+\n  theme_minimal()+\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.title= element_blank(),\n        legend.position = \"inside\",\n        legend.position.inside =  c(.15, .60))+\n  geom_vline(xintercept = as.character(\"2023-05-24\"))+\n  geom_vline(xintercept = as.character(\"2023-09-06\"))+\n  annotate(\n    geom = \"text\", x = as.character(\"2023-05-31\"), y = 3500,\n    label = \"Summer break\", hjust = 0, vjust = 1, size = 3\n  )\n\nhmc &lt;- ggplot(data=w23$wdat, aes(x=date, y=age)) +\n  stat_density(\n    aes(fill = after_stat(density)),\n    geom = \"raster\",\n    position = \"identity\"\n  )+\n  scale_fill_gradient(low=\"yellow\", high=\"red\")+\n  geom_line(data = ch,aes(x = date,y = c0),col = \"white\",\n            group = 1,lwd = 0.5,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c1),col = \"white\",\n            group = 1,lwd = 0.5,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c2),col = \"white\",\n            group = 1,lwd = 0.5,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c3),col = \"white\",\n            group = 1,lwd = 0.5,alpha = 0.5)+\n  geom_line(data = ch,aes(x = date,y = c4),col = \"white\",\n            group = 1,lwd = 0.5,alpha = 0.5)+\n  scale_y_reverse(lim= rev(c(0,5)))+\n  theme_minimal()+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8),\n        legend.text = element_text(size=4),\n        legend.title = element_text(size=7))\n\n\n\n\nCode\nc/\natk/\nhmc"
  },
  {
    "objectID": "sero.html#unconstraint-fit",
    "href": "sero.html#unconstraint-fit",
    "title": "2  HFMD Seroprevalence",
    "section": "8.1 Unconstraint fit",
    "text": "8.1 Unconstraint fit\n\n\nCode\nglmfit &lt;- plot1222 | plot0423 | plot0823 | plot1223\n\nserum_dis/\n  glmfit/\n  ts"
  },
  {
    "objectID": "sero.html#unconstraint-fit-1",
    "href": "sero.html#unconstraint-fit-1",
    "title": "2  HFMD Seroprevalence",
    "section": "8.2 Unconstraint fit",
    "text": "8.2 Unconstraint fit\n\n\nCode\nresult_sero2 &lt;- p1222 | p423 | p823 | p1223\n\nserum_dis/\n  result_sero2/\n  ts"
  },
  {
    "objectID": "sero.html#unconstrained-fit",
    "href": "sero.html#unconstrained-fit",
    "title": "2  HFMD Seroprevalence",
    "section": "8.1 Unconstrained fit",
    "text": "8.1 Unconstrained fit\n\n\nCode\n# #| fig-width: 15\n# #| fig-height: 8\n# #| out-width: \"100%\"\n# glmfit &lt;- plot1222 | plot0423 | plot0823 | plot1223\n# \n# serum_dis/\n#   glmfit/\n#   ts\n# \n# ggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.svg\",dpi = 500,width = 15,height = 8,bg = \"white\")\n# ggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.png\",dpi = 500,width = 15,height = 8,bg = \"white\")"
  },
  {
    "objectID": "sero.html#constrained-fit",
    "href": "sero.html#constrained-fit",
    "title": "2  HFMD Seroprevalence",
    "section": "8.2 Constrained fit",
    "text": "8.2 Constrained fit\n\n\nCode\nserum_dis/\n  result_sero2/\n  ts\n\n\n\n\n\nCode\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/con.svg\",dpi = 500,width = 15,height = 8,bg = \"white\")\nggsave(\"D:/OUCRU/hfmd/figure/EV71 present/con.png\",dpi = 500,width = 15,height = 8,bg = \"white\")"
  },
  {
    "objectID": "sero_description.html",
    "href": "sero_description.html",
    "title": "3  Serological data description",
    "section": "",
    "text": "Code\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(mgcv)\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(sf)\nlibrary(janitor)\nlibrary(ggsci)\nlibrary(cowplot)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\n\n\n\n\nCode\n## data input\n\napr_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 &lt;- data.frame(apr_2023[-c(1,2),c(6,8,10:14)])\nt423$pos &lt;- replace(t423$...14,is.na(t423$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t423) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age &lt;- as.numeric(t423$age)\nt423$col_time &lt;- rep(\"Apr 2023\",nrow(t423))\n\n\nt823 &lt;- data.frame(aug_2023[-c(1,2),c(6,8,9,14:17)])\nt823$pos &lt;- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t823) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age &lt;- as.numeric(t823$age)\nt823$col_time &lt;- rep(\"Aug 2023\",nrow(t823))\n\nt1222 &lt;- data.frame(dec_2022[-c(1,2),c(6,8,10:14)])\nt1222$pos &lt;- replace(t1222$...14,is.na(t1222$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1222) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age &lt;- as.numeric(t1222$age)\nt1222$col_time &lt;- rep(\"Dec 2022\",nrow(t1222))\n\n\nt1223 &lt;- data.frame(dec_2023[-c(1,2),c(6,8,9,14:17)])\nt1223$pos &lt;- replace(t1223$...17,is.na(t1223$...17),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1223) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age &lt;- as.numeric(t1223$age)\nt1223$col_time &lt;- rep(\"Dec 2023\",nrow(t1223))\n\n####\ncleaned &lt;- read_csv(\"D:/OUCRU/HCDC/project phân tích sero quận huyện/cleaned.csv\")\n\nsero &lt;- rbind(t1222,t1223,t423,t823)\n\nsero_add &lt;- full_join(cleaned,sero, by =  c(\"id\" = \"id\"))\n\ndata_pt &lt;- sero_add %&gt;% filter(!is.na(age)&!is.na(qhchuan)) %&gt;%\n  select(-c(add_mod,pxchuan,neutralization,id)) %&gt;%\n  as.data.frame()\n\ndata_pt$age_gr2 &lt;- cut(data_pt$age+0.00000001, breaks = seq(0, 15, by = 3),\n                       labels = c(\" &lt;0 & ≤3 yo\",\n                                  \"&lt;3 & ≤6 yo\",\n                                  \"&lt;6 & ≤9 yo\",\n                                  \"&lt;9 & ≤12 yo\",\n                                  \"&lt;12 & ≤15 yo\"))\n\n\n\n4 Number of samples per district\n\n\nCode\ndata_pt %&gt;%\n  # filter(qhchuan == data_pt$qhchuan[1]) %&gt;%\n  ggplot() +\n  geom_bar(aes(x = col_time))+\n  scale_x_discrete(limits = c(\"Dec 2022\",\n                              \"Apr 2023\",\n                              \"Aug 2023\",\n                              \"Dec 2023\"))+\n  scale_y_continuous(breaks = seq(0,14,by=4),\n                     limits = c(0,14))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  labs(x = \"Collection date\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\n\n\nCode\ndata_pt %&gt;%\n  ggplot() +\n  geom_bar(aes(x = age_gr2,fill = factor(col_time,levels = c(\"Dec 2022\",\n                                                             \"Apr 2023\",\n                                                             \"Aug 2023\",\n                                                             \"Dec 2023\"))))+\n  scale_y_continuous(breaks = seq(0,14,by=4),\n                     limits = c(0,14))+\n  scale_fill_discrete(limits = c(\"Dec 2022\",\n                              \"Apr 2023\",\n                              \"Aug 2023\",\n                              \"Dec 2023\"))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  labs(x = \"Age group\",y = \"Number of samples\",\n       fill =\"Collection date\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n\n\n\n\n\n\n5 Seroprevalence in the same age group over time\n\n\nCode\ndata_pt$col_date &lt;- make_date(data_pt$col_year,data_pt$col_month,data_pt$col_day)\nbinomial_smooth &lt;- function(...) {\n    geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...)\n}\ndata_pt$age_gr &lt;- factor(data_pt$age_gr,\n                         levels = c(unique(data_pt$age_gr)))\n\n\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~age_gr,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n\n\n\n\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\n\n\n6 Seroprevalence of each district\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\n\n\nCode\nggplot(data_pt,\n       aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()"
  },
  {
    "objectID": "sero_description.html#number-of-samples-per-district",
    "href": "sero_description.html#number-of-samples-per-district",
    "title": "3  Serological data description",
    "section": "3.1 Number of samples per district",
    "text": "3.1 Number of samples per district\n\n\nCode\ndata_pt %&gt;%\n  # filter(qhchuan == data_pt$qhchuan[1]) %&gt;%\n  ggplot() +\n  geom_bar(aes(x = col_time))+\n  scale_x_discrete(limits = c(\"Dec 2022\",\n                              \"Apr 2023\",\n                              \"Aug 2023\",\n                              \"Dec 2023\"))+\n  scale_y_continuous(breaks = seq(0,14,by=4),\n                     limits = c(0,14))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  labs(x = \"Collection date\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 1"
  },
  {
    "objectID": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "href": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "title": "3  Serological data description",
    "section": "3.3 Seroprevalence in the same age group over time",
    "text": "3.3 Seroprevalence in the same age group over time\n\n\nCode\ndata_pt$col_date &lt;- make_date(data_pt$col_year,data_pt$col_month,data_pt$col_day)\ndata_pt$age_gr &lt;- factor(data_pt$age_gr,\n                         levels = c(unique(data_pt$age_gr)))\n\n\n\n\nCode\n# | fig-width: 13\n# | fig-height: 8\n# | out-width: \"100%\"\n# | fig-cap: \"Fig 4\"\n\n# ggplot(data_pt,\n#        aes(x = col_date, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(~age_gr,\n#              ncol = 5)+\n#   binomial_smooth(formula = y ~ x + I(x^2))+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()+\n#   theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n##Fig 4 gives information on the seroprevalence of the 15 age groups. The seroprevalence of the age group 1-5 years old increased, which reflect the outbreak's impact in seroprevalence. The outbreak began in June, and 95% of symptomatic cases were aged 0-6 years old; and seroprevalence result also increased in 1-6 years old. However, there is a contrast; our serological shows an increase in the 2-3 years old age group in the 2nd peak (September), while the leading symptomatic group contributing to this peak is children aged 0-2 years old.\n\n\nI combined all samples for four collection times and fitted the GLM model with formula \\(seropositive \\sim age + age^{2}\\) for each age group. Fig 4 show the seroprevalence over time in the same age group.\nFor our assumption, asymptomatic cases of children who went to school infected their siblings. As you can see, the high seroprevalence of children at school age at the beginning of 2023 may cause the infection in their siblings aged 0-6, who have low seroprevalence simultaneously.\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n\n\n\n\nFig 4"
  },
  {
    "objectID": "sero_description.html#seroprevalence-of-each-district",
    "href": "sero_description.html#seroprevalence-of-each-district",
    "title": "3  Serological data description",
    "section": "3.4 Seroprevalence of each district",
    "text": "3.4 Seroprevalence of each district\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()"
  },
  {
    "objectID": "sero_description.html#age-structure-of-each-districts-overtime",
    "href": "sero_description.html#age-structure-of-each-districts-overtime",
    "title": "3  Serological data description",
    "section": "3.4 Age structure of each districts overtime",
    "text": "3.4 Age structure of each districts overtime\n\n\nCode\nggplot(data_pt,\n       aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ splines::ns(x, 2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()"
  },
  {
    "objectID": "sero_description.html#age-structure-of-each-districts",
    "href": "sero_description.html#age-structure-of-each-districts",
    "title": "3  Serological data description",
    "section": "3.2 Age structure of each districts",
    "text": "3.2 Age structure of each districts\n\n\nCode\nselect_dis &lt;- c(\"10\", \"11\", \"12\", \"8\", \"binh chanh\", \"binh tan\", \"cu chi\", \"hoc mon\", \"tan binh\", \"tan phu\")\n\ndata_sle &lt;- data_pt %&gt;% filter(qhchuan %in% select_dis)\n\n## smooth function to fit\nbinomial_smooth &lt;- function(...) {\n    geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...)\n}\n\n\nIn this part, I used a generalized linear model for selected districts to fit the seropositive by age with formula \\(seropositive \\sim age + age^{2}\\).\n\n\nCode\ndata_sle  %&gt;% \n  ggplot(aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(vars(qhchuan,\n                  factor(col_time,levels = c(\"Dec 2022\",\n                                             \"Apr 2023\",\n                                             \"Aug 2023\",\n                                             \"Dec 2023\"))),ncol=4)+\n  binomial_smooth(formula = y ~ x + I(x^2) )+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\nFig 3\n\n\n\n\nFig 3 shows the result of the fitting process: visualization with seroprevalence (solid line) with a 95% confidence interval (coloured area) and serum sample (point).\nIn my opinion, the shape of seroprevalence is very weird and 95% confident interval is wide because the small sample of each model."
  },
  {
    "objectID": "sero_description.html#age-serological-profiles-of-each-districts",
    "href": "sero_description.html#age-serological-profiles-of-each-districts",
    "title": "3  Serological data description",
    "section": "3.2 Age serological profiles of each districts",
    "text": "3.2 Age serological profiles of each districts\n\n\nCode\n# data_pt %&gt;%\n#   ggplot() +\n#   geom_bar(aes(fill = age_gr2,x = factor(col_time,levels = c(\"Dec 2022\",\n#                                                              \"Apr 2023\",\n#                                                              \"Aug 2023\",\n#                                                              \"Dec 2023\"))))+\n#   scale_y_continuous(breaks = seq(0,14,by=4),\n#                      limits = c(0,14))+\n#   scale_x_discrete(limits = c(\"Dec 2022\",\n#                               \"Apr 2023\",\n#                               \"Aug 2023\",\n#                               \"Dec 2023\"))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(fill = \"Age group\",y = \"Number of samples\",\n#        x =\"Collection date\")+\n#   theme_bw()+\n  ## axis.text.x = element_text(vjust = 0.5,angle = 45)\n  # theme(legend.position = \"top\")\n\n# data_pt %&gt;% ggplot() +\n#   geom_density(aes(x = age))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(x = \"Age group\",y = \"Number of samples\")+\n#   theme_bw()\n\ndata_pt %&gt;% ggplot() +\n  geom_bar(aes(x = age_gr3))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  scale_y_continuous(breaks = seq(0,10,by = 2),\n                     limits = c(0,10))+\n  labs(x = \"Age group\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 2\n\n\n\n\nFig 2 shows the age structure of each district’s collection times. I divided continuous age variables into five groups: &lt;0 & ≤3 years old,&lt;3 & ≤6 years old,&lt;6 & ≤9 years old, &lt;9 & ≤12 years old,&lt;12 & ≤15 years old to facilitate the visualization (instead of visualizing 15 age group).\n\n\nCode\nselect_dis &lt;- c(\"10\", \"11\", \"12\", \"8\", \"binh chanh\", \"binh tan\", \"cu chi\", \"hoc mon\", \"tan binh\", \"tan phu\")\n\ndata_sle &lt;- data_pt %&gt;% filter(qhchuan %in% select_dis)\n\n## smooth function to fit\nbinomial_smooth &lt;- function(...) {\n    geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...)\n}\n\n\nIn this part, I used a generalized linear model for districts to fit the seropositive by age with formula \\(seropositive \\sim age + age^{2}\\).\n\n\nCode\n# data_sle  %&gt;% \n#   ggplot(aes(x = age, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(vars(qhchuan,\n#                   factor(col_time,levels = c(\"Dec 2022\",\n#                                              \"Apr 2023\",\n#                                              \"Aug 2023\",\n#                                              \"Dec 2023\"))),ncol=4)+\n#   binomial_smooth(formula = y ~ x + I(x^2) )+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()\n\ndata_pt %&gt;% \n  ggplot(aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  # geom_point(shape = \"|\",size = 2,\n  #            col = \"#0808cf\")+\n  facet_wrap(~qhchuan,\n             ncol=5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Age\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\nFig 3\n\n\n\n\nFig 3 shows the result of the fitting process: visualization with seroprevalence (solid line) with a 95% confidence interval (coloured area) and serum sample (point)."
  },
  {
    "objectID": "fig_manu.html#figure-1-heat-map",
    "href": "fig_manu.html#figure-1-heat-map",
    "title": "4  Manuscript figure",
    "section": "4.1 Figure 1: heat map",
    "text": "4.1 Figure 1: heat map\n\n\nCode\nlibrary(paletteer)\ndf23 &lt;- df1 %&gt;% filter(year(adm_week) == 2023)\n\nco &lt;- data.frame()\n\nfor (i in 0:6){\n  gen &lt;- seq(0,1,le=52) + i\n  co &lt;- rbind(co,gen)\n}\n\n\ndf23 &lt;- df1 %&gt;% filter(year(adm_date) == 2023)\nwwww &lt;- slide_age(time1 = df23$adm_date,\n                  age1 =  df23$age1,\n                  w1 = 7, s1=7)\n\nch &lt;- data.frame(date = wwww$adat$date,\n                 c0 = as.numeric(co[1,]),\n                 c1 = as.numeric(co[2,]),\n                 c2 = as.numeric(co[3,]),\n                 c3 = as.numeric(co[4,]),\n                 c4 = as.numeric(co[5,]),\n                 c5 = as.numeric(co[6,]))\n\nleb_month &lt;- c(\"Jan\",rep(\"\",3),\"Feb\",rep(\"\",3),\"Mar\",rep(\"\",4),\"Apr\",rep(\"\",3),\n               \"May\",rep(\"\",4),\"Jun\",rep(\"\",3),\"Jul\",rep(\"\",3),\"Aug\",rep(\"\",4),\n               \"Sep\",rep(\"\",3),\"Oct\",rep(\"\",3),\"Nov\",rep(\"\",4),\"Dec\",rep(\"\",3))\n\nts &lt;- data.frame(wwww$wdat$date,wwww$wdat$age) %&gt;%\n  filter(!is.na(wwww$wdat$date) & !is.na(wwww$wdat$age)) %&gt;%\n  count(wwww$wdat$date) %&gt;%\n  set_colnames(c(\"time\",\"n\")) %&gt;% \n  mutate(peak = c(rep(\"1st\",36),rep(\"2nd\",nrow(.)-36))) %&gt;% \n  ggplot(aes(x = time, y = n,fill = peak)) +\n  geom_col(alpha = 0.6,color=\"black\") +\n  geom_vline(xintercept = 36.5) +\n  theme_minimal()+\n  scale_y_continuous(name = \"Cases\",\n                     breaks = seq(0,3000,by = 1000),\n                     limit =c(0,3000), \n                     minor_breaks = NULL)+\n  scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\"))+\n  labs(tag = \"A\")+ \n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18))\n\nhm &lt;- ggplot(data=wwww$wdat, aes(x=date, y=age)) +\n      stat_density(\n        aes(fill = after_stat(density)),\n        geom = \"raster\",\n        position = \"identity\"\n      )+\n      scale_fill_paletteer_c(\"grDevices::Inferno\")+\n      # scale_fill_gradient(low=\"#040404FF\", high= \"#FFFE9EFF\")+\n      # scale_fill_distiller(palette = \"Blues\")+\n      theme_minimal()+\n      scale_y_reverse(name = \"Age (years)\",lim= rev(c(0,6)),breaks = seq(0,6))+\n      scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n      labs(tag = \"B\",fill = \"Density\")+\n      # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8))+\n      geom_line(data = ch,aes(x = date,y = c0),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c1),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c2),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c3),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c4),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      geom_line(data = ch,aes(x = date,y = c5),col = \"white\",\n                group = 1,lwd = 0.25,alpha = 0.8)+\n      theme(axis.title.y = element_text(size = 18),\n            axis.ticks.x = element_blank(),\n            legend.position = \"bottom\",\n            plot.tag = element_text(face = \"bold\", size = 18),\n            axis.title.x = element_text(size = 18),\n            axis.text.x = element_text(size = 18),\n            axis.text.y = element_text(size = 18),\n            legend.text = element_text(size = 15),\n            legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\")) \n\nfi_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &lt;= as.Date(\"2023-09-03\")&\n            !is.na(adm_date) & !is.na(age1)))\n\nse_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &gt; as.Date(\"2023-09-03\")) &\n           !is.na(adm_date) & !is.na(age1))\n\ndata &lt;- data.frame(\n  peak = c( rep(\"1st wave\",nrow(data.frame(se_peak$age1))),\n            rep(\"2nd wave\",nrow(data.frame(fi_peak$age1)))),\n  age = c( fi_peak$age1, se_peak$age1 )\n)\n\n## density plot\n\nad &lt;- ggplot(data=data, aes(x=age, group=peak, fill=peak)) +\n      geom_density(alpha = 0.6) +\n      scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\")) +\n      scale_x_reverse(limit = c(6,0),breaks = seq(0,6,by=1), \n                      minor_breaks = NULL)+\n      scale_y_continuous(minor_breaks = NULL)+\n      coord_flip()+\n      theme_minimal()+\n      labs(x = \"Age\", y =\"Density\",tag = \"C\",fill = \"Outbreak\")+\n      theme(axis.title.y = element_blank(),\n            axis.ticks.x = element_blank(),\n            legend.position = \"bottom\",\n            plot.tag = element_text(face = \"bold\", size = 18),\n            axis.title.x = element_text(size = 18),\n            axis.text.x = element_text(size = 18),\n            axis.text.y = element_text(size = 18),\n            legend.text = element_text(size = 18),\n            legend.title = element_text(size = 18))\n\n\n\n\nCode\n((ts/hm)|(plot_spacer()/ad))+\n  plot_layout(widths = c(2.5,1))\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig1.svg\",\n       width = 15,height = 8,dpi = 500)\n\n\n\n\nCode\ndata %&gt;% \n  tbl_summary(by = peak,\n              digits = list(all_continuous() ~ 3)) %&gt;% \n  add_overall() %&gt;% \n  add_p()\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Overall\nN = 43,3721\n      1st wave\nN = 20,3581\n      2nd wave\nN = 23,0141\n      p-value2\n    \n  \n  \n    age\n2.536 (1.679, 3.723)\n2.649 (1.784, 3.726)\n2.393 (1.548, 3.721)\n&lt;0.001\n  \n  \n  \n    \n      1 Median (Q1, Q3)\n    \n    \n      2 Wilcoxon rank sum test"
  },
  {
    "objectID": "fig_manu.html#figure-2-compare-attack-rate-and-seroprevalence-per-age-group-over-time",
    "href": "fig_manu.html#figure-2-compare-attack-rate-and-seroprevalence-per-age-group-over-time",
    "title": "4  Manuscript figure",
    "section": "4.2 Figure 2: Compare attack rate and seroprevalence per age group over time",
    "text": "4.2 Figure 2: Compare attack rate and seroprevalence per age group over time\n\n\nCode\ndf23$agr &lt;- cut(df23$age1, breaks = c(0, 1, 2, 3, 4,5,6,Inf), right = F)\ndf23$agr &lt;- factor(df23$agr, labels = c(\"[0-1)\", \"[1-2)\", \"[2-3)\",\n                                        \"[3-4)\",\"[4-5)\",\"[5-6)\",\"6+\"))\n\ndf23$age_gr2 &lt;- cut(df23$age1+0.00000001, breaks = c(seq(0, 15, by = 3),82),\n                       labels = c(\"&lt;0 & ≤3 years\",\n                                  \"&lt;3 & ≤6 years\",\n                                  \"&lt;6 & ≤9 years\",\n                                  \"&lt;9 & ≤12 years\",\n                                  \"&lt;12 & ≤15 years\",\n                                  \"16+\"))\n\nhcm19 &lt;- census2019 %&gt;% filter(province == \"Thành phố Hồ Chí Minh\")\n\nhcm19$district &lt;- hcm19$district %&gt;%\n  str_remove_all(\"Quận|Huyện\") %&gt;%\n  str_replace_all(\n    c(\"\\\\b2\\\\b|\\\\b9\\\\b\"  = \"Thủ Đức\")) %&gt;%\n  trimws(which = \"both\")\n\n\n\n\nhcm19$age2 &lt;- word(hcm19$age,end = 1) |&gt; as.numeric()\n\nhcm19$age3 &lt;- cut(hcm19$age2,breaks = c(seq(0, 15, by = 3),82),\n                     labels = c(\"&lt;0 & ≤3 years\",\n                                \"&lt;3 & ≤6 years\",\n                                \"&lt;6 & ≤9 years\",\n                                \"&lt;9 & ≤12 years\",\n                                \"&lt;12 & ≤15 years\",\n                                \"16+\"))\n\npop_agegr &lt;- hcm19 %&gt;%\n  group_by(age3) %&gt;%\n  summarise(n = sum(n))\n\n# atk_plot_df &lt;- df23 %&gt;%\n#   select(adm_week,age_gr2)%&gt;%\n#   count(age_gr2,adm_week) %&gt;%\n#   left_join(pop_agegr,by = join_by(age_gr2 == age3)) %&gt;%\n#   group_by(age_gr2) %&gt;%\n#   mutate(pop = n.y - cumsum(lag(n.x, default = 0)),\n#          atr = n.x/pop)  %&gt;%\n#   select(-n.y)\n# \n# \n# atk_rate &lt;- atk_plot_df %&gt;% na.omit() %&gt;% filter(age_gr2 != \"16+\") %&gt;%\n#   ggplot(aes(x = adm_week,y=log(atr*100000))) +\n#   # geom_bar(stat = \"identity\")+\n#   geom_line()+\n#   facet_wrap(vars(age_gr2),ncol = 5)+\n#   # scale_x_date(limits = as.Date(c(\"2023-01-01\",\"2023-12-31\")))+\n#   coord_cartesian(xlim = as.Date(c(\"2023-01-01\",\"2023-12-31\")),\n#                   ylim = c(-2.5,7.5))+\n#   scale_x_date(date_breaks = \"3 months\",date_labels = \"%b %Y\")+\n#   theme_bw()+\n#   labs(x = \"Admission week\",y= \"Log attack rate\",tag = \"A\")+\n#   theme(axis.text.x = element_blank(),\n#         axis.ticks.x = element_blank())\n\natk_rate &lt;- df23 %&gt;%\n  select(adm_week,age_gr2)%&gt;%\n  count(age_gr2,adm_week) %&gt;%\n  left_join(pop_agegr,by = join_by(age_gr2 == age3)) %&gt;%\n  group_by(age_gr2) %&gt;%\n  mutate(pop = n.y - cumsum(lag(n.x, default = 0)),\n         atr = cumsum(n.x)/pop)  %&gt;%\n  select(-n.y) %&gt;% \n  mutate(\n    attack_rate_ma = slide_dbl(\n      .x      = atr,\n      .f      = mean,         # function to compute\n      .before = 4,            # 4 weeks before = 5-week window total\n      .after  = 0,\n      .step = 1,\n      .complete = TRUE        # only compute for full windows\n    )\n  ) %&gt;%\n  ungroup() %&gt;% na.omit() %&gt;% filter(age_gr2 != \"16+\") %&gt;% \n  ggplot(aes(x = adm_week,y=log(attack_rate_ma*100000))) +\n  # geom_bar(stat = \"identity\")+\n  geom_line()+\n  facet_wrap(vars(age_gr2),ncol = 5)+\n  scale_x_date(breaks = seq(as.Date(\"2022-12-01\"),as.Date(\"2023-12-31\"), le = 4),\n               date_labels = \"%b %Y\", minor_breaks = NULL)+\n  scale_y_continuous(minor_breaks = NULL)+\n  # scale_x_date(date_breaks = \"4 months\",date_labels = \"%b %Y\")+\n  coord_cartesian(ylim = c(-2.5,9.5),xlim = as.Date(c(\"2022-12-01\",\"2023-12-31\")))+\n  theme_bw()+\n  labs(x = \"Admission week\",y= \"Log cumulative attack rate\",tag = \"A\")+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_blank(),\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n\n## sero_prevalence by age group\n\nsero &lt;- rbind(t1222,t1223,t423,t823)\n\nsero$age_gr2 &lt;- cut(sero$age+0.00000001, breaks = seq(0, 15, by = 3),\n                       labels = c(\"&lt;0 & ≤3 years\",\n                                  \"&lt;3 & ≤6 years\",\n                                  \"&lt;6 & ≤9 years\",\n                                  \"&lt;9 & ≤12 years\",\n                                  \"&lt;12 & ≤15 years\"))\n\nsero$col_date &lt;- make_date(sero$col_year,sero$col_month,sero$col_day)\n\nsero$age_gr2 &lt;- factor(sero$age_gr2,\n                         levels = c(\"&lt;0 & ≤3 years\",\n                                    \"&lt;3 & ≤6 years\",\n                                    \"&lt;6 & ≤9 years\",\n                                    \"&lt;9 & ≤12 years\",\n                                    \"&lt;12 & ≤15 years\"))\n\n## observation seroprevalence\nte_sp &lt;- sero %&gt;% \n  group_by(age_gr2,col_time) %&gt;% \n  count(pos) %&gt;% \n  pivot_wider(names_from = pos, values_from = n) %&gt;%\n  ungroup() %&gt;% \n  mutate(tot = `0`+`1`,\n         sp = `1`/(`0`+`1`)) %&gt;% \n  as.data.frame()\n\nfor (i in 1:nrow(te_sp)) {\n  te_sp$lwr[i] &lt;- prop.test(te_sp$`1`[i],te_sp$tot[i],correct=TRUE)$conf.int[1]\n  te_sp$upr[i] &lt;- prop.test(te_sp$`1`[i],te_sp$tot[i],correct=TRUE)$conf.int[2]\n}\n\n\ncol_ddd&lt;- sero %&gt;% \n  group_by(age_gr2,col_time) %&gt;% \n  summarise(mean = mean(col_date)) %&gt;%\n  ungroup()\n\nte_sp$col_date &lt;- col_ddd$mean\n\nsp_agr &lt;- ggplot(sero,\n       aes(x = col_date, y = pos)) +\n  # geom_jitter(height = 0.05)+\n  geom_point(aes(x = col_date, pos),\n             shape = \"|\")+\n  geom_smooth(fill = \"blue\",alpha = 1/10,\n              method = mgcv::gam,formula = y ~ s(x, bs = \"bs\"),\n              method.args = list(method = \"REML\",link = \"logit\",\n                                 family = \"binomial\"))+\n  geom_point(data = te_sp,\n             aes(x  = col_date,y = sp))+\n  geom_errorbar(data = te_sp,\n                aes(x  = col_date,y = sp,ymin = lwr, ymax = upr),alpha = .5)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  labs(x = \"Collection date\", y  = \"Seroprevalence (%)\",tag = \"B\")+\n  scale_x_date(breaks = seq(as.Date(\"2022-12-01\"),as.Date(\"2023-12-31\"), le = 4),\n               date_labels = \"%b %y\", minor_breaks = NULL)+\n  scale_y_continuous(labels = scales::label_percent(), minor_breaks = NULL)+\n  # scale_x_date(date_breaks = \"4 months\",date_labels = \"%b %Y\")+\n  coord_cartesian(ylim = c(0, 1),xlim = as.Date(c(\"2022-12-01\",\"2023-12-31\")))+\n  theme_bw()+\n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 12,vjust = 0.5,\n                                   hjust = 0.5,angle = 45),\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n\n\n\nCode\natk_rate/\n  sp_agr\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig3.svg\",\n       width = 12,height = 7,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#figure-3-calibration-plot",
    "href": "fig_manu.html#figure-3-calibration-plot",
    "title": "4  Manuscript figure",
    "section": "4.3 Figure 3: Calibration plot",
    "text": "4.3 Figure 3: Calibration plot\n\n\nCode\ncorrect_lv &lt;- c(\"0≤ & &lt;1\",\"1≤ & &lt;2\",\"2≤ & &lt;3\",\"3≤ & &lt;4\",\"4≤ & &lt;5\",\n                \"5≤ & &lt;6\",\"6≤ & &lt;7\",\"7≤ & &lt;8\",\"8≤ & &lt;9\",\"9≤ & &lt;10\",\n                \"10≤ & &lt;11\",\"11≤ & &lt;12\",\"12≤ & &lt;13\",\"13≤ & &lt;14\",\"14≤ & &lt;15\")\n\ncali_sero &lt;- sero %&gt;% group_by(age_gr) %&gt;%\n            count(pos) %&gt;%\n            pivot_wider(names_from = pos,values_from = n) %&gt;%\n            clean_names() %&gt;%\n            mutate(sp = x1/sum(x0,x1)) %&gt;%\n            select(-c(x0,x1)) %&gt;%\n            ungroup()\n\ncali_sero$age_gr &lt;- factor(cali_sero$age_gr,levels = correct_lv)\n\n## case noti\ndf23$age_cali &lt;- cut(df23$age1+0.00000001, breaks = c(seq(0, 15, by = 1),82),\n                    labels = c(correct_lv,\n                               \"16+\"))\n\n## population\nhcm19$age_cali &lt;- cut(hcm19$age2,breaks = c(seq(0, 15, by = 1),82),\n                      labels = c(correct_lv,\n                                 \"16+\"))\n\npop_agegr_cali &lt;- hcm19 %&gt;%\n                  group_by(age_cali) %&gt;%\n                  summarise(n = sum(n))\n\ncali_plot_df &lt;- df23 %&gt;%\n                select(age_cali) %&gt;%\n                group_by(age_cali) %&gt;%\n                count() %&gt;% na.omit() %&gt;%\n                left_join(pop_agegr_cali,by = join_by(age_cali == age_cali)) %&gt;%\n                # group_by(age_gr2) %&gt;%\n                mutate(atr = n.x/n.y) %&gt;%\n                filter(age_cali != \"16+\")  %&gt;%\n                left_join(cali_sero,by = join_by(age_cali == age_gr))\n\nmodel_clb &lt;- glm(atr*100000 ~ sp,data = cali_plot_df)\n\nmodel_clb$pred &lt;- predict.glm(model_clb, type = 'response')\n\n\n\n\nCode\ncalibration_plot(data = data.frame(y = model_clb$y,pred = model_clb$pred),\n                 obs = \"y\", pred = \"pred\")\n\n\n$calibration_plot"
  },
  {
    "objectID": "fig_manu.html#figure-3-seroepidemiology",
    "href": "fig_manu.html#figure-3-seroepidemiology",
    "title": "4  Manuscript figure",
    "section": "4.3 Figure 3: seroepidemiology",
    "text": "4.3 Figure 3: seroepidemiology\n\n4.3.1 GLM\n\n\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$data\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n\n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\n\n\n\nCode\nm &lt;- 100\neps &lt;- 1\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 &lt;-  glm(pos ~ age + I(age ^2), binomial, data = t423) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_classic()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\ndf_plot &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week) %&gt;% as.data.frame()\n\nts2 &lt;- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  labs(x = \"Admission week\",y = \"Cases\",tag = \"B\")+\n  annotate(\"rect\", fill = \"blue\",\n           xmin = as.Date(c(\"2022-12-01\",\"2023-04-01\",\"2023-08-01\",\"2023-12-01\")), \n           xmax = as.Date(c(\"2022-12-30\",\"2023-04-30\",\"2023-08-30\",\"2023-12-30\")), \n           ymin = 0, ymax = Inf, alpha = .2)+\n  xlim(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\"))+\n  theme_classic()+\n  scale_y_continuous(breaks = seq(0,3000,by = 1000),\n                     limit =c(0,3000))+\n  theme(\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18))\n\n\n\n\nCode\nglmfit &lt;- (plot1222 | plot0423 | plot0823 | plot1223) \n\n\nfig3 &lt;- glmfit/\n  ts2\n\nfig3+ \n  plot_annotation(tag_levels = c('A'))\n\n\n\n\n\nCode\n# ggsave(\"./fig_manuscript/fig2.svg\",\n#        width = 15,height = 7,dpi = 500)\n\n\n\n\n4.3.2 GAM\nCompare GAM fitting manually and geom_smooth\n\n\nCode\npredictg &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n  \n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  \n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  \n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\ndf.list &lt;- list(t1222,t423,t823,t1223)\n\n## fit manually\n\nfig2m &lt;- lapply(df.list, function(x) \n            gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n                family = \"binomial\",data = x) |&gt;\n            predictg() %&gt;% as.data.frame() \n            ) %&gt;%\n  bind_rows(.id = \"label\") %&gt;% \n  mutate(col_date = case_when(\n    label == 1 ~ \"Dec 2022\",\n    label == 2 ~ \"Apr 2023\",\n    label == 3 ~ \"Aug 2023\",\n    label == 4 ~ \"Dec 2023\"\n  )) %&gt;% \n  ggplot(aes(x = age,y = fit, \n             fill = factor(col_date,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                               \"Aug 2023\",\"Dec 2023\"))))+\n  geom_line()+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  scale_fill_paletteer_d(\"nbapalettes::thunder\")+\n  ylim(0,101)+\n  labs(y = \"Seroprevalence (%)\",x = \"Age\",tag = \"Manually\")+\n  scale_x_continuous(breaks = seq(0,15,by = 3))+\n  theme_bw()+\n  facet_wrap(~factor(col_date,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                         \"Aug 2023\",\"Dec 2023\")),\n              ncol = 4)+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n## geom_smooth\n\nfig2a &lt;- df.list %&gt;% bind_rows(.id = \"label\") %&gt;% \n        ggplot(aes(x = age, y = pos)) +\n          # geom_jitter(height = 0.05)+\n          geom_point(aes(x = age, pos),\n                     shape = \"|\")+\n          facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\"Apr 2023\",\n                                                 \"Aug 2023\",\"Dec 2023\")),\n                     ncol = 4)+\n          geom_smooth(fill = \"blue\",alpha = 1/10,\n                      method = mgcv::gam,formula = y ~ s(x, bs = \"bs\"),\n                      method.args = list(method = \"REML\",link = \"logit\",\n                                         family = \"binomial\"))+\n          labs(y = \"Seroprevalence (%)\",x = \"Age\",tag = \"A\")+\n          scale_x_continuous(breaks = seq(0,15,by = 3), minor_breaks = NULL)+\n          scale_y_continuous(labels = scales::label_percent(), minor_breaks = NULL)+\n          coord_cartesian(ylim = c(0, 1))+\n          theme_bw()+ \n          theme(axis.title.x = element_text(size = 18),\n                axis.text.x = element_text(size = 18),\n                legend.position = \"none\",\n                plot.tag = element_text(face = \"bold\", size = 18),\n                axis.title.y = element_text(size = 18),\n                axis.text.y = element_text(size = 18),\n                strip.text.x = element_text(size = 18))\n\n\n\n\nCode\nfig2m/\n  fig2a\n\n\n\n\n\n\n\nCode\nfig2a/\n  ts2\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig2.svg\",\n       width = 13,height = 8,dpi = 500)"
  },
  {
    "objectID": "fig_manu.html#figure-4-calibration-plot",
    "href": "fig_manu.html#figure-4-calibration-plot",
    "title": "4  Manuscript figure",
    "section": "4.5 Figure 4: Calibration plot",
    "text": "4.5 Figure 4: Calibration plot\n\n\nCode\n# correct_lv &lt;- c(\"0≤ & &lt;1\",\"1≤ & &lt;2\",\"2≤ & &lt;3\",\"3≤ & &lt;4\",\"4≤ & &lt;5\",\n#                 \"5≤ & &lt;6\",\"6≤ & &lt;7\",\"7≤ & &lt;8\",\"8≤ & &lt;9\",\"9≤ & &lt;10\",\n#                 \"10≤ & &lt;11\",\"11≤ & &lt;12\",\"12≤ & &lt;13\",\"13≤ & &lt;14\",\"14≤ & &lt;15\")\n# \n# cali_sero &lt;- sero %&gt;% group_by(age_gr) %&gt;%\n#             count(pos) %&gt;%\n#             pivot_wider(names_from = pos,values_from = n) %&gt;%\n#             clean_names() %&gt;%\n#             mutate(sp = x1/sum(x0,x1)) %&gt;%\n#             select(-c(x0,x1)) %&gt;%\n#             ungroup()\n# \n# cali_sero$age_gr &lt;- factor(cali_sero$age_gr,levels = correct_lv)\n# \n# ## case noti\n# df23$age_cali &lt;- cut(df23$age1+0.00000001, breaks = c(seq(0, 15, by = 1),82),\n#                     labels = c(correct_lv,\n#                                \"16+\"))\n# \n# ## population\n# hcm19$age_cali &lt;- cut(hcm19$age2,breaks = c(seq(0, 15, by = 1),82),\n#                       labels = c(correct_lv,\n#                                  \"16+\"))\n# \n# pop_agegr_cali &lt;- hcm19 %&gt;%\n#                   group_by(age_cali) %&gt;%\n#                   summarise(n = sum(n))\n# \n# cali_plot_df &lt;- df23 %&gt;%\n#                 select(age_cali) %&gt;%\n#                 group_by(age_cali) %&gt;%\n#                 count() %&gt;% na.omit() %&gt;%\n#                 left_join(pop_agegr_cali,by = join_by(age_cali == age_cali)) %&gt;%\n#                 # group_by(age_gr2) %&gt;%\n#                 mutate(atr = n.x/n.y) %&gt;%\n#                 filter(age_cali != \"16+\")  %&gt;%\n#                 left_join(cali_sero,by = join_by(age_cali == age_gr))\n# \n# model_clb &lt;- glm(atr*100000 ~ sp,data = cali_plot_df)\n# \n# model_clb$pred &lt;- predict.glm(model_clb, type = 'response')\n\n\n\n\nCode\n# calibration_plot(data = data.frame(y = model_clb$y,pred = model_clb$pred),\n#                  obs = \"y\", pred = \"pred\")"
  },
  {
    "objectID": "fig_manu.html#age-group-2",
    "href": "fig_manu.html#age-group-2",
    "title": "4  Manuscript figure",
    "section": "4.3 6-9 age group",
    "text": "4.3 6-9 age group\n\n\nCode\n## 6-9 age group\n\nggplot_build(sp_agr)$data[[2]] %&gt;% mutate(across(x, as.Date)) %&gt;% \n  filter(PANEL == 3) %&gt;% select(x,y,ymin,ymax)  %&gt;% \n  mutate(y = y*100 ,\n         ymin = ymin*100,\n         ymax= ymax*100)\n\n\n            x        y     ymin     ymax\n1  2022-12-14 49.81406 29.39879 70.29152\n2  2022-12-18 49.94870 29.81836 70.09569\n3  2022-12-23 50.08334 30.23840 69.90206\n4  2022-12-28 50.21798 30.65863 69.71084\n5  2023-01-01 50.35262 31.07878 69.52223\n6  2023-01-06 50.48725 31.49853 69.33644\n7  2023-01-11 50.62187 31.91757 69.15370\n8  2023-01-15 50.75649 32.33558 68.97426\n9  2023-01-20 50.89109 32.75220 68.79836\n10 2023-01-25 51.02568 33.16706 68.62628\n11 2023-01-29 51.16026 33.57979 68.45830\n12 2023-02-03 51.29481 33.98998 68.29471\n13 2023-02-08 51.42935 34.39722 68.13584\n14 2023-02-12 51.56387 34.80107 67.98201\n15 2023-02-17 51.69836 35.20108 67.83357\n16 2023-02-22 51.83283 35.59676 67.69087\n17 2023-02-26 51.96728 35.98764 67.55431\n18 2023-03-03 52.10169 36.37319 67.42427\n19 2023-03-08 52.23607 36.75289 67.30116\n20 2023-03-12 52.37042 37.12620 67.18541\n21 2023-03-17 52.50474 37.49255 67.07745\n22 2023-03-22 52.63902 37.85138 66.97775\n23 2023-03-26 52.77326 38.20208 66.88676\n24 2023-03-31 52.90745 38.54408 66.80496\n25 2023-04-05 53.04161 38.87676 66.73281\n26 2023-04-09 53.17572 39.19952 66.67080\n27 2023-04-14 53.30979 39.51175 66.61942\n28 2023-04-19 53.44380 39.81286 66.57912\n29 2023-04-23 53.57777 40.10225 66.55037\n30 2023-04-28 53.71169 40.37934 66.53362\n31 2023-05-03 53.84555 40.64359 66.52929\n32 2023-05-07 53.97935 40.89447 66.53777\n33 2023-05-12 54.11310 41.13148 66.55944\n34 2023-05-17 54.24678 41.35418 66.59460\n35 2023-05-21 54.38041 41.56216 66.64355\n36 2023-05-26 54.51397 41.75506 66.70650\n37 2023-05-31 54.64747 41.93260 66.78362\n38 2023-06-04 54.78090 42.09453 66.87502\n39 2023-06-09 54.91426 42.24068 66.98076\n40 2023-06-14 55.04755 42.37095 67.10080\n41 2023-06-18 55.18076 42.48530 67.23507\n42 2023-06-23 55.31390 42.58377 67.38341\n43 2023-06-28 55.44697 42.66644 67.54561\n44 2023-07-02 55.57996 42.73348 67.72138\n45 2023-07-07 55.71286 42.78512 67.91040\n46 2023-07-12 55.84569 42.82161 68.11228\n47 2023-07-16 55.97843 42.84330 68.32657\n48 2023-07-21 56.11108 42.85055 68.55280\n49 2023-07-26 56.24365 42.84376 68.79046\n50 2023-07-30 56.37613 42.82338 69.03901\n51 2023-08-04 56.50852 42.78987 69.29787\n52 2023-08-09 56.64081 42.74370 69.56648\n53 2023-08-13 56.77301 42.68539 69.84423\n54 2023-08-18 56.90512 42.61542 70.13053\n55 2023-08-23 57.03712 42.53432 70.42477\n56 2023-08-27 57.16903 42.44259 70.72638\n57 2023-09-01 57.30083 42.34073 71.03475\n58 2023-09-06 57.43253 42.22924 71.34932\n59 2023-09-10 57.56412 42.10861 71.66952\n60 2023-09-15 57.69561 41.97930 71.99480\n61 2023-09-20 57.82699 41.84178 72.32463\n62 2023-09-24 57.95825 41.69649 72.65851\n63 2023-09-29 58.08941 41.54386 72.99594\n64 2023-10-04 58.22045 41.38430 73.33645\n65 2023-10-08 58.35137 41.21820 73.67960\n66 2023-10-13 58.48218 41.04594 74.02494\n67 2023-10-18 58.61287 40.86788 74.37208\n68 2023-10-22 58.74343 40.68437 74.72062\n69 2023-10-27 58.87387 40.49572 75.07020\n70 2023-11-01 59.00419 40.30226 75.42046\n71 2023-11-05 59.13438 40.10427 75.77108\n72 2023-11-10 59.26445 39.90203 76.12174\n73 2023-11-15 59.39438 39.69582 76.47216\n74 2023-11-19 59.52418 39.48587 76.82204\n75 2023-11-24 59.65385 39.27245 77.17114\n76 2023-11-29 59.78339 39.05575 77.51921\n77 2023-12-03 59.91279 38.83602 77.86602\n78 2023-12-08 60.04205 38.61344 78.21135\n79 2023-12-13 60.17117 38.38821 78.55500\n80 2023-12-18 60.30015 38.16052 78.89678"
  },
  {
    "objectID": "fig_manu.html#age-group-3",
    "href": "fig_manu.html#age-group-3",
    "title": "4  Manuscript figure",
    "section": "4.4 9-12 age group",
    "text": "4.4 9-12 age group\n\n\nCode\n## 9-12 age group\n\nggplot_build(sp_agr)$data[[2]] %&gt;% mutate(across(x, as.Date)) %&gt;% \n  filter(PANEL == 4) %&gt;% select(x,y,ymin,ymax)  %&gt;% \n  mutate(y = y*100 ,\n         ymin = ymin*100,\n         ymax= ymax*100)\n\n\n            x        y     ymin     ymax\n1  2022-12-07 55.65551 34.32208 75.08889\n2  2022-12-11 55.47001 34.48681 74.66895\n3  2022-12-16 55.28435 34.64884 74.24695\n4  2022-12-21 55.09855 34.80798 73.82315\n5  2022-12-26 54.91261 34.96404 73.39781\n6  2022-12-30 54.72652 35.11681 72.97122\n7  2023-01-04 54.54031 35.26607 72.54368\n8  2023-01-09 54.35397 35.41159 72.11550\n9  2023-01-14 54.16750 35.55312 71.68702\n10 2023-01-19 53.98092 35.69040 71.25859\n11 2023-01-23 53.79423 35.82316 70.83060\n12 2023-01-28 53.60743 35.95112 70.40342\n13 2023-02-02 53.42053 36.07397 69.97748\n14 2023-02-07 53.23353 36.19139 69.55320\n15 2023-02-11 53.04645 36.30305 69.13105\n16 2023-02-16 52.85927 36.40859 68.71149\n17 2023-02-21 52.67202 36.50764 68.29502\n18 2023-02-26 52.48469 36.59983 67.88216\n19 2023-03-03 52.29728 36.68475 67.47344\n20 2023-03-07 52.10982 36.76198 67.06943\n21 2023-03-12 51.92229 36.83110 66.67069\n22 2023-03-17 51.73471 36.89166 66.27782\n23 2023-03-22 51.54707 36.94321 65.89142\n24 2023-03-27 51.35940 36.98527 65.51212\n25 2023-03-31 51.17168 37.01738 65.14054\n26 2023-04-05 50.98393 37.03906 64.77733\n27 2023-04-10 50.79615 37.04983 64.42313\n28 2023-04-15 50.60834 37.04921 64.07858\n29 2023-04-19 50.42052 37.03674 63.74431\n30 2023-04-24 50.23269 37.01197 63.42095\n31 2023-04-29 50.04485 36.97446 63.10911\n32 2023-05-04 49.85700 36.92380 62.80937\n33 2023-05-09 49.66916 36.85961 62.52229\n34 2023-05-13 49.48133 36.78156 62.24838\n35 2023-05-18 49.29351 36.68934 61.98813\n36 2023-05-23 49.10571 36.58270 61.74197\n37 2023-05-28 48.91794 36.46146 61.51025\n38 2023-06-02 48.73019 36.32548 61.29331\n39 2023-06-06 48.54248 36.17468 61.09140\n40 2023-06-11 48.35481 36.00907 60.90469\n41 2023-06-16 48.16718 35.82871 60.73330\n42 2023-06-21 47.97961 35.63373 60.57729\n43 2023-06-25 47.79210 35.42433 60.43662\n44 2023-06-30 47.60464 35.20078 60.31122\n45 2023-07-05 47.41725 34.96341 60.20093\n46 2023-07-10 47.22994 34.71260 60.10553\n47 2023-07-15 47.04270 34.44879 60.02477\n48 2023-07-19 46.85555 34.17247 59.95833\n49 2023-07-24 46.66848 33.88416 59.90584\n50 2023-07-29 46.48151 33.58443 59.86692\n51 2023-08-03 46.29463 33.27387 59.84114\n52 2023-08-08 46.10786 32.95308 59.82805\n53 2023-08-12 45.92120 32.62270 59.82718\n54 2023-08-17 45.73465 32.28335 59.83804\n55 2023-08-22 45.54823 31.93568 59.86016\n56 2023-08-27 45.36192 31.58032 59.89304\n57 2023-08-31 45.17575 31.21791 59.93619\n58 2023-09-05 44.98971 30.84907 59.98913\n59 2023-09-10 44.80381 30.47441 60.05137\n60 2023-09-15 44.61806 30.09453 60.12247\n61 2023-09-20 44.43245 29.71002 60.20195\n62 2023-09-24 44.24701 29.32142 60.28938\n63 2023-09-29 44.06172 28.92929 60.38435\n64 2023-10-04 43.87659 28.53414 60.48643\n65 2023-10-09 43.69164 28.13647 60.59524\n66 2023-10-14 43.50686 27.73677 60.71040\n67 2023-10-18 43.32227 27.33549 60.83157\n68 2023-10-23 43.13785 26.93307 60.95838\n69 2023-10-28 42.95363 26.52991 61.09053\n70 2023-11-02 42.76960 26.12642 61.22769\n71 2023-11-06 42.58578 25.72295 61.36959\n72 2023-11-11 42.40215 25.31988 61.51594\n73 2023-11-16 42.21874 24.91752 61.66648\n74 2023-11-21 42.03554 24.51619 61.82095\n75 2023-11-26 41.85256 24.11618 61.97913\n76 2023-11-30 41.66980 23.71778 62.14079\n77 2023-12-05 41.48728 23.32125 62.30572\n78 2023-12-10 41.30498 22.92682 62.47372\n79 2023-12-15 41.12293 22.53474 62.64460\n80 2023-12-20 40.94111 22.14520 62.81817"
  },
  {
    "objectID": "fig_manu.html#age-group-4",
    "href": "fig_manu.html#age-group-4",
    "title": "4  Manuscript figure",
    "section": "4.5 12-15 age group",
    "text": "4.5 12-15 age group\n\n\nCode\n## 12-15 age group\n\nggplot_build(sp_agr)$data[[2]] %&gt;% mutate(across(x, as.Date)) %&gt;% \n  filter(PANEL == 5) %&gt;% select(x,y,ymin,ymax)  %&gt;% \n  mutate(y = y*100 ,\n         ymin = ymin*100,\n         ymax= ymax*100)\n\n\n            x        y     ymin     ymax\n1  2022-12-06 57.83978 36.14596 76.87798\n2  2022-12-10 57.60287 36.26714 76.43668\n3  2022-12-15 57.36561 36.38539 75.99204\n4  2022-12-20 57.12800 36.50054 75.54430\n5  2022-12-25 56.89007 36.61238 75.09372\n6  2022-12-29 56.65182 36.72073 74.64060\n7  2023-01-03 56.41327 36.82537 74.18524\n8  2023-01-08 56.17441 36.92608 73.72795\n9  2023-01-13 55.93527 37.02262 73.26908\n10 2023-01-18 55.69585 37.11474 72.80898\n11 2023-01-22 55.45617 37.20217 72.34805\n12 2023-01-27 55.21624 37.28465 71.88668\n13 2023-02-01 54.97606 37.36187 71.42529\n14 2023-02-06 54.73565 37.43353 70.96435\n15 2023-02-10 54.49502 37.49930 70.50432\n16 2023-02-15 54.25418 37.55884 70.04569\n17 2023-02-20 54.01314 37.61179 69.58899\n18 2023-02-25 53.77191 37.65778 69.13474\n19 2023-03-02 53.53050 37.69642 68.68353\n20 2023-03-06 53.28893 37.72729 68.23591\n21 2023-03-11 53.04721 37.74999 67.79251\n22 2023-03-16 52.80535 37.76407 67.35395\n23 2023-03-21 52.56335 37.76910 66.92087\n24 2023-03-26 52.32123 37.76461 66.49392\n25 2023-03-30 52.07900 37.75014 66.07377\n26 2023-04-04 51.83668 37.72522 65.66111\n27 2023-04-09 51.59427 37.68938 65.25662\n28 2023-04-14 51.35179 37.64215 64.86099\n29 2023-04-18 51.10924 37.58308 64.47489\n30 2023-04-23 50.86664 37.51172 64.09900\n31 2023-04-28 50.62400 37.42764 63.73399\n32 2023-05-03 50.38133 37.33043 63.38048\n33 2023-05-08 50.13865 37.21972 63.03909\n34 2023-05-12 49.89595 37.09518 62.71038\n35 2023-05-17 49.65327 36.95651 62.39490\n36 2023-05-22 49.41060 36.80347 62.09313\n37 2023-05-27 49.16795 36.63587 61.80549\n38 2023-06-01 48.92535 36.45358 61.53236\n39 2023-06-05 48.68280 36.25655 61.27404\n40 2023-06-10 48.44031 36.04477 61.03077\n41 2023-06-15 48.19789 35.81833 60.80271\n42 2023-06-20 47.95556 35.57737 60.58997\n43 2023-06-24 47.71333 35.32210 60.39257\n44 2023-06-29 47.47120 35.05281 60.21046\n45 2023-07-04 47.22920 34.76985 60.04353\n46 2023-07-09 46.98732 34.47364 59.89161\n47 2023-07-14 46.74558 34.16463 59.75445\n48 2023-07-18 46.50400 33.84335 59.63178\n49 2023-07-23 46.26258 33.51035 59.52326\n50 2023-07-28 46.02134 33.16624 59.42852\n51 2023-08-02 45.78029 32.81163 59.34715\n52 2023-08-07 45.53943 32.44718 59.27871\n53 2023-08-11 45.29878 32.07355 59.22276\n54 2023-08-16 45.05835 31.69142 59.17881\n55 2023-08-21 44.81815 31.30148 59.14639\n56 2023-08-26 44.57819 30.90440 59.12501\n57 2023-08-30 44.33848 30.50085 59.11419\n58 2023-09-04 44.09904 30.09151 59.11345\n59 2023-09-09 43.85987 29.67702 59.12231\n60 2023-09-14 43.62099 29.25802 59.14030\n61 2023-09-19 43.38240 28.83514 59.16698\n62 2023-09-23 43.14412 28.40897 59.20191\n63 2023-09-28 42.90616 27.98008 59.24465\n64 2023-10-03 42.66852 27.54903 59.29480\n65 2023-10-08 42.43123 27.11636 59.35198\n66 2023-10-13 42.19428 26.68258 59.41580\n67 2023-10-17 41.95769 26.24815 59.48590\n68 2023-10-22 41.72147 25.81356 59.56194\n69 2023-10-27 41.48562 25.37922 59.64361\n70 2023-11-01 41.25017 24.94557 59.73058\n71 2023-11-05 41.01512 24.51298 59.82257\n72 2023-11-10 40.78048 24.08182 59.91929\n73 2023-11-15 40.54625 23.65244 60.02050\n74 2023-11-20 40.31246 23.22517 60.12593\n75 2023-11-25 40.07911 22.80031 60.23535\n76 2023-11-29 39.84620 22.37814 60.34855\n77 2023-12-04 39.61375 21.95893 60.46531\n78 2023-12-09 39.38178 21.54294 60.58542\n79 2023-12-14 39.15028 21.13038 60.70872\n80 2023-12-19 38.91926 20.72148 60.83500"
  },
  {
    "objectID": "fig_manu.html#change-different-knots-to-fit-aug-2023-age-seroprevalence",
    "href": "fig_manu.html#change-different-knots-to-fit-aug-2023-age-seroprevalence",
    "title": "4  Manuscript figure",
    "section": "4.5 Change different knots to fit Aug 2023 age seroprevalence",
    "text": "4.5 Change different knots to fit Aug 2023 age seroprevalence\n\n\nCode\nx &lt;- t823$age\ny &lt;- t823$pos\n\ndeg &lt;- 3\n\na &lt;- min(x)\nb &lt;- max(x)\n\nxs &lt;- c(2,4,6,8,10,12)\nxd &lt;- c(a, xs, b)\nmy.k &lt;- length(xs) + deg + 1\nleft.aux &lt;- rep(a, deg)\nright.aux &lt;- rep(b, deg)\n\nmy.knots &lt;- c(left.aux, xd, right.aux)\n\nttt &lt;- gam(y ~ s(x, bs = 'bs', k = my.k),\n              method = \"REML\",\n              family = \"binomial\",\n              knots = list(x = my.knots))\n\nttt$smooth[[1]]$knots\n\n\n [1]  0.00000  0.00000  0.00000  0.00000  2.00000  4.00000  6.00000  8.00000\n [9] 10.00000 12.00000 14.96438 14.96438 14.96438 14.96438\n\n\nCode\ndata.frame(x = x, y = ttt$fitted.values) %&gt;% \nggplot(aes(x = x,y = y))+\n  geom_line()+\n  ylim(0,1)"
  },
  {
    "objectID": "fig_manu.html#supplementary-plot",
    "href": "fig_manu.html#supplementary-plot",
    "title": "4  Manuscript figure",
    "section": "4.4 Supplementary plot",
    "text": "4.4 Supplementary plot\n\n4.4.1 Attack rate\n\n\nCode\npop &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky.rds\")\npop_a &lt;- pop %&gt;% group_by(birth_month, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\n\ncolnames(pop_a) &lt;- c(\"m\",\"y\",\"n\")\n\npop_a$dob &lt;- str_c(pop_a$y,pop_a$m,sep = \"-\") %&gt;% ym()\n\ntime1 = df1$adm_date\nage1 =  df1$age1\ndob = pop_a$dob\nn = pop_a$n\n\ndft &lt;- data.frame(time1,age1) %&gt;%\n  filter(!is.na(time1) & !is.na(age1)) %&gt;%\n  arrange(time1)\n\n\ndft$agr=as.factor(cut(dft$age1, c(0,0.5,\n                                  1,1.5,\n                                  2,2.5,\n                                  3,3.5,\n                                  4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (dft$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                     \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                     \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                     \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nout_total &lt;- data.frame()\n\nhfmd23 &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week)\n\nhfmd23$week &lt;- 1:length(hfmd23$adm_week)\nhfmd23$week &lt;- ifelse(hfmd23$week == 53,52,hfmd23$week)\n\nhfmd23$n2 &lt;- ifelse(hfmd23$week == 52, sum(hfmd23$n[hfmd23$week==52]), hfmd23$n)\n\nhfmd23 &lt;- hfmd23[-53,]\n\ndateaa &lt;- hfmd23$adm_week+3\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nfor (i in 1:52){\n  sus_pop$age &lt;- interval(sus_pop$dob, dateaa[i]) / years(1)\n  \n  sus_pop$agr=as.factor(cut(sus_pop$age, c(0,0.5,\n                                           1,1.5,\n                                           2,2.5,\n                                           3,3.5,\n                                           4,4.5,5,5.5,6,100), right=TRUE ))\n  levels (sus_pop$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                           \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                           \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                           \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n  outcum &lt;- sus_pop %&gt;% group_by(agr) %&gt;%\n    summarise(n = sum(n)) %&gt;%\n    as.data.frame()\n  outcum$date &lt;- rep(dateaa[i],nrow(outcum))\n  out_total &lt;- rbind(out_total,outcum)\n}\n\ndeno &lt;- out_total %&gt;%\n  pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\ncasss &lt;- wwww$wdat\n\ncasss$agr=as.factor(cut(casss$age, c(0,0.5,1,1.5,2,2.5,\n                                     3,3.5,4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (casss$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                       \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                       \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                       \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\ncasss &lt;- casss %&gt;% group_by(date,agr) %&gt;%\n  count() %&gt;% pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\n\ncasss &lt;- casss[,-ncol(casss)]\ncasss &lt;- replace(casss,is.na(casss), 0)\ncasss &lt;- casss[,c(1:10,13,11,14,12)]\n\natkr &lt;- data.frame()\natkr &lt;- rbind(atkr,as.numeric(casss[1,-1])/as.numeric(deno[1,-1]))\nfor (i in 1:51){\n  new &lt;- as.numeric(casss[i+1,-1])/(as.numeric(deno[i+1,-1]) - as.numeric(casss[i,-1]))\n  atkr &lt;- rbind(atkr,new)\n}\natkr &lt;- cbind(deno$date,atkr)\n\ncolnames(atkr) &lt;- colnames(deno)\natkr &lt;- replace(atkr,is.na(atkr), 0)\n\n\n\natk_plot &lt;- atkr %&gt;% pivot_longer(cols=colnames(atkr)[-1],\n                                  names_to= 'agr',\n                                  values_to='atk') %&gt;% as.data.frame()\n\natk &lt;- ggplot(atk_plot, aes(x=as.character(date), y=agr, fill = atk)) +\n  geom_raster()+\n  scale_fill_paletteer_c(\"grDevices::Inferno\",\n                         breaks = c(0.01, 0.02, 0.03, 0.04, 0.05))+\n  scale_y_discrete(limits=rev)+\n  scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n  theme_minimal()+\n  labs(tag = \"B\",fill = \"Attack rate\",y = \"Age group (years)\")+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\")) \n\n\n\n\nCode\nts/\n  atk\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/sup1.svg\",\n       width = 15,height = 8,dpi = 500)"
  },
  {
    "objectID": "sero.html#gam-with-pava-algorithm",
    "href": "sero.html#gam-with-pava-algorithm",
    "title": "2  HFMD Seroprevalence",
    "section": "6.5 GAM with PAVA algorithm",
    "text": "6.5 GAM with PAVA algorithm\nModel\n\n\nCode\ngam1 &lt;- gam(pos ~ s(age, bs = \"bs\") + s(col_date, bs = \"bs\"), method = \"REML\",\n            family = \"binomial\",\n            data = mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\ngam_pred &lt;- cbind(new_data, fit = 100 * predict(gam1, new_data, \"response\")) |&gt; \n  as_tibble() |&gt; \n  arrange(col_date) |&gt; \n  mutate(across(col_date, as_date))\n\nout &lt;- gam_pred %&gt;% \nmutate(time_numeric = as.numeric(col_date)) %&gt;% \n  group_by(age) %&gt;% \n  arrange(time_numeric) %&gt;%\n  mutate(\n    seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE)\n  ) \n  \nsp1222 &lt;- out %&gt;% filter(month(col_date) == 12 & year(col_date) == 2022) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Dec 2022\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\n\n\nsp0423 &lt;-out %&gt;% filter(month(col_date) == 04 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Apr 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\nsp0823 &lt;- out %&gt;% filter(month(col_date) == 08 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Aug 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\nsp1223 &lt;- out %&gt;% filter(month(col_date) == 12 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Dec 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\n\n\n\nCode\nplot_ly(out, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(seroprev_monotonic, length(age_val)),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\nCode\nsp1222 | sp0423 | sp0823 | sp1223"
  },
  {
    "objectID": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "href": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "title": "3  Serological data description",
    "section": "3.4 Investigate location of 0-3 year-old serosample",
    "text": "3.4 Investigate location of 0-3 year-old serosample\n\n3.4.1 Total collected samples\n\n\nCode\n# Split by col_time\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\") %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n3.4.2 Total collected positive samples\n\n\nCode\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\" & pos == 1) %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of positive samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")"
  }
]