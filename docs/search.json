[
  {
    "objectID": "sero.html",
    "href": "sero.html",
    "title": "2  HFMD Seroprevalence",
    "section": "",
    "text": "3 Import data\nCode\napr_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 &lt;- data.frame(apr_2023[-c(1,2),10:14])\nt423$pos &lt;- replace(t423$...14,is.na(t423$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t423) &lt;- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age &lt;- as.numeric(t423$age)\n\n\nt823 &lt;- data.frame(aug_2023[-c(1,2),c(9,14:17)])\nt823$pos &lt;- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t823) &lt;- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age &lt;- as.numeric(t823$age)\n\n\nt1222 &lt;- data.frame(dec_2022[-c(1,2),10:14])\nt1222$pos &lt;- replace(t1222$...14,is.na(t1222$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1222) &lt;- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age &lt;- as.numeric(t1222$age)\n\n\nt1223 &lt;- data.frame(dec_2023[-c(1,2),c(9,14:17)])\nt1223$pos &lt;- replace(t1223$...17,is.na(t1223$...17),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1223) &lt;- c(\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age &lt;- as.numeric(t1223$age)\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$data\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n\n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\nCode\nlibrary(plotly)\nlibrary(scam)\nCode\natdf &lt;- rbind(t1222,t423,t823,t1223) %&gt;%\n  mutate(col_date = make_date(year = col_year,\n                              month = col_month,\n                              day = col_day)) %&gt;%\n  select(age,col_date,pos)\nCode\nhead(atdf)\n\n\n         age   col_date pos\n1 0.36986301 2022-12-28   0\n2 0.33150685 2022-12-27   0\n3 0.07671233 2023-01-04   0\n4 0.43835616 2022-12-27   0\n5 0.93150685 2023-01-03   0\n6 1.95616438 2022-12-26   1"
  },
  {
    "objectID": "sero.html#fit-by-glm",
    "href": "sero.html#fit-by-glm",
    "title": "2  HFMD Seroprevalence",
    "section": "5.1 Fit by GLM",
    "text": "5.1 Fit by GLM\n\n\nCode\nm &lt;- 100\neps &lt;- 1\n\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n\n\n\n\nCode\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 &lt;-  glm(pos ~ age + I(age ^2), binomial, data = t423) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\nplot1222 + plot0423 + plot0823 + plot1223"
  },
  {
    "objectID": "sero.html#fit-with-scam-model",
    "href": "sero.html#fit-with-scam-model",
    "title": "2  HFMD Seroprevalence",
    "section": "6.1 Fit with SCAM model",
    "text": "6.1 Fit with SCAM model\nmpi is monotone increasing SCOP-splines: bs=“mpi”. To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\nModel\n\n\nCode\ns1 &lt;- scam(pos~s(age)+s(col_date,bs = \"mpi\"),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))"
  },
  {
    "objectID": "sero.html#d-plot",
    "href": "sero.html#d-plot",
    "title": "2  HFMD Seroprevalence",
    "section": "6.2 3D plot",
    "text": "6.2 3D plot\n\n\nCode\nage_val &lt;- c(.1,1:14)\n\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 512)\n\nnew_data &lt;- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf &lt;- cbind(new_data,\n               fit = 100 * predict(s1, new_data,\"response\"))\n\nscamf$col_date &lt;- as.Date(scamf$col_date)\n\n\n\n\nCode\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)"
  },
  {
    "objectID": "sero.html#d-plot-1",
    "href": "sero.html#d-plot-1",
    "title": "2  HFMD Seroprevalence",
    "section": "6.3 2-D plot",
    "text": "6.3 2-D plot\n\n\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100){\n  p &lt;- (1 - ci) / 2\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  date_range &lt;- range(dataset$col_date)\n  dates &lt;- seq(date_range[1], date_range[2], le = le)\n\nout &lt;- x |&gt;\n  predict(expand.grid(age = ages,\n                        col_date = dates), se.fit = TRUE) |&gt;\n  extract(c(\"fit\", \"se.fit\")) %&gt;%\n  c(expand.grid(age = ages,\n               date = dates),\n    .) |&gt;\n  as_tibble() |&gt;\n  mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n  select(-se.fit)\n\nreturn(out)\n}\n\n\n\n\nCode\nout &lt;- predict2(s1)\n\nout$date &lt;- as.Date(out$date)\n\n\n\n\nCode\ns1222 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2022) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\ns423 &lt;- out %&gt;% filter(month(date) == 4 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\ns823 &lt;- out %&gt;% filter(month(date) == 8 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\ns1223 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)"
  },
  {
    "objectID": "sero.html#case",
    "href": "sero.html#case",
    "title": "2  HFMD Seroprevalence",
    "section": "6.4 Case",
    "text": "6.4 Case\n\n\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n                  col_types = c(\"date\", \"numeric\", \"text\", \n                                \"text\", \"text\", \"date\", \"date\", \"date\", \n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;% \n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\") \n\ndf_plot &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week) %&gt;% as.data.frame()\n\nts &lt;- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  labs(x = \"Admission week\",\"Cases\")+\n  geom_vline(xintercept = as.Date(\"2022-12-01\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2022-12-30\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2023-04-01\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-04-30\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-08-01\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-08-30\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-12-01\"),\n             alpha = 0.4,col = \"#33516b\")+\n  geom_vline(xintercept = as.Date(\"2023-12-30\"),\n             alpha = 0.4,col = \"#33516b\")+\n  xlim(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\"))+theme_classic()\n\n\n\n\nCode\nresult_sero &lt;- s1222 | s423 | s823 | s1223\n\nresult_sero/\n  ts"
  },
  {
    "objectID": "sero.html#glm-unconstrained",
    "href": "sero.html#glm-unconstrained",
    "title": "2  HFMD Seroprevalence",
    "section": "6.5 GLM (unconstrained)",
    "text": "6.5 GLM (unconstrained)\nModel\n\n\nCode\nmod1 &lt;- glm(pos ~ age * col_date +\n              I(age ^ 2) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\ndataset &lt;- mod1$data\n\ncollection_date_val &lt;- seq(min(dataset$col_date),\n                           max(dataset$col_date),le=20)\n\nnew_data &lt;- expand.grid(age = age_val, col_date = collection_date_val)\n\n\nprdcts &lt;- cbind(new_data, fit = 100 * predict(mod1, new_data, \"response\")) |&gt;\n  as_tibble() |&gt;\n  arrange(col_date) |&gt;\n  mutate(across(col_date, as_date))\n\n\n\n\nCode\nplot_ly(prdcts, x = ~sort(unique(col_date)),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n    ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HFMD 2023",
    "section": "",
    "text": "1 Age specific model\nCode\nlibrary(odin)\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(readxl)\nlibrary(lubridate)\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\",\n                  col_types = c(\"date\", \"numeric\", \"text\",\n                                \"text\", \"text\", \"date\", \"date\", \"date\",\n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;%\n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\")\n\ncase &lt;- df1 %&gt;% filter(year(adm_date) == 2023 ) %&gt;%\n        group_by(adm_week) %&gt;%\n        count()\ncase$t &lt;- 1:nrow(case)\nCode\ncensus2019 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\")\n\npophcm &lt;- census2019 %&gt;% filter(province == \"Thành phố Hồ Chí Minh\") %&gt;%\n  group_by(age) %&gt;% summarise(n = sum(n))\n\npophcm$agee &lt;- as.numeric(word(pophcm$age,1))\npop1 &lt;- pophcm %&gt;% filter(agee &lt;= 6)\nN1 &lt;- sum(pop1$n)\nCode\ncase2 &lt;- df1 %&gt;%\n  group_by(adm_week) %&gt;%\n  count()\n\ncase2 %&gt;% ggplot(aes(x = adm_week,y = n )) +\n  geom_line()+\n  geom_vline(xintercept = as.Date(\"2014-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2014-08-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2015-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2015-08-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2016-05-27\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2016-08-15\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2017-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2017-08-14\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2018-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2018-08-20\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2019-05-25\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2019-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2020-07-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2020-09-01\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2021-05-31\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2021-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2022-06-30\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2022-09-05\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2023-05-26\"),\n             alpha = 0.4)+\n  geom_vline(xintercept = as.Date(\"2023-08-21\"),\n             alpha = 0.4)+\n  scale_x_date(breaks = \"1 year\",date_labels = \"%Y\")+\n  labs(x = \"Admission week\",y = \"Number of cases\")+\n  theme_minimal()"
  },
  {
    "objectID": "index.html#model-structure",
    "href": "index.html#model-structure",
    "title": "HFMD 2023",
    "section": "4.1 Model structure",
    "text": "4.1 Model structure\n\nage_mod &lt;- odin({\n  deriv(S1) &lt;- -(beta11*I1 + beta12*I2) * S1 + mu * S1\n  deriv(I1) &lt;- (beta11*I1 + beta12*I2) * S1 - gamma1*I1\n  deriv(R1) &lt;- gamma1 * I1\n\n  deriv(S2) &lt;- -(beta12*I1 + beta22*I2) * S2\n  deriv(I2) &lt;- (beta12*I1 + beta22*I2) * S2 - gamma2*I2\n  deriv(R2) &lt;- gamma2 * I2\n\n  initial(S1) &lt;- S1_init\n  initial(I1) &lt;- I1_init\n  initial(R1) &lt;- R1_init\n\n  initial(S2) &lt;- S2_init\n  initial(I2) &lt;- I2_init\n  initial(R2) &lt;- R2_init\n\n  beta11 &lt;- user(0.003)\n  beta12 &lt;- user(0.003)\n  # beta21 &lt;- user(0.003)\n  beta22 &lt;- user(0.003)\n\n  mu &lt;- user(0.5)\n\n  gamma1 &lt;- user(0.5)\n  gamma2 &lt;- user(0.5)\n\n  S1_init &lt;- user(0.8)\n  I1_init &lt;- user(0.2)\n  R1_init &lt;- user(0)\n\n  S2_init &lt;- user(0.6)\n  I2_init &lt;- user(0.4)\n  R2_init &lt;- user(0)\n})\n\n── R CMD INSTALL ───────────────────────────────────────────────────────────────\n* installing *source* package 'odin23cdddbb' ...\n** using staged installation\n** libs\nusing C compiler: 'gcc.exe (GCC) 13.2.0'\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c odin.c -o odin.o\nodin.c: In function 'odin_metadata':\nodin.c:168:18: warning: unused variable 'internal' [-Wunused-variable]\n  168 |   odin_internal *internal = odin_get_internal(internal_p, 1);\n      |                  ^~~~~~~~\nodin.c: In function 'user_get_scalar_int':\nodin.c:265:47: warning: format '%d' expects argument of type 'int', but argument 2 has type 'const char *' [-Wformat=]\n  265 |       Rf_error(\"Expected scalar integer for '%d'\", name);\n      |                                              ~^    ~~~~\n      |                                               |    |\n      |                                               int  const char *\n      |                                              %s\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall -gdwarf-2 -mfpmath=sse -msse2 -mstackrealign  -UNDEBUG -Wall -pedantic -g -O0 -c registration.c -o registration.o\ngcc -shared -static-libgcc -o odin23cdddbb.dll tmp.def odin.o registration.o -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -LC:/PROGRA~1/R/R-44~1.2/bin/x64 -lR\ninstalling to C:/Users/ASUS/AppData/Local/Temp/RtmpaQwxVR/devtools_install_705c1ba24a1c/00LOCK-file705c713a4d7/00new/odin23cdddbb/libs/x64\n* DONE (odin23cdddbb)\n\n\n\n\nCode\nmu0 = 0.5\ngamma1_0 = 5/30\ngamma2_0 = 5/30\n\nS1_0 = 0.4\nI1_0 = 0.6\nR1_0 = 0\n\nS2_0 = .5\nI2_0 = .5\nR2_0 = 0"
  },
  {
    "objectID": "index.html#likelihood",
    "href": "index.html#likelihood",
    "title": "HFMD 2023",
    "section": "4.2 Likelihood",
    "text": "4.2 Likelihood\n\n\nCode\nbinom_loglik &lt;- function(data,par,N=N1) {\n\n  sir_odin_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                              # beta21 = par[3],\n                              beta22 = par[3],\n                              mu = mu0,\n                              gamma1 = gamma1_0, gamma2 = gamma2_0,\n                              S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                              S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(0, 52, by = 1)\n\n  sir_output &lt;- sir_odin_run$run(times)\n  sir_output &lt;- data.frame(sir_output) %&gt;% mutate(prev = I1/N1)\n  -sum(dbinom(x=data$n, size=N, prob=sir_output$prev[-1], log=TRUE))\n}\n\n\n\n\nCode\nbeta_mle &lt;- optim(par=c(beta11 = 0.1, beta12 = 0.1,\n                        # beta21 = 0.1,\n                        beta22 = 0.1),\n                  fn=binom_loglik,\n                  data=case,\n                  method=\"L-BFGS-B\",\n                  lower=0.1, upper=0.9)\n\nbeta_mle$par\n\n\n   beta11    beta12    beta22 \n0.1000000 0.6409961 0.1000000 \n\n\n\n\nCode\n## function to apply new parameters from optimization\nafter_cal &lt;- function(par){\n  age_run &lt;- age_mod$new(beta11 = par[1], beta12 = par[2],\n                         # beta21 = par[3],\n                         beta22 = par[3],\n                         mu = mu0,\n                         gamma1 = gamma1_0, gamma2 = gamma2_0,\n                         S1_init = S1_0, I1_init = I1_0, R1_init = R1_0,\n                         S2_init = S2_0, I2_init = I2_0, R2_init = R2_0)\n\n  times &lt;- seq(1:52)\n\n  out_mod &lt;- data.frame(age_run$run(times)) %&gt;% mutate(prev=I1/N1)\n  return(out_mod)\n}\n\n\n\n\nCode\niii &lt;- after_cal(beta_mle$par) %&gt;% mutate(ca = case$n[-53]/N1)\n\n\nggplot(iii) +\n  geom_line(aes(x = t,y=prev*250))+\n  geom_point(aes(x = t,y=ca))"
  }
]