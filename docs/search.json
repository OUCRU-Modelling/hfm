[
  {
    "objectID": "sero_description.html",
    "href": "sero_description.html",
    "title": "3  Serological data description",
    "section": "",
    "text": "3.1 Number of samples per district\nThis map shows the distribution of total serum samples from 4 collection times for each district, with the triangle representing the location of Children’s Hospital 1. The majority of serum samples were collected from districts on the West side of Children’s Hospital 1. The following section will explore the distribution of sample numbers for each district’s collection times.\nCode\ndata_pt %&gt;%\n  # filter(qhchuan == data_pt$qhchuan[1]) %&gt;%\n  ggplot() +\n  geom_bar(aes(x = col_time))+\n  scale_x_discrete(limits = c(\"Dec 2022\",\n                              \"Apr 2023\",\n                              \"Aug 2023\",\n                              \"Dec 2023\"))+\n  scale_y_continuous(breaks = seq(0,14,by=4),\n                     limits = c(0,14))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  labs(x = \"Collection date\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Serological data description</span>"
    ]
  },
  {
    "objectID": "sero_description.html#age-serological-profiles-of-each-districts",
    "href": "sero_description.html#age-serological-profiles-of-each-districts",
    "title": "3  Serological data description",
    "section": "3.2 Age serological profiles of each districts",
    "text": "3.2 Age serological profiles of each districts\n\n\nCode\n# data_pt %&gt;%\n#   ggplot() +\n#   geom_bar(aes(fill = age_gr2,x = factor(col_time,levels = c(\"Dec 2022\",\n#                                                              \"Apr 2023\",\n#                                                              \"Aug 2023\",\n#                                                              \"Dec 2023\"))))+\n#   scale_y_continuous(breaks = seq(0,14,by=4),\n#                      limits = c(0,14))+\n#   scale_x_discrete(limits = c(\"Dec 2022\",\n#                               \"Apr 2023\",\n#                               \"Aug 2023\",\n#                               \"Dec 2023\"))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(fill = \"Age group\",y = \"Number of samples\",\n#        x =\"Collection date\")+\n#   theme_bw()+\n  ## axis.text.x = element_text(vjust = 0.5,angle = 45)\n  # theme(legend.position = \"top\")\n\n# data_pt %&gt;% ggplot() +\n#   geom_density(aes(x = age))+\n#   facet_wrap(~qhchuan,\n#              ncol = 5)+\n#   labs(x = \"Age group\",y = \"Number of samples\")+\n#   theme_bw()\n\ndata_pt %&gt;% ggplot() +\n  geom_bar(aes(x = age_gr3))+\n  facet_wrap(~qhchuan,\n             ncol = 5)+\n  scale_y_continuous(breaks = seq(0,10,by = 2),\n                     limits = c(0,10))+\n  labs(x = \"Age group\",y = \"Number of samples\")+\n  theme_bw()\n\n\n\n\n\nFig 2\n\n\n\n\nFig 2 shows the age structure of each district’s collection times. I divided continuous age variables into five groups: &lt;0 & ≤3 years old,&lt;3 & ≤6 years old,&lt;6 & ≤9 years old, &lt;9 & ≤12 years old,&lt;12 & ≤15 years old to facilitate the visualization (instead of visualizing 15 age group).\n\n\nCode\nselect_dis &lt;- c(\"10\", \"11\", \"12\", \"8\", \"binh chanh\", \"binh tan\", \"cu chi\", \"hoc mon\", \"tan binh\", \"tan phu\")\n\ndata_sle &lt;- data_pt %&gt;% filter(qhchuan %in% select_dis)\n\n## smooth function to fit\nbinomial_smooth &lt;- function(...) {\n    geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...)\n}\n\n\nIn this part, I used a generalized linear model for districts to fit the seropositive by age with formula \\(seropositive \\sim age + age^{2}\\).\n\n\nCode\n# data_sle  %&gt;% \n#   ggplot(aes(x = age, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(vars(qhchuan,\n#                   factor(col_time,levels = c(\"Dec 2022\",\n#                                              \"Apr 2023\",\n#                                              \"Aug 2023\",\n#                                              \"Dec 2023\"))),ncol=4)+\n#   binomial_smooth(formula = y ~ x + I(x^2) )+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()\n\ndata_pt %&gt;% \n  ggplot(aes(x = age, y = pos)) +\n  geom_jitter(height = 0.05)+\n  # geom_point(shape = \"|\",size = 2,\n  #            col = \"#0808cf\")+\n  facet_wrap(~qhchuan,\n             ncol=5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Age\", y  = \"Seroprevalence\")+\n  theme_bw()\n\n\n\n\n\nFig 3\n\n\n\n\nFig 3 shows the result of the fitting process: visualization with seroprevalence (solid line) with a 95% confidence interval (coloured area) and serum sample (point).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Serological data description</span>"
    ]
  },
  {
    "objectID": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "href": "sero_description.html#seroprevalence-in-the-same-age-group-over-time",
    "title": "3  Serological data description",
    "section": "3.3 Seroprevalence in the same age group over time",
    "text": "3.3 Seroprevalence in the same age group over time\n\n\nCode\ndata_pt$col_date &lt;- make_date(data_pt$col_year,data_pt$col_month,data_pt$col_day)\ndata_pt$age_gr &lt;- factor(data_pt$age_gr,\n                         levels = c(unique(data_pt$age_gr)))\n\n\n\n\nCode\n# | fig-width: 13\n# | fig-height: 8\n# | out-width: \"100%\"\n# | fig-cap: \"Fig 4\"\n\n# ggplot(data_pt,\n#        aes(x = col_date, y = pos)) +\n#   geom_jitter(height = 0.05)+\n#   facet_wrap(~age_gr,\n#              ncol = 5)+\n#   binomial_smooth(formula = y ~ x + I(x^2))+\n#   labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n#   theme_bw()+\n#   theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n##Fig 4 gives information on the seroprevalence of the 15 age groups. The seroprevalence of the age group 1-5 years old increased, which reflect the outbreak's impact in seroprevalence. The outbreak began in June, and 95% of symptomatic cases were aged 0-6 years old; and seroprevalence result also increased in 1-6 years old. However, there is a contrast; our serological shows an increase in the 2-3 years old age group in the 2nd peak (September), while the leading symptomatic group contributing to this peak is children aged 0-2 years old.\n\n\nI combined all samples for four collection times and fitted the GLM model with formula \\(seropositive \\sim age + age^{2}\\) for each age group. Fig 4 show the seroprevalence over time in the same age group.\nFor our assumption, asymptomatic cases of children who went to school infected their siblings. As you can see, the high seroprevalence of children at school age at the beginning of 2023 may cause the infection in their siblings aged 0-6, who have low seroprevalence simultaneously.\n\n\nCode\nggplot(data_pt,\n       aes(x = col_date, y = pos)) +\n  geom_jitter(height = 0.05)+\n  facet_wrap(~age_gr2,\n             ncol = 5)+\n  binomial_smooth(formula = y ~ x + I(x^2))+\n  labs(x = \"Collection date\", y  = \"Seroprevalence\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(vjust = 0.5,angle = 45))\n\n\n\n\n\nFig 4",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Serological data description</span>"
    ]
  },
  {
    "objectID": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "href": "sero_description.html#investigate-location-of-0-3-year-old-serosample",
    "title": "3  Serological data description",
    "section": "3.4 Investigate location of 0-3 year-old serosample",
    "text": "3.4 Investigate location of 0-3 year-old serosample\n\n3.4.1 Total collected samples\n\n\nCode\n# Split by col_time\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\") %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n3.4.2 Total collected positive samples\n\n\nCode\ndf_part &lt;- data_pt %&gt;% filter(age_gr3 == \"(0,3]\" & pos == 1) %&gt;% \n  group_by(col_time,qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() \n\ndf_plot2 &lt;- data.frame()\n\nfor (i in 1:4){\n  df_plot &lt;- df_part %&gt;% filter(col_time == unique(df_part$col_time)[i]) %&gt;% \n    left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n    mutate(col_time = unique(df_part$col_time)[i])\n  \n  df_plot2 &lt;- rbind(df_plot2,df_plot)\n}\n\n\ndf_plot2 %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = n),show.legend = T)+\n  scale_fill_continuous(low=\"yellow\", high=\"red\",\n                        guide=\"colorbar\",na.value=\"white\")+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\n                                         \"Apr 2023\",\n                                         \"Aug 2023\",\n                                         \"Dec 2023\")),nrow = 1)+\n  labs(title = \"Number of positive samples\",fill = \"Total number\")+\n  theme_void()+\n  theme(legend.position = \"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Serological data description</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html",
    "href": "fig_manu2.html",
    "title": "5  Manuscript figure",
    "section": "",
    "text": "5.1 Figure 1: heat map\nCode\nlibrary(paletteer)\ndf23 &lt;- df1 %&gt;% filter(year(adm_week) == 2023)\n\nco &lt;- data.frame()\n\nfor (i in 0:6){\n  gen &lt;- seq(0,1,le=52) + i\n  co &lt;- rbind(co,gen)\n}\n\n\ndf23 &lt;- df1 %&gt;% filter(year(adm_date) == 2023)\nwwww &lt;- slide_age(time1 = df23$adm_date,\n                  age1 =  df23$age1,\n                  w1 = 7, s1=7)\n\nlibrary(zoo)\nch &lt;- data.frame(date = wwww$adat$date,\n                 c0 = as.numeric(co[1,]),\n                 c1 = as.numeric(co[2,]),\n                 c2 = as.numeric(co[3,]),\n                 c3 = as.numeric(co[4,]),\n                 c4 = as.numeric(co[5,]),\n                 c5 = as.numeric(co[6,]))\n\nch &lt;- ch %&gt;% mutate(\n  trend = c(rep(\"#80FFFFFF\",26-3),\n            rep(\"#FFFFFFFF\",26+3))\n)\n\nch$group &lt;- consecutive_id(ch$trend)\nch &lt;- head(do.call(rbind, by(ch, ch$group, rbind, NA)), -1)\nch[, c(\"trend\", \"group\")] &lt;- lapply(ch[, c(\"trend\", \"group\")], na.locf)\nch[] &lt;- lapply(ch, na.locf, fromLast = T)\n\nch$trend &lt;- factor(ch$trend,\n                   levels = c(\"#80FFFFFF\",\"#FFFFFFFF\"))\n\nleb_month &lt;- c(\"Jan\",rep(\"\",3),\"Feb\",rep(\"\",3),\"Mar\",rep(\"\",4),\"Apr\",rep(\"\",3),\n               \"May\",rep(\"\",4),\"Jun\",rep(\"\",3),\"Jul\",rep(\"\",3),\"Aug\",rep(\"\",4),\n               \"Sep\",rep(\"\",3),\"Oct\",rep(\"\",3),\"Nov\",rep(\"\",4),\"Dec\",rep(\"\",3))\n\nts &lt;- data.frame(wwww$wdat$date,wwww$wdat$age) %&gt;%\n  filter(!is.na(wwww$wdat$date) & !is.na(wwww$wdat$age)) %&gt;%\n  count(wwww$wdat$date) %&gt;%\n  set_colnames(c(\"time\",\"n\")) %&gt;% \n  mutate(peak = c(rep(\"1st\",36),rep(\"2nd\",nrow(.)-36))) %&gt;% \n  ggplot(aes(x = time, y = n,fill = peak)) +\n  geom_col(alpha = 0.6,color=\"black\") +\n  geom_vline(xintercept = 36.5) +\n  theme_minimal()+\n  scale_y_continuous(name = \"Cases\",\n                     breaks = seq(0,3000,by = 1000),\n                     limit =c(0,3000), \n                     minor_breaks = NULL)+\n  scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\"))+\n  labs(tag = \"C\")+ \n  annotate(\"rect\", fill = \"grey\",\n           xmin = c(\"2023-01-04\",\"2023-04-05\",\"2023-08-02\",\"2023-12-06\"), \n           xmax = c(\"2023-01-11\",\"2023-04-26\",\"2023-08-30\",\"2023-12-27\"), \n           ymin = 0, ymax = Inf, alpha = .5)+\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18))\n\nhm &lt;- ggplot(data=wwww$wdat, aes(x=date, y=age)) +\n  stat_density(\n    aes(fill = after_stat(density)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  # scale_fill_gradient(low=\"#040404FF\", high= \"#FFFE9EFF\")+\n  # scale_fill_distiller(palette = \"Blues\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",lim= rev(c(0,6)),breaks = seq(0,6))+\n  scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n  labs(tag = \"D\",fill = \"Density\")+\n  # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8))+\n  geom_line(data = ch,aes(x = date,y = c0,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c1,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c2,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c3,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c4,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c5,col = trend),\n            group = 1,lwd = 0.25)+\n  theme(axis.title.y = element_text(size = 18),\n        axis.title.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"top\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,\n                              label.position=\"top\"),\n         color = \"none\") \n\n\nhm2 &lt;- ggplot(data=wwww$wdat, aes(x=date, y=age)) +\n  stat_density(\n    aes(fill = after_stat(count)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  # scale_fill_gradient(low=\"#040404FF\", high= \"#FFFE9EFF\")+\n  # scale_fill_distiller(palette = \"Blues\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",lim= rev(c(0,6)),breaks = seq(0,6))+\n  scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n  labs(tag = \"D\",fill = \"Number of hospitalizations\")+\n  # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 8))+\n  geom_line(data = ch,aes(x = date,y = c0,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c1,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c2,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c3,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c4,col = trend),\n            group = 1,lwd = 0.25)+\n  geom_line(data = ch,aes(x = date,y = c5,col = trend),\n            group = 1,lwd = 0.25)+\n  theme(axis.title.y = element_text(size = 18),\n        axis.title.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"top\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,\n                              label.position=\"top\"),\n         color = \"none\")\n\n\nfi_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &lt;= as.Date(\"2023-09-03\")&\n            !is.na(adm_date) & !is.na(age1)))\n\nse_peak &lt;- df1 %&gt;% filter(year(adm_date) == \"2023\") %&gt;%\n  filter((adm_date &gt; as.Date(\"2023-09-03\")) &\n           !is.na(adm_date) & !is.na(age1))\n\ndata &lt;- data.frame(\n  peak = c( rep(\"1st\",nrow(data.frame(se_peak$age1))),\n            rep(\"2nd\",nrow(data.frame(fi_peak$age1)))),\n  age = c( fi_peak$age1, se_peak$age1 )\n)\n\n## density plot\n\nad &lt;- ggplot(data=data, aes(x=age, group=peak, fill=peak)) +\n  geom_density(alpha = 0.6) +\n  scale_fill_manual(values = c(\"#582C83FF\",\"#FFC72CFF\")) +\n  scale_x_reverse(limit = c(6,0),\n                  breaks = seq(0,6,by=1), \n                  minor_breaks = NULL)+\n  scale_y_continuous(minor_breaks = NULL,position = \"right\")+\n  coord_flip()+\n  theme_minimal()+\n  labs(x = \"Age\", y =\"Density\",tag = \"F\",fill = \"Wave\")+\n  theme(axis.title.y = element_blank(),\n        axis.ticks.x = element_blank(),\n        # legend.position = \"top\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_blank(),\n        legend.text = element_text(size = 18),\n        legend.title = element_text(size = 18))\n\n\nlibrary(ISOweek)\ncount_dangky_week &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky_week.rds\")\nchild &lt;- count_dangky_week %&gt;% filter(birth_year &gt;= 2017) %&gt;% group_by(birth_week, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\ncolnames(child) &lt;- c(\"week\",\"year\",\"birth\")\n## combine week 52 and 53\n\nchild$week &lt;- ifelse(child$week == 53,52,child$week)\n\nchild &lt;- child %&gt;% group_by(year) %&gt;%\n  mutate(newn = ifelse(week == 52, sum(birth[week==52]), birth)) %&gt;%\n  {data.frame(.$week, .$year, .$newn )} %&gt;% unique() %&gt;%\n  magrittr::set_colnames(c(\"week\",\"year\",\"birth\"))\n\nchild$week2 &lt;- seq(1:length(child$week))\n\ntime &lt;- data.frame()\n\nfor (i in 2017:2022){\n  range &lt;- child$week[child$year == i]\n  if (length(range) == 52){\n    time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                        length.out = length(range)) %&gt;% data.frame()\n  } else {\n    time_add &lt;- seq.int(i + 7/365 ,(i+1) - 7/365,\n                        length.out = 52)[1:length(range)] %&gt;% data.frame()\n  }\n  time &lt;- rbind(time,time_add)\n}\n\n\nchild[,5] &lt;- time %&gt;%\n  magrittr::set_colnames(c(\"time\"))\n\n## model fitting\nfit &lt;- mgcv::gam(birth ~ s(week) + s(week2),method = \"REML\",data = child)\n\n\ncutpoint &lt;- function(point){\n  fitt &lt;- mgcv::gam(birth ~ s(week) + s(week2),\n                    method = \"REML\",data = child[-c(point:nrow(child)),])\n  \n  new_data2 &lt;- data.frame(week = rep(1:52,7))\n  \n  new_data2$week2 &lt;- seq(1,nrow(new_data2))\n  new_data2$year &lt;- rep(2017:2023,each = 52)\n  \n  time &lt;- data.frame()\n  for (i in 2017:2023){\n    range &lt;- new_data2$week[new_data2$year == i]\n    time_add &lt;- data.frame(seq.int(i + 7/365 ,(i+1) - 7/365,\n                                   length.out = length(range)))\n    time &lt;- rbind(time,time_add)\n  }\n  \n  new_data2[4] &lt;- time %&gt;%\n    magrittr::set_colnames(c(\"time\"))\n  \n  est2 &lt;- predict.gam(fitt,newdata = new_data2,\n                      type=\"response\",se.fit = TRUE)\n  \n  new_data2 &lt;- new_data2 %&gt;% mutate(\n    fit = est2$fit,\n    lwr = est2$fit - qt(0.95,nrow(new_data2))*est2$se.fit,\n    upr = est2$fit + qt(0.95,nrow(new_data2))*est2$se.fit,\n  )\n  out &lt;- list()\n  out$point &lt;- point\n  out$df &lt;- new_data2\n  return(out)\n}\n\n\nplot_cp &lt;- function(model){\n  dta &lt;- model$df %&gt;% \n    mutate(time2 = sprintf(\"%04d-W%02d-1\", year, week),\n           time2 = ISOweek2date(time2)) \n  ggplot(data = dta) +\n    geom_line(aes(x = time2,y = fit),col = \"blue\")+\n    geom_ribbon(aes(x = time2,ymin = lwr, ymax = upr), fill = \"royalblue\",alpha = 0.4)+\n    geom_vline(xintercept = dta$time2[dta$week2 == model$point])+\n    labs(y = \"Number of births\",\n         x = \"Year\")+\n    theme_minimal()\n}\n\n\nmodel &lt;- cutpoint(270)\n\nb_ss &lt;- plot_cp(model)+\n  geom_point(data = child[1:270,]%&gt;% \n               mutate(time2 = sprintf(\"%04d-W%02d-1\", year, week),\n                      time2 = ISOweek2date(time2)) , \n             aes(x = time2, y = birth),alpha = 0.5)+\n  # annotate(\"text\", x= 2017, y=3500, label= \"Fitting\") +\n  # annotate(\"text\", x = 2023.5, y=3500, label = \"Estimation\")+\n  scale_x_date(date_labels = \"%Y\",\n               breaks = seq(as.Date(\"2017-01-01\"),\n                                 as.Date(\"2024-01-01\"),\n                                 by = \"1 year\"),\n               limits = c(as.Date(\"2017-01-01\"),\n                          as.Date(\"2024-01-01\")))+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))\nCode\nlibrary(nortest)\nks.test(age~peak,data = data,altervative = \"two.sided\")\n\n\n\n    Asymptotic two-sample Kolmogorov-Smirnov test\n\ndata:  age by peak\nD = 0.083993, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#figure-2-catchment-area-of-ch1",
    "href": "fig_manu2.html#figure-2-catchment-area-of-ch1",
    "title": "5  Manuscript figure",
    "section": "5.2 Figure 2: Catchment area of CH1",
    "text": "5.2 Figure 2: Catchment area of CH1\nOUCRU serum bank from Children hospital 1, so we calculate the catchment area of CH1 by cases ratio method. (Zinszer et al. 2014)\nThe cumulative case ratio was defined as the ratio of the observed to the expected number of HFMD visits to CH1 from a district. The expected number of HFMD visits to CH1 from a particular district was calculated by multiplying the district’s population by the cumulative case rate for that hospital.\n\\[\n\\begin{align}\nCummulative \\ cases \\ rate &= \\frac{observed \\ cases \\ (districts)}{expected \\ cases \\ (districts)} \\\\ &= \\frac{observed \\ cases \\ (districts)}{district \\ population \\times cummulative \\ cases \\  rate \\ (hospitals)}\n\\end{align}\n\\]\n\\[\ncummulative \\ cases \\  rate \\ (hospitals)= \\frac{cases \\ observed \\ (hospital)}{population \\ of \\ children \\ under \\ 15 \\ in \\ HCMC}\n\\]\n\n\n\n\n\n\nNote\n\n\n\nA district was included in the catchment area if the upper limit of the 95% confidence interval for the cumulative case ratio for that district was 1 or greater because a ratio less than 1 indicated that the district contributed significantly fewer measles visits than expected for its population\n\n\n\n\nCode\n## cases district per age\ntable1 &lt;- read_csv(\"D:/OUCRU/hfmd/data/table1.csv\")\n## total cases cases district\ntable2 &lt;- read_csv(\"D:/OUCRU/hfmd/data/table2.csv\")\n## pop district\ntable3 &lt;- read_csv(\"D:/OUCRU/hfmd/data/table3.csv\")\n\npop_dis_hcm &lt;- table3 %&gt;%\n  mutate(age2 = word(age,1),\n         age2 = as.numeric(age2)) %&gt;%\n  filter(age &lt;= 16) %&gt;%\n  mutate(district1 = district1 %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  group_by(district1) %&gt;%\n  summarise(pop = sum(pop))\n\nCH1_obs &lt;- table1$CH1 %&gt;% sum(na.rm = TRUE)\n\nch1_cum_case_rate &lt;- CH1_obs/sum(pop_dis_hcm$pop)\n\ntdnd1 &lt;- data.frame(long = 106.6708,\n                    lat  = 10.7692) %&gt;%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\n\ncm_ch1_cases_ratio &lt;- table1 %&gt;% dplyr::select(district1,CH1) %&gt;%\n  mutate(district1 = district1 %&gt;%\n           str_replace_all(\n             c(\"Thanh pho Thu Duc\" = \"Thu Đuc\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  group_by(district1) %&gt;%\n  summarise(cases = sum(CH1,na.rm = TRUE)) %&gt;%\n  left_join(.,pop_dis_hcm, by = join_by(district1)) %&gt;%\n  replace(is.na(.), 0) %&gt;%\n  mutate(expected_cases = pop*ch1_cum_case_rate,\n         cum_case_ratio = cases/expected_cases,\n         lwr = pois.exact(cases)$lower/expected_cases,\n         upr = pois.exact(cases)$upper/expected_cases,\n         cut = cut(upr,\n                   breaks = c(0,1,2,3,10),\n                   labels = c(\"&lt; 1\",\"&gt;= 1\",\"&gt;= 2\",\"&gt;= 3\"),\n                   right = F)\n  )\n\n\n\n5.2.1 Catchment area using hospitalizations\n\n\nCode\ncm_ch1_cases_ratio %&gt;%\n  left_join(qhtp, ., by = join_by(varname_2 == district1)) %&gt;%\n  ggplot() +\n  geom_sf(aes(fill = cut,geometry = geom),show.legend = T)+\n  scale_fill_manual(\n    values = c(\n      \"&lt; 1\" = \"#FFFFFFFF\",\n      \"&gt;= 1\" = \"#6BAED6FF\",\n      \"&gt;= 2\" = \"#2171B5FF\",\n      \"&gt;= 3\" = \"#08306BFF\"\n    ),\n    name = \"95% CI Upper bound of \\ncumulative case ratio of each districts\"\n  )+\n  geom_sf_text(aes(label = nl_name_2,geometry = geom),size=2,color = \"black\")+\n  geom_sf(data = tdnd1, shape = 17,\n          color = \"yellow\", size = 1)+\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n5.2.2 Catchment area using serological data\n\n\nCode\nlibrary(ggsci)\n\ndata_pt %&gt;% group_by(qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() %&gt;%\n  dplyr::mutate(pre = n / sum(n)) %&gt;% \n  left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = pre),show.legend = T)+\n  # scale_fill_continuous(low=\"yellow\", high=\"red\",\n  #                       guide=\"colorbar\",na.value=\"white\",\n  #                       name = \"Percentage\",\n  #                       # limits = c(0,0.12),\n  #                       labels = scales::label_percent())+\n  scale_fill_gsea(\n    na.value = \"white\",\n    # breaks = c(0.1, 0.2, 0.3, 0.4, 0.5),\n    # limits = c(0, 0.5)\n    # rescaler = function(x, to = c(0, 1), from = NULL) {\n    #   scales::rescale(x ^ 0.5)\n    # },\n    labels = scales::label_percent(),\n    name = \"Percentage (%)\"\n  )+\n  geom_sf_text(aes(label = nl_name_2),size=2)+\n  geom_sf(data = tdnd1, shape = 17,\n          color = \"blue\", size = 2)+\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n5.2.3 Number of serum samples collected\n\n\nCode\ntdnd1 &lt;- data.frame(long = 106.6702,\n                    lat  = 10.7686) %&gt;%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\ndata_pt %&gt;% group_by(qhchuan) %&gt;% \n  count() %&gt;% as.data.frame() %&gt;%\n    # dplyr::mutate(pre = n / sum(n)) %&gt;% \n  left_join(qhtp, ., by = join_by(varname_2 == qhchuan)) %&gt;% \n  ggplot() +\n    geom_sf(aes(fill = n),show.legend = T)+\n    paletteer::scale_fill_paletteer_c(\"ggthemes::Classic Red\",\n                                    na.value=\"white\",\n                                    name = \"Number of \\nserum samples\")+\n    # geom_sf_text(aes(label = nl_name_2),size=2)+\n    geom_sf(data = tdnd1, shape = 17,\n           color = \"blue\", size = 2)+\n    theme_void()\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/sero-distribution.svg\",\n       width = 15,height = 8,dpi = 500)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#figure-3-estimated-cummulative-incidence-from-serological-data-and-cases-data",
    "href": "fig_manu2.html#figure-3-estimated-cummulative-incidence-from-serological-data-and-cases-data",
    "title": "5  Manuscript figure",
    "section": "5.3 Figure 3: Estimated cummulative incidence from serological data and cases data",
    "text": "5.3 Figure 3: Estimated cummulative incidence from serological data and cases data\n\n\nCode\ndistrict_consider &lt;- cm_ch1_cases_ratio %&gt;%\n  filter(cut != \"&lt; 1\") %&gt;%\n  pull(district1) %&gt;%\n  as.character()\n\n## function to calculate age profile\nhfmd &lt;- data_pt %&gt;%\n  as_tibble() |&gt;\n  mutate(collection = id |&gt;\n           str_remove(\".*-\") |&gt;\n           as.numeric() |&gt;\n           divide_by(1e4) |&gt;\n           round(),\n         col_date2 = as.numeric(col_date),\n         across(pos, ~ .x &gt; 0))\n\npredict2 &lt;- function(...) predict(..., type = \"response\") |&gt; as.vector()\n\nage_profile &lt;- function(data, age_values = seq(0, 15, le = 512), ci = .95) {\n  model &lt;- gam(pos ~ s(age), binomial, data)\n  link_inv &lt;- family(model)$linkinv\n  df &lt;- nrow(data) - length(coef(model))\n  p &lt;- (1 - ci) / 2\n  model |&gt;\n    predict(list(age = age_values), se.fit = TRUE) %&gt;%\n    c(list(age = age_values), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = link_inv(fit + qt(    p, df) * se.fit),\n           upr = link_inv(fit + qt(1 - p, df) * se.fit),\n           fit = link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\n\nage_profile_unconstrained &lt;- function(data, age_values = seq(0, 15, le = 512),\n                                      ci = .95) {\n  data |&gt;\n    group_by(collection) |&gt;\n    group_map(~ age_profile(.x, age_values, ci))\n}\n\nshift_right &lt;- function(n, x) {\n  if (n &lt; 1) return(x)\n  c(rep(NA, n), head(x, -n))\n}\n\nage_profile_constrained_cohort2 &lt;- function(data, age_values = seq(0, 15, le = 512),\n                                            ci = .95, n = 100) {\n  dpy &lt;- 365 # number of days per year\n\n  mean_collection_times &lt;- data |&gt;\n    group_by(collection) |&gt;\n    summarise(mean_col_date = mean(col_date2)) |&gt;\n    with(setNames(mean_col_date, collection))\n\n  cohorts &lt;- cumsum(c(0, diff(mean_collection_times))) |&gt;\n    divide_by(dpy * mean(diff(age_values))) |&gt;\n    round() |&gt;\n    map(shift_right, age_values)\n\n  age_time &lt;- map2(mean_collection_times, cohorts,\n                   ~ tibble(collection_time = .x, cohort = .y))\n\n  age_time_inv &lt;- age_time |&gt;\n    map(~ cbind(.x, age = age_values)) |&gt;\n    bind_rows() |&gt;\n    na.exclude()\n\n  data |&gt;\n    # Step 1:\n    group_by(collection) |&gt;\n    group_modify(~ .x |&gt;\n                   age_profile(age_values, ci) |&gt;\n                   mutate(across(c(fit, lwr, upr), ~ map(.x, ~ rbinom(n, 1, .x))))) |&gt;\n    group_split() |&gt;\n    map2(age_time, bind_cols) |&gt;\n    bind_rows() |&gt;\n    unnest(c(fit, lwr, upr)) |&gt;\n    pivot_longer(c(fit, lwr, upr), names_to = \"line\", values_to = \"seropositvty\") |&gt;\n    # Step 2a:\n    filter(cohort &lt; max(age) - diff(range(mean_collection_times)) / dpy) |&gt;\n    group_by(cohort, line) |&gt;\n    group_modify(~ .x %&gt;%\n                   scam(seropositvty ~ s(collection_time, bs = \"mpi\"), binomial, .) |&gt;\n                   predict2(list(collection_time = mean_collection_times)) %&gt;%\n                   tibble(collection_time = mean_collection_times,\n                          seroprevalence  = .)) |&gt;\n    ungroup() |&gt;\n    # Step 2b:\n    left_join(age_time_inv, c(\"cohort\", \"collection_time\")) |&gt;\n    group_by(collection_time, line) |&gt;\n    group_modify(~ .x |&gt;\n                   right_join(tibble(age = age_values), \"age\") |&gt;          ### added\n                   arrange(age) |&gt;                                         ### added\n                   mutate(across(seroprevalence,\n                                 ~ gam(.x ~ s(age), betar) |&gt;\n                                   predict2(list(age = age_values))))) |&gt;  ### modified\n    ungroup() |&gt;\n    pivot_wider(names_from = line, values_from = seroprevalence) |&gt;\n    group_by(collection_time) |&gt;\n    group_split()\n}\n\nhfmd_cm &lt;- hfmd %&gt;% filter(qhchuan %in% district_consider)\nconstrained_age_profiles_cohort2_cm &lt;- age_profile_constrained_cohort2(hfmd_cm)\n\nattack_rates &lt;- map2(head(constrained_age_profiles_cohort2_cm, -1),\n                     constrained_age_profiles_cohort2_cm[-1],\n                     ~ left_join(na.exclude(.x), na.exclude(.y), \"cohort\") |&gt;\n                       mutate(attack = (fit.y - fit.x) / (1 - fit.x)))\n\n## population\n\nage_structure &lt;- census2019 |&gt;\n  filter(province == \"Thành phố Hồ Chí Minh\") |&gt;\n  mutate(district = district %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  filter(district %in% district_consider) %&gt;%\n  group_by(age) |&gt;\n  summarise(n = sum(n)) |&gt;\n  mutate(across(age, ~ stringr::str_remove(.x, \" tuổi| \\\\+\") |&gt; as.integer())) |&gt;\n  arrange(age) |&gt;\n  filter(age &lt; 17)\n\nmod &lt;- lm(n ~ age, age_structure)\n\nincidences &lt;- map(attack_rates,\n                  ~ mutate(.x, incidence = (1 - fit.x) * attack *\n                             predict(mod, list(age = cohort))))\n\nincidence1 &lt;- df1 %&gt;%\n  filter(year(adm_date) == 2023 &\n           medi_cen %in% c(\"Bệnh viện Nhi đồng 1\",\n                           \"Bênh viện Nhi Đồng 1\",\n                           \"Bệnh viện Nhi Đồng 1\")) %&gt;%\n  mutate(district2 = district %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  filter(district2 %in% district_consider) %&gt;%\n  mutate(adm_date2 = as.numeric(adm_date),\n         cohort = interval(dob, \"2023-01-01\") / years(1)) %&gt;%\n  select(adm_date2,cohort,adm_week)\n\nmean_collection_times &lt;- hfmd |&gt;\n  group_by(collection) |&gt;\n  summarise(mean_col_date = mean(col_date2)) |&gt;\n  with(setNames(mean_col_date, collection))\n\nouut &lt;- list()\ndat &lt;- list()\n\nfor (i in 1:3){\n  \n  dat[[i]] &lt;- incidence1 %&gt;%\n    filter(adm_date2 &gt;= as.numeric(mean_collection_times[i]) &\n             adm_date2 &lt;= as.numeric(mean_collection_times[i+1])) %&gt;%\n    # mutate(age_gr = cut(cohort, breaks = seq(0,16),right = T)) %&gt;%\n    # na.omit(age_gr) %&gt;%\n    # group_by(age_gr) %&gt;%\n    # count() %&gt;%\n    # mutate(age_gr2 = as.numeric(age_gr)) %&gt;% \n    # ungroup() %&gt;% \n    # select(-age_gr)\n    {}\n  \n  # ouut[[i]] &lt;- scam(n ~ s(age_gr2,bs = \"po\"),data = dat[[i]]) %&gt;%\n  #   predict(list(age_gr2 = incidences[[i]]$cohort))%&gt;%\n  #   tibble(age = incidences[[i]]$cohort,\n  #          incidence  = .)\n}\n\nage_profile_sp_cm &lt;- constrained_age_profiles_cohort2_cm %&gt;% \n  bind_rows() %&gt;%  \n  ggplot(aes(x = age, y = fit)) +\n  geom_line(aes(x = age, fit))+\n  geom_point(data = data_pt %&gt;% \n               mutate(collection_time = factor(col_time,\n                                               levels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\"))),\n             aes(x = age, y = pos),shape = \"|\")+\n  facet_wrap(~factor(collection_time,\n                     labels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\")),\n             ncol = 4)+\n  geom_ribbon(aes(ymin = lwr, ymax = upr), fill = \"blue\", alpha = 0.3) +\n  labs(y = \"Seroprevalence (%)\",x = \"Age (years)\",tag=\"B\")+\n  scale_y_continuous(labels = scales::label_percent(scale = 100),limits = c(0,1))+\n  # coord_cartesian(ylim = c(0, 1))+\n  theme_bw()+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))\n\n\nex_incid_cm &lt;- ggplot()+\n  geom_histogram(data = dat %&gt;% bind_rows(.id = \"id\") %&gt;% filter(cohort &gt;0 ),\n                 aes(cohort),binwidth = 0.5,\n                 color = \"white\",fill = \"black\",alpha = 0.5)+\n  geom_line(data = incidences %&gt;% bind_rows(.id = \"id\"),\n            aes(x = cohort, y = incidence/12))+\n  scale_y_continuous(name = \"Reported data\",\n                     breaks = seq(0,1000,by=200),\n                     sec.axis = sec_axis(~.*12, \n                                         name=\"Serological data\",\n                                         breaks = seq(0,12000,by=2000)))+\n  facet_wrap(~factor(id,labels = c(\"12/2022 - 4/2023\",\n                                   \"4/2023 - 8/2023\",\n                                   \"8/2023 - 12/2023\")))+\n  coord_cartesian(ylim=c(0,1000))+\n  labs(tag = \"D\",\n       y = \"Total cases count\",\n       x = \"Age (years)\")+\n  scale_x_continuous(breaks = seq(0,14,by = 2),\n                     limits = c(0,14))+\n  theme_bw()+\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18),\n    legend.title = element_text(size = 18),\n    strip.text = element_text(size = 18),\n    panel.grid.minor.x = element_blank())\n\nts_cm &lt;- incidence1 %&gt;% group_by(adm_week) %&gt;% count() %&gt;% \nggplot()+\n  geom_bar(aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  geom_point(aes(x = as.Date(col_date), y =  pos*1000),\n            shape = \"|\",data = data_pt)+\n  labs(x = \"Admission week\",y = \"Cases\",tag = \"B\")+\n  annotate(\"rect\", fill = \"blue\",\n           xmin = as.Date(c(\"2022-12-01\",\"2023-04-01\",\"2023-08-01\",\"2023-12-01\")), \n           xmax = as.Date(c(\"2023-01-04\",\"2023-04-30\",\"2023-08-30\",\"2023-12-30\")), \n           ymin = 0, ymax = Inf, alpha = .2)+\n  theme_classic()+\n  scale_y_continuous(breaks = seq(0,1000,by = 500),\n                     limit =c(0-1,1000+1))+\n  scale_x_date(\n    breaks = as.Date(c(\"2022-12-15\", \"2023-04-15\", \"2023-08-15\", \"2023-12-15\")),\n    labels = c(\"Dec 2022\", \"Apr 2023\", \"Aug 2023\", \"Dec 2023\"),\n    limits = c(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\")))+\n  theme(\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18))\n\n\n\n\nCode\nlibrary(grid)\n\n# left_col  &lt;- age_profile_sp_cm / ts/ hm\n# \n# right_col &lt;- plot_spacer() / b_ss / \n#   wrap_elements(full = ad  + theme(plot.margin = margin(0, 250, 25, 0)))\n# \n# (left_col | right_col) +\n#   plot_layout(widths = c(2.5, 2))\n# \n# ggsave(\"./fig_manuscript/fig1_2.svg\",\n#        width = 18,height = 10,dpi = 500)\n\n\n\n\nCode\nleft_col2  &lt;- age_profile_sp_cm / ts/ hm\n\nright_col2 &lt;- ex_incid_cm / b_ss / \n  wrap_elements(full = ad  + theme(plot.margin = margin(-20, 250, 20*3.25, 0),\n                                   legend.position = \"right\"))\n\n(left_col2 | right_col2) +\n  plot_layout(widths = c(2.5, 2))\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig1_2a.svg\",\n       width = 18,height = 10,dpi = 500)\n\n\n\n\nCode\nex_incid_cm/\n  ts_cm\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig2_2.svg\",\n       width = 18,height = 10,dpi = 500)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "analysis_N.html",
    "href": "analysis_N.html",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "",
    "text": "5.1 Attack rate\nattack_rates &lt;- map2(head(constrained_age_profiles_cohort2, -1),\n                     constrained_age_profiles_cohort2[-1],\n                     ~ left_join(na.exclude(.x), na.exclude(.y), \"cohort\") |&gt; \n                       mutate(attack = (fit.y - fit.x) / (1 - fit.x)))\ncensus2019 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\")\n\nage_structure &lt;- census2019 |&gt; \n  filter(province == \"Thành phố Hồ Chí Minh\") |&gt; \n  group_by(age) |&gt; \n  summarise(n = sum(n)) |&gt; \n  mutate(across(age, ~ stringr::str_remove(.x, \" tuổi| \\\\+\") |&gt; as.integer())) |&gt; \n  arrange(age) |&gt; \n  filter(age &lt; 17)\n\nwith(age_structure,\n     plot(age - 1, n, type = \"s\", ylim = c(0, 110000), col = 4, lwd = 3,\n          xlab = \"age classes (years)\", ylab = \"number of children\"))\nabline(v = 0:15, col = \"grey\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2023 HCMC HMFD outbreak</span>"
    ]
  },
  {
    "objectID": "analysis_N.html#expected-incidence-from-seroprevalence",
    "href": "analysis_N.html#expected-incidence-from-seroprevalence",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "5.2 Expected incidence from seroprevalence",
    "text": "5.2 Expected incidence from seroprevalence\n\nmod &lt;- lm(n ~ age, age_structure)\n\nincidences &lt;- map(attack_rates,\n                  ~ mutate(.x, incidence = (1 - fit.x) * attack *\n                                             predict(mod, list(age = age.x))))\n\nincidences %&gt;% \n  bind_rows(.id = \"id\") %&gt;% \n  ggplot(aes(x = age.x, y = incidence,color = id))+\n  geom_line()+\n  coord_cartesian(ylim = c(0,20000))+\n  theme(legend.position = \"hide\")+\n  theme_minimal()+\n  theme(legend.position = \"hide\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2023 HCMC HMFD outbreak</span>"
    ]
  },
  {
    "objectID": "analysis_N.html#incidence-of-hospitalization",
    "href": "analysis_N.html#incidence-of-hospitalization",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "5.3 Incidence of hospitalization",
    "text": "5.3 Incidence of hospitalization\n\nhfmd_incidence &lt;- readRDS(\"D:/OUCRU/hfmd/data/hfmd_incidence.rds\")\n\nincidence1 &lt;- hfmd_incidence %&gt;% \n  filter(year(adm_date) == 2023) %&gt;% \n  mutate(adm_date2 = as.numeric(adm_date),\n         cohort = interval(dob, \"2023-01-01\") / years(1)) \n\n\nmean_collection_times &lt;- hfmd |&gt; \n  group_by(collection) |&gt; \n  summarise(mean_col_date = mean(col_date2)) |&gt; \n  with(setNames(mean_col_date, collection))\n\nouut &lt;- list()\n\nfor (i in 1:3){\n  ouut[[i]] &lt;- incidence1 %&gt;% \n    filter(adm_date2 &gt;= as.numeric(mean_collection_times[i]) & \n             adm_date2 &lt;= as.numeric(mean_collection_times[i+1])) %&gt;% \n    mutate(age_gr = cut(cohort, breaks = seq(0,16),right = T)) %&gt;% \n    na.omit(age_gr) %&gt;%\n    group_by(age_gr) %&gt;% \n    count() %&gt;% \n    mutate(age_gr2 = as.numeric(age_gr)) %&gt;% \n    gam(n ~ s(age_gr2),data = .) %&gt;% \n    predict(list(age_gr2 = incidences[[i]]$age.x))%&gt;%\n    tibble(age = incidences[[i]]$age.x,\n           incidence  = .)\n}\n\nouut %&gt;% \n  bind_rows(.id = \"id\") %&gt;% \n  ggplot(aes(x = age, y = incidence,color = id))+\n  geom_line()+\n  coord_cartesian(ylim = c(0,10000))+\n  theme_minimal()+\n  theme(legend.position = \"hide\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2023 HCMC HMFD outbreak</span>"
    ]
  },
  {
    "objectID": "analysis_N.html#probability-of-hospitalization",
    "href": "analysis_N.html#probability-of-hospitalization",
    "title": "5  2023 HCMC HMFD outbreak",
    "section": "5.4 Probability of hospitalization",
    "text": "5.4 Probability of hospitalization\n\nmap2(ouut, incidences, ~inner_join(.x, .y, by = join_by(age == age.x)) %&gt;% \n       mutate(prob = (incidence.x/incidence.y)*100)) %&gt;% \n  bind_rows(.id = \"id\") %&gt;% \n  ggplot(aes(x = age, y = prob,color = id))+\n  geom_line()+\n  theme_minimal()+\n  theme(legend.position = \"hide\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2023 HCMC HMFD outbreak</span>"
    ]
  },
  {
    "objectID": "tsir_r0.html",
    "href": "tsir_r0.html",
    "title": "6  Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City",
    "section": "",
    "text": "6.1 Data\nBased on Du Z’s article (Du et al. 2017), which used the tSIR model to estimate the basic reproduction number (\\(R_0\\)) in Guangdong, China, I applied the tSIR model to calculate \\(R_0\\) at the district level in Ho Chi Minh City during 2023 outbreak.\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(mgcv)\nlibrary(patchwork)\nlibrary(odin)\nlibrary(tsiR)\nlibrary(janitor)\nlibrary(ggstatsplot)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\nCode\n#### birth data\nhcm_birth_data &lt;- readRDS(\"D:/OUCRU/hfmd/hcm_birth_data.rds\")\nhcm_birth_data$district_reg &lt;- hcm_birth_data$district_reg %&gt;%\n  str_replace_all(c(\"Quận 2\"  = \"Thủ Đức\",\n                    \"Quận 9\"  = \"Thủ Đức\"))\n\nhcm_birth_data$district_reg &lt;- hcm_birth_data$district_reg %&gt;% str_replace_all(\n  c( \"Gò vấp\"  = \"Gò Vấp\"))\n\nhcm_birth_data$district_reg &lt;- hcm_birth_data$district_reg %&gt;%\n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\")\n\nbirth_district &lt;- hcm_birth_data %&gt;%\n  group_by(district_reg) %&gt;%\n  group_modify(~ .x |&gt; filter(birth_year &gt;= 2017)%&gt;%\n                 group_by(birth_week,birth_year) %&gt;%\n                 summarise(n = sum(n),.groups = \"drop\") %&gt;%\n                 mutate(birth_week = replace(birth_week, birth_week == 53, 52),\n                        biweek = (birth_week + 1) %/% 2) %&gt;%\n                 arrange(birth_year) %&gt;%\n                 group_by(birth_year, biweek) %&gt;%\n                 summarise(biweek_birth = sum(n), .groups = \"drop\") %&gt;%\n                 mutate(biweek2 = 1:nrow(.))\n                 )\n\ncutpoint &lt;- 135\n\nbirth_district2 &lt;- birth_district %&gt;% filter(biweek2 &lt;= cutpoint) %&gt;%\n  group_split()\n\nmodelaa &lt;- birth_district %&gt;% filter(biweek2 &lt;= cutpoint) %&gt;%\n  group_split() %&gt;%\n  map(\\(df)gam(biweek_birth ~ s(biweek) + s(biweek2),method = \"REML\",data = df))\n\nnewdata &lt;- data.frame(\n  biweek  = rep(1:26, 2024 - 2017),\n  biweek2 = 1:(26 * (2024 - 2017))\n)\n\npredicted_birth_district &lt;- map2_dfr(modelaa, birth_district2, \\(mod, df) {\n  newdata %&gt;%\n    mutate(\n      predicted   = predict(mod, newdata = newdata, type = \"response\"),\n      district_reg = unique(df$district_reg),\n      birth_year = rep(2017:2023, each = 26)\n    )\n})\nCode\n## setup hcm map\n\nlibrary(sf)\nlibrary(stringi)\nmap_path &lt;- \"D:/OUCRU/HCDC/project phân tích sero quận huyện/\"\nvn_qh &lt;- st_read(dsn = file.path(map_path, \"gadm41_VNM.gpkg\"), layer = \"ADM_ADM_2\")\n\nvn_qh1 &lt;- vn_qh %&gt;%\n  clean_names() %&gt;%     ## cho thành chữ thường\n  filter(\n    str_detect(\n      name_1,\n      \"Hồ Chí Minh\"\n    )\n  )\nqhtp &lt;- vn_qh1[-c(14,21),]\n\nqhtp$geom[qhtp$varname_2 == \"Thu Duc\"] &lt;- vn_qh1[c(\"21\",\"24\",\"14\"),] %&gt;%\n  st_union()\n\nqhtp &lt;- qhtp %&gt;% st_cast(\"MULTIPOLYGON\")\nqhtp$varname_2 &lt;- stri_trans_general(qhtp$varname_2, \"latin-ascii\") %&gt;%\n  tolower() %&gt;%\n  str_remove(\"district\") %&gt;%\n  trimws(which = \"both\")\n\nqhtp$nl_name_2 &lt;- c(\"BC\",\"BTân\",\"BT\",\"CG\",\"CC\",\"GV\",\n                    \"HM\",\"NB\",\"PN\",\"1\",\"10\",\"11\",\"12\",\n                    \"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"TB\",\n                    \"TP\",\"TĐ\")\nCode\n## plot\npredicted_birth_district %&gt;%\n  ggplot(aes(x = biweek2,y = predicted)) +\n  geom_line()+\n  geom_point(data = birth_district2 %&gt;% bind_rows(),aes(x = biweek2,y = biweek_birth))+\n  facet_wrap(~district_reg,ncol  = 4,scales = \"free\")+\n  theme_minimal()\n\n\n\n\n\nResults of the GAM model for birth data in each district of Ho Chi Minh City.\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n                  col_types = c(\"date\", \"numeric\", \"text\", \n                                \"text\", \"text\", \"date\", \"date\", \"date\", \n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;% \n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\") \n\ncase_district &lt;- df1 %&gt;%\n  group_by(district) %&gt;%\n  group_modify(~ .x |&gt; filter(year(adm_date) &gt;= 2017 & year(adm_date) &lt;= 2023) %&gt;%\n                 group_by(adm_week) %&gt;% count() %&gt;%\n                 mutate(week = week(adm_week),\n                        year = year(adm_week),\n                        week = replace(week, week == 53, 52),\n                        biweek = (week + 1) %/% 2) %&gt;%\n                 group_by(year, biweek) %&gt;%\n                 summarise(biweek_cases = sum(n), .groups = \"drop\")\n               )\n\ncase_birth_district_1723 &lt;- full_join(predicted_birth_district,case_district,\n          by =c(\n            \"district_reg\" = \"district\",\n            \"birth_year\" = \"year\",\n            \"biweek\" = \"biweek\"\n          ))\nCode\n## population\ncensus2019 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\")\ncensus2019$district &lt;- census2019$district %&gt;%\n  str_replace_all(c(\"Quận 2\"  = \"Quận Thủ Đức\",\n                    \"Quận 9\"  = \"Quận Thủ Đức\")) %&gt;%\n  str_remove_all(\"Quận|Huyện\") %&gt;%\n  trimws(which = \"both\")\n\n\npopqh &lt;- census2019 %&gt;% filter(province == \"Thành phố Hồ Chí Minh\") %&gt;%\n  group_by(district) %&gt;% summarise(pop = sum(n))\n\nr1920 &lt;- 9227.6/9038.6\nr2021 &lt;- 9166.8/9227.6\nr2122 &lt;- 9389.7/9166.8\nr2223 &lt;- 9456.7/9389.7\n\npopqh$pop20 &lt;- popqh$pop*r1920\npopqh$pop21 &lt;- popqh$pop20*r2021\npopqh$pop22 &lt;- popqh$pop21*r2122\npopqh$pop23 &lt;- popqh$pop22*r2223\npopqh$pop24 &lt;- popqh$pop23*r2223\n\npop_district &lt;- popqh %&gt;%\n  pivot_longer(\n    cols = starts_with(\"pop\"),\n    names_to = \"year\",\n    values_to = \"population\"\n  ) %&gt;%\n  mutate(\n    year = case_when(\n      year == \"pop\" ~ 2019L,  # base year\n      TRUE ~ as.integer(sub(\"pop\", \"20\", year))\n    )\n  ) %&gt;%\n  arrange(district, year) %&gt;%\n  group_by(district) %&gt;%\n  arrange(year) %&gt;%\n  mutate(next_pop = lead(population),\n         next_year = lead(year)) %&gt;%\n  filter(!is.na(next_pop)) %&gt;%\n  group_by(district, year) %&gt;%\n  do({\n    tibble(\n      district = .$district,\n      year = .$year,\n      biweek = 1:26,\n      population = seq(.$population, .$next_pop, length.out = 27)[-27]  # exclude endpoint\n    )\n  })",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City</span>"
    ]
  },
  {
    "objectID": "tsir_r0.html#data",
    "href": "tsir_r0.html#data",
    "title": "6  Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City",
    "section": "",
    "text": "I used HFMD surveillance data from 2022–2023. Although we have time-series incidence data from 2013–2023, my previous analysis showed that the performance of the tSIR model was affected by COVID-19 quarantine measures. See here. The case data were aggregated biweekly.\nWe obtained birth data for each district in Ho Chi Minh City from 2017–2022. I aggregated the data biweekly and used a GAM model to fit the birth trends across biweeks of each year (1–26), from biweek 1 of 2017 to biweek 5 of 2022 (week 135). The model used was: \\[\nbirth \\sim biweek_{1-26} + biweek_{1-135}\n\\] and predictions were extended to week 182 (week 16 of 2023).\nFor population data, I used the 2019 census and searched for the annual population growth rate from 2019–2024. Using this, I generated a biweekly population sequence for each district.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City</span>"
    ]
  },
  {
    "objectID": "tsir_r0.html#method-and-results",
    "href": "tsir_r0.html#method-and-results",
    "title": "6  Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City",
    "section": "6.2 Method and results",
    "text": "6.2 Method and results\n\n6.2.1 tSIR model\nI aggregated the data into bi-weekly time steps, and there are twenty-six period \\(period_1,...,period_{26})\\) per year. The \\(cases_t\\) was adjusted to the infected part \\(I_{adj,t}\\) for the TSIR model by multiplying by a derivative function:\n\\[\n\\begin{align}\n\\rho = \\frac{d\\hat{Y}_{cumBirths}}{dX_{cumCases}} \\\\\nI_{adj,t} = cases_t \\times \\rho\n\\end{align}\n\\]\nThe cumulate number of cases \\((X_{cumCases})\\) and births \\((Y_{cumBiths})\\) were calculated by the numbers of HFMD cases \\((cases_t)\\) and the births. The \\(\\hat{Y}_{cumBirths}\\) was obtained by fitting the locally weighted scatterplot smoothing (LOWESS) non-parametric regression:\n\\[\n\\hat{Y}_{cumBirths} = Lowess(X_{cumCases},Y_{cumBirths},f = 2/3)\n\\]\n\n\nCode\npop_district2223 &lt;- pop_district %&gt;%\n  filter(year &gt;= 2022)\n\ncase_birth_district_2223 &lt;- case_birth_district_1723 %&gt;%\n  mutate(biweek_cases = replace_na(biweek_cases, 1)) %&gt;%\n  filter(birth_year &gt;= 2022)\n\n\ndt_tsir_district_2223 &lt;- full_join(case_birth_district_2223,pop_district2223,\n                                      by =c(\n                                        \"district_reg\" = \"district\",\n                                        \"birth_year\" = \"year\",\n                                        \"biweek\" = \"biweek\"\n                                      )) %&gt;%\n  select(district_reg,birth_year,biweek_cases,predicted,population)\n\noutcome &lt;- dt_tsir_district_2223 %&gt;%\n  group_by(district_reg) %&gt;%\n  group_modify(~.x %&gt;% mutate(time = seq(2022, 2024, length.out = 52))) %&gt;%\n  ungroup() %&gt;% select(district_reg,time,biweek_cases,predicted,population) %&gt;%\n  magrittr::set_colnames(c(\"district\",\"time\",\"cases\",\"births\",\"pop\")) %&gt;%\n  group_by(district) %&gt;%\n  group_split() %&gt;%\n  map(\\(df)runtsir(data = df[,-1], IP = 2, xreg = \"cumcases\",\n                   regtype = \"lowess\",alpha = NULL, sbar = NULL,\n                   method = \"deterministic\", nsim = 1000,\n                   family = \"gaussian\", link = \"identity\"))\n\n\nbbbbb &lt;- map(outcome, ~ data.frame(\n  time = .x$time,\n  fit = .x$res$mean,\n  s = .x$simS$mean,\n  beta = .x$contact\n)) \n\n\naaaaa &lt;- dt_tsir_district_2223 %&gt;%\n  group_by(district_reg) %&gt;%\n  group_modify(~.x %&gt;% mutate(time = seq(2022, 2024, length.out = 52))) %&gt;%\n  ungroup() %&gt;% select(-birth_year) %&gt;%\n  magrittr::set_colnames(c(\"district\",\"cases\",\"births\",\"pop\",\"time\")) %&gt;%\n  group_by(district) %&gt;%\n  # filter(time &gt;= 2023) %&gt;% \n  group_split() \n\ndata_result &lt;- map2(aaaaa, bbbbb, ~ left_join(.x, .y, by = \"time\"))%&gt;%\n  bind_rows()\n\n\nData\n\n\nCode\ndata_result %&gt;%\n  ggplot(aes(x = time,y = cases))+\n  geom_bar(stat = \"identity\")+\n  facet_wrap(~district,ncol = 4)+\n  scale_x_continuous(breaks = c(2022,2023,2024))+\n  theme_bw()+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nIncidence of HFMD in HCMC\n\n\n\n\nModel fitting\n\n\nCode\n## plot\ndata_result %&gt;%\n  ggplot(aes(x = time))+\n  geom_line(aes(group = 1,y = cases,linetype = \"cases reported\"))+\n  geom_line(aes(group = 1,y = fit,linetype = \"model fitted\"))+\n  facet_wrap(~district,scales = \"free\",ncol = 4)+\n  scale_linetype_manual(values = c(\"cases reported\" = \"dashed\",\n                                   \"model fitted\" = \"solid\"),\n                        name=\"Analysis Type\")+\n  scale_x_continuous(breaks = c(2022,2023,2024))+\n  theme_bw()+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nResult of tSIR fitting\n\n\n\n\nContact rate\n\n\nCode\ndata_result %&gt;% \n  filter(time &gt;= 2023) %&gt;% \n  ggplot(aes(x = time))+\n  geom_line(aes(y = beta.beta))+\n  geom_ribbon(aes(ymin = beta.betalow,\n                  ymax = beta.betahigh),fill = \"blue\",alpha = 0.3)+\n  facet_wrap(~district,ncol = 4)+\n  labs(x = \"time\", y =\"contact rate\")+\n  scale_x_continuous(breaks = c(2023,2024))+\n  theme_minimal()\n\n\n\n\n\nInfectious contact rate of each district from 2022 to 2023\n\n\n\n\n\n\n\n\n\n\nFinding\n\n\n\nWhile the number of HFMD cases in District 1 is relatively low, the contact rate during outbreaks is notably the highest among all districts.\n\n\n\n\n6.2.2 Relationship between beta(t) and population density\n\n\nCode\ndf &lt;- read_csv(\"D:/OUCRU/hfmd/data/landuse/vnm_pd_2020_1km_ASCII_XYZ.csv\")\n\ndf_sf &lt;- st_as_sf(df, coords = c(\"X\", \"Y\"), crs = 4326)\n\ndf_hcmc &lt;- st_intersection(df_sf, qhtp)\n\nggplot() +\n  geom_tile(data = as.data.frame(st_coordinates(df_hcmc)) %&gt;%\n              bind_cols(df_hcmc |&gt; st_drop_geometry()),\n            aes(x = X, y = Y, fill = Z)) +\n  scale_fill_viridis_c(option = \"viridis\", name = \"Population density\\n(people per km²)\") +\n  geom_sf(data = qhtp, fill = NA, color = \"black\", size = 0.4) +\n  coord_sf(expand = FALSE) +\n  labs(\n    title = \"Population Density Inside Ho Chi Minh City (2020, 1km Resolution)\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  ) +\n  theme_minimal(base_size = 12)\n\n\n\n\n\n\n\n\n\n\n\n6.2.3 After filter pixel &gt; 1000 people/km2\n\n\nCode\nggplot() +\n  geom_tile(data = as.data.frame(st_coordinates(df_hcmc)) %&gt;%\n              bind_cols(df_hcmc |&gt; st_drop_geometry()) %&gt;%\n              filter(Z &gt; 1000),\n            aes(x = X, y = Y, fill = Z)) +\n  scale_fill_viridis_c(option = \"viridis\", name = \"Population density\\n(people per km²)\") +\n  geom_sf(data = qhtp, fill = NA, color = \"black\", size = 0.4) +\n  coord_sf(expand = FALSE) +\n  labs(\n    title = \"Population Density Inside Ho Chi Minh City (2020, 1km Resolution)\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  ) +\n  theme_minimal(base_size = 12)\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(terra)\nmy_raster &lt;- rast(\"D:/OUCRU/hfmd/data/landuse/dynamic world/2023-01-01_2024-01-01_DYN_WORLD_V1.tif\")\nplot(my_raster, col = c(\"#419bdf\",\"#387e49\",\"#87b151\",\"#8185c2\",\n                        \"#e59635\",\"#dfc359\",\"#c4291c\",\"#a39b92\",\"#b39fe2\"),\n     type=\"class\",\n     plg=list(legend=c(\"Water\", \"Trees\", \"Grass\", \"Flooded vegetation\", \"Crops\",\n                       \"Shrub and scrub\", \"Built\", \"Bare\", \"Snow and ice\")))\n\n\n\n\n\n\n\n\n\n\n\nCode\nhcmc_density &lt;- df_hcmc %&gt;%\n  filter(Z &gt; 1000) %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(name_2) %&gt;%\n  summarise(\n    mean_density = mean(Z, na.rm = TRUE),\n    median_density = median(Z, na.rm = TRUE),\n    max_density = max(Z, na.rm = TRUE),\n    n_points = n()\n  ) %&gt;%\n  arrange(desc(mean_density)) %&gt;%\n  mutate(district = name_2 %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\"))\n\ndata_result %&gt;%\n  # group_by(district) %&gt;%\n  # summarise(mean_beta = mean(beta.beta)) %&gt;%\n  left_join(.,hcmc_density,by = join_by(district)) %&gt;%\n  mutate(log_den = log(mean_density)) %&gt;%\n  ggplot(aes(x = log_den,y=beta.beta))+\n  geom_point()+\n  theme_minimal()+\n  labs(x = \"Log of mean human density\",\n       y = \"beta(t)\")\n\n\n\n\n\n\n\n\n\n\n\n6.2.4 Basic reproduction rate and herd immunity threshold\nThe \\(R_t\\) was derived according to the concepts of the next generation matrix. While the next generation matrix was replaced by the seasonal transmission parameters \\(\\beta_{1,...,26}\\) in our study. The \\(\\beta_{1,...,26}\\) were the regression coefficients of the tSIR model, and could be estimated by using the algorithm of iteratively reweighted least squares (IRLS)\n\\[\nRt_{1,...,26} = \\beta_{1,...,26}\\times \\bar{S}\n\\]\nHerd immunity threshold (HIT) is the proportion of a population that must be vaccinated to become immune so that an infectious disease can become stable in that community. When the proportion is reached by vaccination, each case leads to a single new case and the infection becomes stable. We calculated the HIT by:\n\\[\nHIT = 1 - \\frac{1}{Rt}\n\\]\n\n6.2.4.1 District-specific Rt and HIT of HFMD in HCMC.\n\n\nCode\nrt_hit &lt;- data_result %&gt;%\n  group_by(district) %&gt;%\n  filter(time &gt; 2023) %&gt;%\n  group_modify(~.x %&gt;%\n                 mutate(rt = beta.beta*s)) %&gt;%\n  summarise(p25_rt = quantile(rt,0.25),\n            median_rt = median(rt),\n            p75_rt = quantile(rt,0.75),\n            hit = (1 - (1/median_rt))*100)\n\nrt_hit &lt;- rt_hit %&gt;% filter(hit &gt; 0) %&gt;% as.data.frame()\nlibrary(knitr)\nkable(rt_hit)\n\n\n\n\n\ndistrict\np25_rt\nmedian_rt\np75_rt\nhit\n\n\n\n\n1\n5.181057\n10.704062\n19.018194\n90.65775\n\n\n10\n2.811688\n5.288984\n7.474946\n81.09278\n\n\n11\n2.505858\n4.051408\n5.057597\n75.31723\n\n\n12\n1.922424\n2.417594\n3.406859\n58.63656\n\n\n3\n1.702278\n2.571781\n3.436301\n61.11645\n\n\n4\n2.584450\n3.574817\n5.511720\n72.02654\n\n\n5\n1.769346\n2.530836\n3.486931\n60.48737\n\n\n6\n2.226285\n3.011215\n3.900894\n66.79081\n\n\n7\n2.356067\n2.972081\n4.089846\n66.35354\n\n\n8\n1.618056\n2.350634\n3.129286\n57.45828\n\n\nBình Chánh\n2.824292\n4.018811\n5.023054\n75.11702\n\n\nBình Thạnh\n3.087578\n5.371727\n6.608702\n81.38401\n\n\nBình Tân\n2.377875\n3.345409\n4.560535\n70.10829\n\n\nCần Giờ\n1.741731\n2.543073\n3.685242\n60.67749\n\n\nCủ Chi\n2.656621\n4.650120\n7.328248\n78.49518\n\n\nGò Vấp\n2.775346\n3.286195\n4.467266\n69.56967\n\n\nHóc Môn\n2.410432\n3.846697\n5.386281\n74.00367\n\n\nNhà Bè\n2.650263\n3.746345\n4.854769\n73.30732\n\n\nPhú Nhuận\n2.022882\n2.563387\n3.186873\n60.98911\n\n\nThủ Đức\n1.900082\n2.845778\n3.392701\n64.86022\n\n\nTân Bình\n2.433386\n3.609762\n4.668092\n72.29734\n\n\nTân Phú\n2.154922\n2.764867\n3.901688\n63.83189\n\n\n\n\n\n\n\n6.2.4.2 Heatmap and dendrogram of beta\n\n\nCode\nlibrary(ggdendro)\nlibrary(patchwork)\n\nbeta_2023_district &lt;- data_result %&gt;% \n  filter(time &gt; 2023) %&gt;% \n  select(district,beta.time,beta.beta) %&gt;% \n  pivot_wider(names_from = beta.time,values_from = beta.beta)\n\nbeta_2023_district &lt;- column_to_rownames(beta_2023_district, var = \"district\")\nd &lt;- stats::dist(beta_2023_district)\n\ntreeC &lt;- hclust(d, method=\"ward.D2\")\ndg &lt;- as.dendrogram(treeC)\nddata_analytes &lt;- dendro_data(dg, type = \"rectangle\")\n\nHAC_district &lt;- ggplot() +\n  geom_segment(\n    data = segment(ddata_analytes),\n    aes(x = x, y = y, xend = xend, yend = yend),\n    position = position_nudge(x = -0.5)\n  ) +\n  coord_flip(clip = \"off\") +\n  scale_y_reverse() +\n  scale_x_continuous(limits = c(0, 22), expand = c(0, 0)) +\n  theme_dendro() +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"mm\"))\n  geom_text(\n    data = label(ddata_analytes),\n    aes(x = x, y = -1, label = label),\n    size = 3.5, color = \"#444444\", vjust = 2, angle = 0, hjust = 0\n  ) \n\ndisaaa &lt;- label(ddata_analytes)[3] %&gt;% as.data.frame() %&gt;% pull(label) %&gt;% as.character()\n\nheatmap_r0 &lt;- data_result %&gt;%\n  group_by(district) %&gt;%\n  group_modify(~.x %&gt;% mutate(r0 = beta.beta*s,\n                              beta.time = beta.time*2)) %&gt;%\n  bind_rows() %&gt;% filter(time &gt; 2023) %&gt;%\n  ggplot(aes(x = as.factor(beta.time),\n             y = factor(district,levels = disaaa),\n             fill = beta.beta)) +\n  geom_tile()+\n  # scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  scale_fill_gradient(low=\"yellow\", high=\"red\",\n                      name = \"beta(t)\")+\n  scale_y_discrete(position = \"right\")+\n  scale_x_discrete(name = \"Week\")+\n  theme_minimal()+\n  theme(legend.position = \"bottom\",\n        axis.title.y = element_blank(),\n        axis.text.x = element_text(size  = 10),\n        axis.text.y = element_text(size  = 10),\n        legend.key.width =  unit(2, \"cm\"))\n\nca &lt;- dt_tsir_district_2223 %&gt;%\n  group_by(district_reg) %&gt;%\n  group_modify(~.x %&gt;% mutate(time = seq(2022, 2024, length.out = 52))) %&gt;%\n  ungroup() %&gt;% select(district_reg,time,biweek_cases,predicted,population) %&gt;% \n  group_by(time) %&gt;% \n  summarise(cases = sum(biweek_cases)) %&gt;% \n  filter(time &gt; 2023) %&gt;% mutate(biweek = (1:nrow(.))*2) %&gt;% \n  ggplot(aes(x = biweek, y =cases)) + \n  geom_bar(stat = \"identity\")+\n  theme_minimal()+\n  scale_x_discrete(breaks = seq(2,52,by=2),expand = expansion(add = c(0, 0)))+\n  theme(axis.text.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank())\n\n\n\n\nCode\nup &lt;- (plot_spacer()+ca)+\n  plot_layout(widths = c(1,2))\n\ndown &lt;- (HAC_district + heatmap_r0 )+\n  plot_layout(widths = c(1,2))\n\nup /\n  down +\n  plot_layout(heights = c(1,3))\n\n\n\n\n\nHeatmap of bi-weekly beta by district. The dendrogram on the left side was the result of the clustering analysis\n\n\n\n\n\n\n6.2.4.3 Heatmap and dendrogram of R(t)\n\n\nCode\nrt_2023_district &lt;- data_result %&gt;% \n  filter(time &gt; 2023) %&gt;% \n  select(district,beta.time,beta.beta,s) %&gt;%\n  mutate(r_t = beta.beta*s) %&gt;% \n  select(district,r_t,beta.time) %&gt;% \n  pivot_wider(names_from = beta.time,values_from = r_t)\n\nrt_2023_district &lt;- column_to_rownames(rt_2023_district, var = \"district\")\n\nd2 &lt;- stats::dist(rt_2023_district)\ntreeC2 &lt;- hclust(d2, method=\"ward.D2\")\ndg2 &lt;- as.dendrogram(treeC2)\nddata_analytes2 &lt;- dendro_data(dg2, type = \"rectangle\")\n\nHAC_district_rt &lt;- ggplot() +\n  geom_segment(\n    data = segment(ddata_analytes2),\n    aes(x = x, y = y, xend = xend, yend = yend),\n    position = position_nudge(x = -0.5)\n  ) +\n  coord_flip(clip = \"off\") +\n  scale_y_reverse() +\n  scale_x_continuous(limits = c(0, 22), expand = c(0, 0)) +\n  theme_dendro() +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"mm\"))\n  geom_text(\n    data = label(ddata_analytes2),\n    aes(x = x, y = -1, label = label),\n    size = 3.5, color = \"#444444\", vjust = 2, angle = 0, hjust = 0\n  ) \n\ndisaaa2 &lt;- label(ddata_analytes2)[3] %&gt;% as.data.frame() %&gt;% pull(label) %&gt;% as.character()\n\nheatmap_rt &lt;- data_result %&gt;%\n  group_by(district) %&gt;%\n  group_modify(~.x %&gt;% mutate(rt = beta.beta*s,\n                              beta.time = beta.time*2)) %&gt;%\n  bind_rows() %&gt;% filter(time &gt; 2023) %&gt;%\n  ggplot(aes(x = as.factor(beta.time),\n             y = factor(district,levels = disaaa),\n             fill = rt)) +\n  geom_tile()+\n  # scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  scale_fill_gradient(low=\"yellow\", high=\"red\",\n                      name = \"R(t)\")+\n  scale_y_discrete(position = \"right\")+\n  scale_x_discrete(name = \"Week\")+\n  theme_minimal()+\n  theme(legend.position = \"bottom\",\n        axis.title.y = element_blank(),\n        axis.text.x = element_text(size  = 10),\n        axis.text.y = element_text(size  = 10))\n\nca &lt;- dt_tsir_district_2223 %&gt;%\n  group_by(district_reg) %&gt;%\n  group_modify(~.x %&gt;% mutate(time = seq(2022, 2024, length.out = 52))) %&gt;%\n  ungroup() %&gt;% select(district_reg,time,biweek_cases,predicted,population) %&gt;% \n  group_by(time) %&gt;% \n  summarise(cases = sum(biweek_cases)) %&gt;% \n  filter(time &gt; 2023) %&gt;% mutate(biweek = (1:nrow(.))*2) %&gt;% \n  ggplot(aes(x = biweek, y =cases)) + \n  geom_bar(stat = \"identity\")+\n  theme_minimal()+\n  scale_x_discrete(breaks = seq(2,52,by=2),expand = expansion(add = c(0, 0)))+\n  theme(axis.text.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank())\n\n\n\n\nCode\nup &lt;- (plot_spacer()+ca)+\n  plot_layout(widths = c(1,2))\n\ndown &lt;- (HAC_district_rt + heatmap_rt )+\n  plot_layout(widths = c(1,2))\n\nup /\n  down +\n  plot_layout(heights = c(1,3))\n\n\n\n\n\nHeatmap of bi-weekly rt by district. The dendrogram on the left side was the result of the clustering analysis\n\n\n\n\n\n\n\n6.2.5 Cluster analysis\n\n6.2.5.1 Clustering beta(t)\n\n\nCode\ncut &lt;- cutree(treeC, k=5) %&gt;% as.data.frame() %&gt;% \n  rownames_to_column(var = \"district\") \ncolnames(cut) &lt;- c(\"district\",\"cluster\")\n\ncut %&gt;% \n  mutate(district2 = stri_trans_general(cut$district, \"latin-ascii\") %&gt;%\n                    tolower() %&gt;%\n                    str_remove(\"district\") %&gt;%\n                    trimws(which = \"both\")) %&gt;% \n  # filter(district != \"Thủ Đức\") %&gt;% \nleft_join(qhtp, ., by = join_by(varname_2 == district2)) %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = factor(cluster)),show.legend = T)+\n  scale_fill_discrete(name = \"Cluster\",na.translate = FALSE)+\n  geom_sf_text(aes(label = nl_name_2),size=2.5)+\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFinding\n\n\n\nThere was a geographical relationship between districts within each cluster.\n\n\n\n\n6.2.5.2 Clustering R(t)\nBased on patterns of biweekly \\(R_t\\), I applied hierarchical clustering. Then, based on the dendrogram and I cut the tree to 5 branches and plotted the results on a map to explore potential geographical relationships between clusters.\n\n\nCode\ncut2 &lt;- cutree(treeC2, k=7) %&gt;% as.data.frame() %&gt;% \n  rownames_to_column(var = \"district\") \ncolnames(cut2) &lt;- c(\"district\",\"cluster\")\n\ncut2 %&gt;% \n  mutate(district2 = stri_trans_general(cut2$district, \"latin-ascii\") %&gt;%\n                    tolower() %&gt;%\n                    str_remove(\"district\") %&gt;%\n                    trimws(which = \"both\")) %&gt;% \n  # filter(district != \"Thủ Đức\") %&gt;% \nleft_join(qhtp, ., by = join_by(varname_2 == district2)) %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = factor(cluster)),show.legend = T)+\n  scale_fill_discrete(name = \"Cluster\",na.translate = FALSE)+\n  geom_sf_text(aes(label = nl_name_2),size=2.5)+\n  theme_void()",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City</span>"
    ]
  },
  {
    "objectID": "tsir_r0.html#discussion",
    "href": "tsir_r0.html#discussion",
    "title": "6  Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City",
    "section": "6.3 Discussion",
    "text": "6.3 Discussion\n\nThe patterns of \\(R_0\\) for each district correspond well with the incidence data.\nDistrict 1 has the highest median \\(R_0\\), despite having a relatively low number of reported cases. This can be explained by its high contact rate, due to its role as the central area of Ho Chi Minh City, with a large volume of travelers, numerous schools, hospitals, and public activities. Nearby districts, such as Districts 10 and 4, have the second-highest median \\(R_0\\) values. This reflects a geographical relationship among districts in the central area.\nThis analysis provides a clearer picture of the HFMD burden in Ho Chi Minh City, highlighting how transmission intensity is concentrated in areas with high population mobility and dense infrastructure.\nIn this analysis, I estimated two key epidemiological parameters—\\(R_0\\) and the herd immunity threshold (\\(HIT\\))—for HFMD transmission in 2023. This information can support decision-making in controlling and preventing HFMD outbreaks. For example, if an HFMD vaccine is implemented in Ho Chi Minh City, we can prioritize District 1 and nearby districts that share similar patterns identified through clustering analysis. Our target would be to achieve the herd immunity threshold in each district.\nFor the clustering analysis, we grouped districts with similar infectious patterns, the results show the geographical relationships. This approach can help guide more effective prevention and control strategies by targeting groups of districts rather than treating them individually.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City</span>"
    ]
  },
  {
    "objectID": "tsir_r0.html#reference",
    "href": "tsir_r0.html#reference",
    "title": "6  Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City",
    "section": "6.4 Reference",
    "text": "6.4 Reference\n\n\n\n\nDu, Zhicheng, Wangjian Zhang, Dingmei Zhang, Shicheng Yu, and Yuantao Hao. 2017. “Estimating the Basic Reproduction Rate of HFMD Using the Time Series SIR Model in Guangdong, China.” PLOS ONE 12 (7): e0179623. https://doi.org/10.1371/journal.pone.0179623.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Estimating the basic reproduction rate of HFMD using the time series SIR model in Ho Chi Minh City</span>"
    ]
  },
  {
    "objectID": "sero.html",
    "href": "sero.html",
    "title": "2  HFMD Seroprevalence",
    "section": "",
    "text": "3 Import data",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#serology-data",
    "href": "sero.html#serology-data",
    "title": "2  HFMD Seroprevalence",
    "section": "3.1 Serology data",
    "text": "3.1 Serology data\n\n\nCode\napr_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/4_2023.xlsx\")\naug_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/08_2023.xlsx\")\ndec_2022 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2022.xls\")\ndec_2023 &lt;- read_excel(\"D:/OUCRU/hfmd/data/12_2023.xlsx\")\n\nt423 &lt;- data.frame(apr_2023[-c(1,2),c(6,8,10:14)])\nt423$pos &lt;- replace(t423$...14,is.na(t423$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t423) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt423$age &lt;- as.numeric(t423$age)\nt423$col_time &lt;- rep(\"Apr 2023\",nrow(t423))\n\n\nt823 &lt;- data.frame(aug_2023[-c(1,2),c(6,8,9,14:17)])\nt823$pos &lt;- str_detect(t823$...17,regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t823) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt823$age &lt;- as.numeric(t823$age)\nt823$col_time &lt;- rep(\"Aug 2023\",nrow(t823))\n\nt1222 &lt;- data.frame(dec_2022[-c(1,2),c(6,8,10:14)])\nt1222$pos &lt;- replace(t1222$...14,is.na(t1222$...14),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1222) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1222$age &lt;- as.numeric(t1222$age)\nt1222$col_time &lt;- rep(\"Dec 2022\",nrow(t1222))\n\n\nt1223 &lt;- data.frame(dec_2023[-c(1,2),c(6,8,9,14:17)])\nt1223$pos &lt;- replace(t1223$...17,is.na(t1223$...17),0) %&gt;%\n  str_detect(regex(paste(2^(4:10), collapse = \"|\"))) %&gt;%\n  as.integer(as.logical())\ncolnames(t1223) &lt;- c(\"id\",\"age_gr\",\"age\",\"col_day\",\"col_month\",\"col_year\",\"neutralization\",\"pos\")\nt1223$age &lt;- as.numeric(t1223$age)\nt1223$col_time &lt;- rep(\"Dec 2023\",nrow(t1223))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#case",
    "href": "sero.html#case",
    "title": "2  HFMD Seroprevalence",
    "section": "3.2 Case",
    "text": "3.2 Case\n\n\nCode\ndf1 &lt;- read_excel(\"D:/OUCRU/hfmd/data/TCM_full.xlsx\", \n                  col_types = c(\"date\", \"numeric\", \"text\", \n                                \"text\", \"text\", \"date\", \"date\", \"date\", \n                                \"text\", \"text\", \"text\"))\ncolnames(df1) &lt;- c(\"dob\", \"age\", \"gender\", \"commune\", \"district\",\n                   \"reported_date\", \"onset_date\",\"adm_date\",\n                   \"medi_cen\",\"inout\",\"severity\")\ndf1$dob &lt;- df1$dob %&gt;% as_date()\ndf1$adm_date &lt;- df1$adm_date %&gt;% as_date()\n\ndf1$age1 &lt;- interval(df1$dob, df1$adm_date) / years(1)\ndf1$adm_week &lt;- as.Date(floor_date(df1$adm_date, \"week\"))\ndf1$district &lt;- df1$district %&gt;% str_replace_all(\n  c( \"Quận Gò vấp\"  = \"Quận Gò Vấp\"))\ndf1$district &lt;- df1$district %&gt;% \n  str_remove(\"Quận|Huyện|Thành phố\") %&gt;%\n  trimws(which = \"both\") \n\ndf_plot &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week) %&gt;% as.data.frame()\n\nts &lt;- ggplot()+\n  geom_bar(data = df_plot, aes(x = as.Date(adm_week), y = n),stat = \"identity\",\n           alpha = 0.5) +\n  labs(x = \"Admission week\",y = \"Cases\")+\n  geom_vline(xintercept = as.Date(\"2022-12-01\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2022-12-30\"),\n             alpha = 0.4,col = \"#0808cf\")+\n  geom_vline(xintercept = as.Date(\"2023-04-01\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-04-30\"),\n             alpha = 0.4,col = \"#ed097b\")+\n  geom_vline(xintercept = as.Date(\"2023-08-01\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-08-30\"),\n             alpha = 0.4,col = \"#ed6b00\")+\n  geom_vline(xintercept = as.Date(\"2023-12-01\"),\n             alpha = 0.4,col = \"#33516b\")+\n  geom_vline(xintercept = as.Date(\"2023-12-30\"),\n             alpha = 0.4,col = \"#33516b\")+\n  xlim(as.Date(\"2022-11-24\"),as.Date(\"2024-01-01\"))+theme_classic()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#fit-by-glm",
    "href": "sero.html#fit-by-glm",
    "title": "2  HFMD Seroprevalence",
    "section": "5.1 Fit by GLM",
    "text": "5.1 Fit by GLM\n\n\nCode\nm &lt;- 100\neps &lt;- 1\n\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5)+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence(%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",size = 3,\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.title= element_blank(),\n    legend.position = \"inside\",\n    legend.position.inside =  c(0.15,0.80),\n    legend.text = element_text(size = 15))\n\n\n\n\nCode\nplot1222 &lt;-  glm(pos ~ age, binomial, data = t1222) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1222, aes(x = age,y = m * pos + eps),shape = \"|\",\n             col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\nplot0423 &lt;-  glm(pos ~ age + I(age ^2), binomial, data = t423) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t423, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed097b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\nplot0823 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t823) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t823, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#ed6b00\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\nplot1223 &lt;-  glm(pos ~ age + I(age^2) + I(age^3), binomial, data = t1223) |&gt;\n  predict2() %&gt;% as.data.frame() %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  geom_point(data= t1223, aes(x = age, m * pos + eps),\n             shape = \"|\",\n             col = \"#33516b\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\nplot1222 + plot0423 + plot0823 + plot1223",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#fit-by-gam",
    "href": "sero.html#fit-by-gam",
    "title": "2  HFMD Seroprevalence",
    "section": "5.2 Fit by GAM",
    "text": "5.2 Fit by GAM\n\n\nCode\n## \npredictg &lt;- function(x, ci = .95, le = 512, m = 100) {\n  p &lt;- (1 - ci) / 2\n  \n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  \n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  \n  x |&gt;\n    predict(data.frame(age = ages), se.fit = TRUE) |&gt;\n    extract(c(\"fit\", \"se.fit\")) %&gt;%\n    c(age = list(ages), .) |&gt;\n    as_tibble() |&gt;\n    mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n    select(- se.fit)\n}\n\n## plot\n\nplot_gam &lt;- function(x,date){\n  \n  clo &lt;- case_when(date == 1222 ~ \"Dec 2022\",\n                   date == 423 ~ \"Apr 2023\",\n                   date == 823 ~ \"Aug 2023\",\n                   date == 1223 ~ \"Dec 2023\")\n  clo2 &lt;- case_when(date == 1222 ~ \"#0808cf\",\n                    date == 423 ~ \"#ed097b\",\n                    date == 823 ~ \"#ed6b00\",\n                    date == 1223 ~ \"#33516b\")\n  \n  dtaa &lt;- case_when(date == 1222 ~ t1222,\n                    date == 423 ~ t423,\n                    date == 823 ~ t823,\n                    date == 1223 ~ t1223)\n  \n  x %&gt;% as.data.frame() %&gt;%\n    ggplot(aes(x = age,y = fit))+\n    geom_line(aes(col = clo))+\n    geom_ribbon(aes(x = age,y = fit,\n                    ymin=lwr, ymax=upr),alpha = 0.5,fill = clo2)+\n    ylim(0,101)+\n    theme_minimal() +\n  scale_color_manual(name = \"Y series\",\n                     values = c(clo = clo2))+\n    labs(y = \"Seroprevalence (%)\")+\n    geom_point(data= dtaa, aes(x = age, m * pos + 1),\n               shape = \"|\",\n               col = clo2)+\n    theme(\n      axis.text.x = element_text(size = 15),\n      axis.text.y = element_text(size = 15),\n      legend.position = \"hide\",\n      legend.text = element_text(size = 15),\n      axis.title.x = element_text(size = 15),\n      axis.title.y = element_text(size = 15))+\n    annotate(\"text\", x = 3, y = 90, label = c(clo),size = 6) \n}  \n\ng1222 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %&gt;% \n  predictg() %&gt;% plot_gam(date = 1222)  \n\ng423 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %&gt;% \n  predictg() %&gt;% plot_gam(date = 423)  \n\ng823 &lt;-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t823) %&gt;% \n  predictg() %&gt;% plot_gam(date = 823)  \n\ng1223 &lt;-gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1223) %&gt;% \n  predictg() %&gt;% plot_gam(date = 1223)  \n\n\n\n\nCode\ng1222 | g423 | g823 | g1223",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#constrain-in-each-time-point",
    "href": "sero.html#constrain-in-each-time-point",
    "title": "2  HFMD Seroprevalence",
    "section": "5.3 Constrain in each time point",
    "text": "5.3 Constrain in each time point\n\n\nCode\n## Constrain function\ncontrain &lt;- function(data1,data2){\n  new_data &lt;- data.frame(age = data2$age,\n                         fit = rep(0,nrow(data2)),\n                         lwr = rep(0,nrow(data2)),\n                         up = rep(0,nrow(data2)))\n  for (i in 1:512){\n    if(data2$fit[i] &lt; data1$fit[i]){\n      new_data$fit[i] &lt;- data1$fit[i]\n      new_data$lwr[i] &lt;- data1$lwr[i]\n      new_data$upr[i] &lt;- data1$upr[i]\n    } else{\n      new_data$fit[i] &lt;- data2$fit[i]\n      new_data$lwr[i] &lt;- data2$lwr[i]\n      new_data$upr[i] &lt;- data2$upr[i]\n    }\n  }\n  \n  new_data$fit &lt;- gam(fit ~ s(age),data = new_data)$fitted.values\n  new_data$lwr &lt;- gam(lwr ~ s(age),data = new_data)$fitted.values\n  new_data$upr &lt;- gam(upr ~ s(age),data = new_data)$fitted.values\n  \n  return(new_data)\n}\n\ntes1222 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t1222) %&gt;% \n  predictg() \ntes0423 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n    family = \"binomial\",data = t423) %&gt;% \n  predictg() \ntes0823 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t823) %&gt;% \n  predictg() \ntes1223 &lt;- gam(pos~s(age,bs = \"bs\"),method = \"REML\",\n               family = \"binomial\",data = t1223) %&gt;% \n  predictg() \n\n## contrain \ncon423 &lt;- contrain(tes1222,tes0423)\ncon823 &lt;- contrain(con423,tes0823)\ncon1223 &lt;- contrain(con823,tes1223)\n\n\nc423 &lt;- con423 %&gt;% plot_gam(date = 423) \nc823 &lt;- con823 %&gt;% plot_gam(date = 823) \nc1223 &lt;- con1223 %&gt;% plot_gam(date = 1223) \n\n\n\n\nCode\ngam_contrain &lt;- g1222 | c423 | c823 | c1223\n\ngam_contrain/\n  ts",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#fit-with-scam-model",
    "href": "sero.html#fit-with-scam-model",
    "title": "2  HFMD Seroprevalence",
    "section": "6.1 Fit with SCAM model",
    "text": "6.1 Fit with SCAM model\nmpi is monotone increasing SCOP-splines: bs=“mpi”. To achieve monotone increasing smooths this reparameterizes the coefficients so that they form an increasing sequence.\nModel\n\n\nCode\ns1 &lt;- scam(pos~s(age)+s(col_date,bs = \"mpi\"),family=binomial,\n           mutate(atdf, across(col_date, as.numeric)))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#d-plot",
    "href": "sero.html#d-plot",
    "title": "2  HFMD Seroprevalence",
    "section": "6.2 3D plot",
    "text": "6.2 3D plot\n\n\nCode\nage_val &lt;- c(.1,1:14)\n\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date), le = 512)\n\nnew_data &lt;- expand.grid(age = age_val,\n                        col_date = as.numeric(collection_date_val))\n\nscamf &lt;- cbind(new_data,\n               fit = 100 * predict(s1, new_data,\"response\"))\n\nscamf$col_date &lt;- as.Date(scamf$col_date)\n\n\n\n\nCode\nplot_ly(scamf, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, 15),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 890, height = 1000, margin = m)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#d-plot-1",
    "href": "sero.html#d-plot-1",
    "title": "2  HFMD Seroprevalence",
    "section": "6.3 2-D plot",
    "text": "6.3 2-D plot\n\n\nCode\npredict2 &lt;- function(x, ci = .95, le = 512, m = 100){\n  p &lt;- (1 - ci) / 2\n  link_inv &lt;- x$family$linkinv\n  dataset &lt;- x$model\n  n &lt;- nrow(dataset) - length(x$coefficients)\n  age_range &lt;- range(dataset$age)\n  ages &lt;- seq(age_range[1], age_range[2], le = le)\n  date_range &lt;- range(dataset$col_date)\n  dates &lt;- seq(date_range[1], date_range[2], le = le)\n\nout &lt;- x |&gt;\n  predict(expand.grid(age = ages,\n                        col_date = dates), se.fit = TRUE) |&gt;\n  extract(c(\"fit\", \"se.fit\")) %&gt;%\n  c(expand.grid(age = ages,\n               date = dates),\n    .) |&gt;\n  as_tibble() |&gt;\n  mutate(lwr = m * link_inv(fit + qt(    p, n) * se.fit),\n           upr = m * link_inv(fit + qt(1 - p, n) * se.fit),\n           fit = m * link_inv(fit)) |&gt;\n  select(-se.fit)\n\nreturn(out)\n}\n\n\n\n\nCode\nout &lt;- predict2(s1)\n\nout$date &lt;- as.Date(out$date)\n\n\n\n\nCode\ns1222 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2022) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2022\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#0808cf\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2022\" = \"#0808cf\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2022\"),size = 6)\n\ns423 &lt;- out %&gt;% filter(month(date) == 4 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Apr 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed097b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Apr 2023\" = \"#ed097b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Apr 2023\"),size = 6)\n\ns823 &lt;- out %&gt;% filter(month(date) == 8 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Aug 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#ed6b00\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Aug 2023\" = \"#ed6b00\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Aug 2023\"),size = 6)\n\ns1223 &lt;- out %&gt;% filter(month(date) == 12 & year(date) == 2023) %&gt;%\n  ggplot(aes(x = age,y = fit))+\n  geom_line(aes(col = \"Dec 2023\"))+\n  geom_ribbon(aes(x = age,y = fit,\n                  ymin=lwr, ymax=upr),alpha = 0.5,fill = \"#33516b\")+\n  ylim(0,101)+\n  theme_minimal()+\n  scale_color_manual(name = \"Y series\",\n                     values = c(\"Dec 2023\" = \"#33516b\"))+\n  labs(y = \"Seroprevalence (%)\")+\n  # geom_point(data= t1222, aes(x = age, m * pos + 1),\n  #            shape = \"|\",\n  #            col = \"#0808cf\")+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 15),\n    legend.position = \"hide\",\n    legend.text = element_text(size = 15),\n    axis.title.x = element_text(size = 15),\n    axis.title.y = element_text(size = 15))+\n  annotate(\"text\", x = 3, y = 90, label = c(\"Dec 2023\"),size = 6)\n\n\n\n\nCode\nresult_sero &lt;- s1222 | s423 | s823 | s1223\n\nresult_sero/\n  ts",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#glm-with-pava-algorithm",
    "href": "sero.html#glm-with-pava-algorithm",
    "title": "2  HFMD Seroprevalence",
    "section": "6.4 GLM with PAVA algorithm",
    "text": "6.4 GLM with PAVA algorithm\nIn chapter 9 of 2012 serobook, there are an argument that following Friedman and Tibshirani (1984) and Mammen et al. (2001), Shkedy et al. (2003) suggested to estimate π(a) and λ(a) using local polynomials and smoothing splines and, if necessary, a posteriori apply the PAVA to isotonize the resulting estimate.\nWithout loss of generality they assume \\(\\pi(a_{1}) \\leq \\pi(a_{2}) \\leq ...\\leq \\pi(a_{i})\\). The PAVA states that if \\(\\pi(a_{i}) \\leq \\pi(a_{i - 1})\\) these values need to be “pooled.” In other words \\(\\hat{\\pi}(a_{i})\\) and \\(\\hat{\\pi}(a_{i-1})\\) are both replaced by\n\\[\\frac{\\hat{\\pi}(a_{i})+\\hat{\\pi}(a_{i-1})}{2}\\]\nIn my case, I fitted the glm to seropositive by age and time, then applied PAVA for fitted seroprevalence and 95% CI of each age group.\n\n   Model \n\nmod1 &lt;- glm(pos ~ age * col_date +\n              I(age ^ 2) * col_date, binomial,\n            mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\nage_val &lt;- c(.1, seq(1,15,0.5))\ncollection_date_val &lt;- seq(min(atdf$col_date),\n                           max(atdf$col_date))\n\nnew_data &lt;- expand.grid(age = age_val, col_date = as.numeric(collection_date_val))\n\nprdcts &lt;- cbind(new_data, fit = 100 * predict(mod1, new_data, \"response\")) |&gt; \n  as_tibble() |&gt; \n  arrange(col_date) |&gt; \n  mutate(across(col_date, as_date))\n\n\n\n6.4.1 Unconstrained plot\n\n\nCode\nplot_ly(prdcts, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(fit, length(age_val)),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\n6.4.2 Applying PAVA algorithm\n\n\nCode\nlibrary(Iso)\nout_pava &lt;- prdcts %&gt;% \n  mutate(time_numeric = as.numeric(col_date)) %&gt;% \n  group_by(age) %&gt;% \n  arrange(time_numeric) %&gt;%\n  mutate(\n    seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE)\n  )\n\n\n\n\nCode\nplot_ly(out_pava,x = ~sort(unique(as.Date(col_date))),\n          y = ~sort(unique(age)),\n          z = ~matrix(seroprev_monotonic, length(age_val)),\n          showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\nCode\n## boostrap \n\nbootstrap &lt;- function(data, new_data) {\n  # Step 1: resample\n  boot_data &lt;- data %&gt;% slice_sample(n = nrow(data), replace = TRUE)\n  \n  # Step 2: refit model\n  mod &lt;- glm(pos ~ age * col_date + I(age^2) * col_date, \n             family = binomial, \n             data = mutate(boot_data, col_date = as.numeric(col_date)))\n  \n  # Step 3: predict\n  preds &lt;- predict(mod, new_data, type = \"response\") * 100  # seroprev %\n  preds_df &lt;- bind_cols(new_data, fit = preds) |&gt; \n    mutate(col_date = as_date(col_date))\n  \n  # Step 4: apply PAVA per age\n  preds_df %&gt;%\n    mutate(time_numeric = as.numeric(col_date)) %&gt;%\n    group_by(age) %&gt;%\n    arrange(time_numeric) %&gt;%\n    summarise(\n      col_date = col_date,\n      seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE),\n      .groups = \"keep\"\n    )\n}\n\n\nB &lt;- 10  # number of bootstrap iterations\n\nset.seed(42)  # for reproducibility\nboot_results &lt;- map_dfr(1:B, ~bootstrap(atdf, new_data) %&gt;% \n                          mutate(bootstrap = .x))\n\npoint_est &lt;- out_pava %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    sp = mean(seroprev_monotonic)\n  )\n\nsp_ci &lt;- boot_results %&gt;% \n  mutate(col_time = case_when(\n    month(col_date) == 12 & year(col_date) == 2022 ~ \"Dec 2022\",\n    month(col_date) == 04 & year(col_date) == 2023 ~ \"Apr 2023\",\n    month(col_date) == 08 & year(col_date) == 2023 ~ \"Aug 2023\",\n    month(col_date) == 12 & year(col_date) == 2023 ~ \"Dec 2023\"\n  )) %&gt;% na.omit() %&gt;% \n  group_by(col_time,age) %&gt;%\n  summarise(\n    lower = quantile(seroprev_monotonic, 0.025),\n    upper = quantile(seroprev_monotonic, 0.975),\n    .groups = \"drop\"\n  )  \n\n# df.list &lt;- list(t1222,t423,t823,t1223)\n\nggplot() +\n  geom_line(data = point_est,aes(x = age, y = sp), color = \"blue\") +\n  geom_ribbon(data = sp_ci, aes(x = age,ymin = lower, ymax = upper), fill = \"blue\", alpha = 0.3) +\n  geom_point(aes(x = age, pos*100),\n             shape = \"|\",data = atdf)+\n  labs(y = \"Seroprevalence (%)\", x = \"Age (years)\") +\n  facet_wrap(~factor(col_time,levels = c(\"Dec 2022\",\"Apr 2023\",\"Aug 2023\",\"Dec 2023\")),\n             nrow = 1) +\n  scale_x_continuous(breaks = seq(0,15,by = 3), minor_breaks = NULL)+\n  scale_y_continuous(limits = c(0,100),breaks = seq(0,100,by = 25),\n                     labels = scales::label_percent(scale = 1), minor_breaks = NULL)+\n  theme_bw()+ \n  theme(axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        legend.position = \"none\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.y = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        strip.text.x = element_text(size = 18))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#gam-with-pava-algorithm",
    "href": "sero.html#gam-with-pava-algorithm",
    "title": "2  HFMD Seroprevalence",
    "section": "6.5 GAM with PAVA algorithm",
    "text": "6.5 GAM with PAVA algorithm\nModel\n\n\nCode\ngam1 &lt;- gam(pos ~ s(age, bs = \"bs\") + s(col_date, bs = \"bs\"), method = \"REML\",\n            family = \"binomial\",\n            data = mutate(atdf, across(col_date, as.numeric)))\n\n\n\n\nCode\ngam_pred &lt;- cbind(new_data, fit = 100 * predict(gam1, new_data, \"response\")) |&gt; \n  as_tibble() |&gt; \n  arrange(col_date) |&gt; \n  mutate(across(col_date, as_date))\n\nout &lt;- gam_pred %&gt;% \nmutate(time_numeric = as.numeric(col_date)) %&gt;% \n  group_by(age) %&gt;% \n  arrange(time_numeric) %&gt;%\n  mutate(\n    seroprev_monotonic = pava(fit, time_numeric, decreasing = FALSE)\n  ) \n  \nsp1222 &lt;- out %&gt;% filter(month(col_date) == 12 & year(col_date) == 2022) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Dec 2022\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\n\n\nsp0423 &lt;-out %&gt;% filter(month(col_date) == 04 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Apr 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\nsp0823 &lt;- out %&gt;% filter(month(col_date) == 08 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Aug 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\nsp1223 &lt;- out %&gt;% filter(month(col_date) == 12 & year(col_date) == 2023) %&gt;% \n  group_by(age) %&gt;% \n  summarise(\n    sp = mean(seroprev_monotonic),\n  ) %&gt;% ggplot(aes(x = age,y = sp))+\n  geom_line()+\n  ylim(c(0,100))+\n  labs(tag = \"Dec 2023\",y = \"Seroprevalence (%)\")+\n  theme_minimal()\n\n\n\n\nCode\nplot_ly(out, x = ~sort(unique(as.Date(col_date))),\n        y = ~sort(unique(age)),\n        z = ~matrix(seroprev_monotonic, length(age_val)),\n        showscale = F) %&gt;%\n  add_surface()%&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Collection date\"),\n    yaxis = list(title = \"Age\"),\n    zaxis = list(title = \"Seroprevalence\",range = c(0,100))\n  ))%&gt;% layout(autosize = F, width = 700, height = 1000, margin = m)\n\n\n\n\n\n\n\n\nCode\nsp1222 | sp0423 | sp0823 | sp1223",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "sero.html#unconstrained-fit",
    "href": "sero.html#unconstrained-fit",
    "title": "2  HFMD Seroprevalence",
    "section": "8.1 Unconstrained fit",
    "text": "8.1 Unconstrained fit\n\n\nCode\n# #| fig-width: 15\n# #| fig-height: 8\n# #| out-width: \"100%\"\n# glmfit &lt;- plot1222 | plot0423 | plot0823 | plot1223\n# \n# serum_dis/\n#   glmfit/\n#   ts\n# \n# ggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.svg\",dpi = 500,width = 15,height = 8,bg = \"white\")\n# ggsave(\"D:/OUCRU/hfmd/figure/EV71 present/uncon.png\",dpi = 500,width = 15,height = 8,bg = \"white\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HFMD Seroprevalence</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#figure-1-heat-map",
    "href": "fig_manu2.html#figure-1-heat-map",
    "title": "5  Manuscript figure",
    "section": "",
    "text": "5.1.1 Age distribution of raw data\n\n\nCode\nlibrary(fitdistrplus)\nfit1 &lt;- fitdist(fi_peak %&gt;% filter(age1 &gt;0) %&gt;% pull(age1),\"lnorm\")\nfit2 &lt;- fitdist(se_peak %&gt;% filter(age1 &gt;0) %&gt;% pull(age1),\"lnorm\")\n\nx_vals &lt;- seq(0, 7, le = 512)\n\n\nfit_1p &lt;- data.frame(peak = \"1st\",age = x_vals, density = dlnorm(x_vals, \n                                                       meanlog = fit1$estimate[1], \n                                                       sdlog = fit1$estimate[2]))\n\nfit_2p &lt;- data.frame(peak = \"2nd\",age = x_vals, density = dlnorm(x_vals, \n                                                                 meanlog = fit2$estimate[1], \n                                                                 sdlog = fit2$estimate[2]))\n\n\ndata %&gt;% \n  ggplot(aes(age))+\n  geom_histogram(binwidth = 0.5,\n                 color = \"white\",      \n                 fill = \"black\",\n                 alpha = .5)+\n  geom_line(data = rbind(fit_1p,fit_2p),aes(x = age,y = density*10000))+\n  facet_wrap(~peak)+\n  scale_x_continuous(breaks = seq(0,7,by=1),limits = c(0,7))+\n  theme_minimal()+\n  scale_y_continuous(\n    name = \"Cases count\",\n    sec.axis = sec_axis( trans=~./10000, name=\"Density\")\n  ) \n\n\n\n\n\n\n\n\n\nCode\ndetach(\"package:fitdistrplus\", unload = TRUE)\ndetach(\"package:MASS\", unload = TRUE)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#next-step-analysis",
    "href": "fig_manu2.html#next-step-analysis",
    "title": "5  Manuscript figure",
    "section": "5.5 Next step analysis",
    "text": "5.5 Next step analysis\n\n\nCode\nbirth_23 &lt;- model$df %&gt;% \n  mutate(time2 = sprintf(\"%04d-W%02d-1\", year, week),\n         time2 = ISOweek2date(time2)) %&gt;% \n  filter(year(time2) &gt;= 2023) %&gt;% \n  ggplot() +\n  geom_line(aes(x = time2,y = fit),col = \"blue\")+\n  geom_ribbon(aes(x = time2,ymin = lwr, ymax = upr), fill = \"royalblue\",alpha = 0.4)+\n  scale_x_date(date_breaks = \"1 month\",\n               date_labels = \"%b\",\n               limits = as.Date(c(\"2023-01-01\",\"2023-12-25\")),\n               expand = c(0, 0))+\n  labs(y = \"Number of births\",\n       x = \"Month\",\n       tag = \"E\")+\n  theme_minimal()+\n  theme(\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18))\n\n\n\n5.5.1 Age distribution calculated from births data\n\n\nCode\nbirth_matrix &lt;- model$df %&gt;%\n  bind_rows(\n    model$df %&gt;%\n      filter(year == 2020, week == 52) %&gt;%\n      mutate(week = 53,\n             fit = 1945.271)\n  ) %&gt;%\n  arrange(year, week) %&gt;% \n  mutate(birth = sprintf(\"%04d-W%02d-1\", year, week),\n         birth = ISOweek2date(birth))\n\ndate_consider &lt;- birth_matrix %&gt;% \n  filter(year(birth) == 2023) %&gt;% \n  pull(birth)\n\n\nage_dis_fn &lt;- data.frame()\n\nfor (i in 1:length(date_consider)){\n  age_dis_week &lt;- birth_matrix %&gt;% \n    mutate(age = difftime(date_consider[i],birth, units = \"weeks\") %&gt;% \n             as.numeric(),\n           age = age*(1/52),\n           date = date_consider[i]) %&gt;% \n    # filter(age &gt; 0) %&gt;% \n    select(-birth) \n\n  age_dis_fn &lt;- rbind(age_dis_fn,age_dis_week)\n    \n}\n\n\nggplot(age_dis_fn, \n       aes(x=date, y=age, fill = fit)) +\n  theme_minimal()+\n  geom_raster()+\n  scale_y_reverse(name = \"Age (years)\",lim= rev(c(0,6)),breaks = seq(0,6))+\n  scale_x_date(date_breaks = \"1 month\",date_labels = \"%b\")+\n  labs(\n    # tag = \"C\",\n    fill = \"Number of births\")+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\"),\n         color = \"none\") \n\n\n\n\n\n\n\n\n\n\n\n5.5.2 Expected CH1 hospitalizations\nI filter number of children admitted in CH1 from HCDC data for the numerator, and population of each age and each district from 2019 census data combined with birth data from hep B registry data (age 0) for the denominator.\n\\[\nP(CH1 \\ hospitalization_{[a,d]}) = \\frac{cases_{[a,d]}}{population_{[a,d]}}\n\\]\nThen I fitted the GAM for \\(P(CH1 \\ hospitalization_{[a,d]})\\) as a function of age for each district to predict the continuous age from figure in 4.4.2.\n\n\nCode\nc_ad &lt;- df1 %&gt;%\n  filter(year(adm_date) == 2023 &\n           medi_cen %in% c(\"Bệnh viện Nhi đồng 1\",\n                           \"Bênh viện Nhi Đồng 1\",\n                           \"Bệnh viện Nhi Đồng 1\")) %&gt;%\n  mutate(district2 = district %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  select(age,district2) %&gt;%\n  group_by(district2,age) %&gt;%\n  filter(age &lt; 17) %&gt;%\n  count() %&gt;%\n  ungroup()\n\n\nN_ad &lt;- census2019 |&gt;\n  filter(province == \"Thành phố Hồ Chí Minh\") |&gt;\n  mutate(district = district %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  group_by(district,age) |&gt;\n  summarise(n = sum(n),.groups = \"drop\") |&gt;\n  mutate(across(age, ~ stringr::str_remove(.x, \" tuổi| \\\\+\") |&gt; as.integer())) |&gt;\n  arrange(age) |&gt;\n  filter(age &lt; 17)\n\nbirth_2019 &lt;- count_dangky_week %&gt;%\n  filter(birth_year == 2019) %&gt;%\n  mutate(district = district_reg %&gt;%\n           str_replace_all(\n             c(\"Quận 2\" = \"Thủ Đức\",\n               \"Quận 9\" = \"Thủ Đức\")) %&gt;%\n           str_remove(\"Quận|Huyện\") %&gt;%\n           trimws(which = \"both\") %&gt;%\n           stri_trans_general(\"latin-ascii\") %&gt;%\n           tolower()) %&gt;%\n  filter(district %in% unique(N_ad$district)) %&gt;%\n  group_by(district) %&gt;%\n  summarise(n=sum(n),.groups = \"drop\") %&gt;%\n  mutate(age = 0)\n\nprob_a_d &lt;- left_join(c_ad,rbind(birth_2019,N_ad),\n          by = join_by(age == age,\n                       district2 == district)) %&gt;%\n  mutate(prob_hos=n.x/n.y)\n\n# ggplot(prob_a_d, aes(x = age,y=prob_hos,color = district2))+\n#   geom_line()\n\n\n\n\nCode\nage_new &lt;- age_dis_fn %&gt;% filter(date == range(date)[2]) %&gt;%\n  select(age,fit) %&gt;% pull(age)\n\npred_prob &lt;- prob_a_d %&gt;%\n  group_by(district2) %&gt;%\n  group_modify(~ {\n    mod &lt;- gam(prob_hos ~ s(age,bs = \"bs\"), data = .x, method = \"REML\")\n    pred &lt;- predict(mod, newdata = tibble(age = age_new), type = \"response\")\n    tibble(age = age_new, fit = pred)\n  }) %&gt;%\n  ungroup()\n\nggplot()+\n  geom_line(data = pred_prob, aes(x = age,y = fit))+\n  geom_point(data = prob_a_d,aes(x = age,y = prob_hos))+\n  labs(y = \"Hospitalizations probability\")+\n  facet_wrap(~district2)+\n  theme_bw()+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18)) \n\n\n\n\n\nThe points show the original hospitalization probability, and the lines show fitted value of GAM\n\n\n\n\nThen I used predicted hospitalization probability multiply the age distribution at the end 2023 estimated from section 4.4.2 to calculate the expected age distribution caught by CH1.\n\n\nCode\nexp_age_23 &lt;- age_dis_fn %&gt;% \n  filter(date == range(date)[2]) %&gt;%\n  select(age,fit) %&gt;%\n  right_join(.,pred_prob,by = join_by(age)) %&gt;%\n  arrange(district2) %&gt;%\n  mutate(expected_admission = fit.x*fit.y) \n\nexp_age_23 %&gt;%\n  ggplot(aes(x = age,y = expected_admission))+\n  geom_line()+\n  scale_x_continuous(limits = c(0,7),\n                     breaks = seq(0,7,by=1))+\n  labs(y = \"Expected CH1 admission\")+\n  facet_wrap(~district2)+\n  theme_bw()+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))\n\n\n\n\n\nExpected age distribution caught by CH1 at the end 2023\n\n\n\n\n\n\n5.5.3 Expected age structure of children caught by CH1\nIn this step, I filtered district in catchment area estimated in 4.2.1 and sum it by age, this is \\(N_a\\).\n\n\nCode\nexpected_age_cm &lt;- exp_age_23 %&gt;% \n  # filter(district2 %in% district_consider) %&gt;% \n  group_by(age) %&gt;% \n  summarise(n = sum(expected_admission)) \n\nexpected_age_cm %&gt;% \n  ggplot(aes(x = age,y = n))+\n  geom_line()+\n  theme_minimal()+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))\n\n\n\n\n\n\n\n\n\n\n\n5.5.4 Expected incidence\nThen applied constrained algorithm to estimated age profile and used the formula to calculated expected incidence\n\\[\n(seroprevalence_{t,a}-seroprevalence_{t - \\Delta t,a- \\Delta t}) \\times N_a\n\\]\n\n\nCode\nage_pro5 &lt;- age_profile_constrained_cohort2(hfmd_cm,age_values = expected_age_cm$age)\n\nattack_rates2 &lt;- map2(head(age_pro5, -1),\n                      age_pro5[-1],\n                     ~ left_join(na.exclude(.x), na.exclude(.y), \"cohort\")|&gt;\n                       mutate(sp_gap = (fit.y - fit.x)))\n\nexp_in_ch1 &lt;- map(attack_rates2, ~ left_join(.x,expected_age_cm, by = join_by(cohort ==age))) %&gt;% \n  bind_rows(.id = \"id\") %&gt;% \n  mutate(exp_in = sp_gap*n) %&gt;% \n  ggplot()+\n  geom_line(aes(x = cohort,y = exp_in))+\n  geom_histogram(data = dat %&gt;% bind_rows(.id = \"id\") %&gt;% filter(cohort &gt;0),\n                 aes(cohort),binwidth = 0.5,\n                 color = \"white\",fill = \"black\",alpha = 0.2)+\n  facet_wrap(~factor(id,labels = c(\"12/2022 - 4/2023\",\n                                   \"4/2023 - 8/2023\",\n                                   \"8/2023 - 12/2023\")))+\n  labs(y = \"Expected incidence\",x = \"Age (years)\",tag = \"A\")+\n  theme_bw()+\n  theme(\n    axis.text.x = element_text(size = 15),\n    axis.text.y = element_text(size = 18),\n    legend.text = element_text(size = 18),\n    plot.tag = element_text(face = \"bold\", size = 18),\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18),\n    legend.title = element_text(size = 18),\n    strip.text = element_text(size = 18),\n    panel.grid.minor.x = element_blank())\n\n\n\n\n5.5.5 Figure 1\n\n\nCode\nwidth_ratio &lt;- c(2.5, 1)\n\nrow0 &lt;- (exp_in_ch1 | plot_spacer())+\n  plot_layout(widths = width_ratio)\n\n\nrow1 &lt;- (age_profile_sp_cm | plot_spacer())+\n  plot_layout(widths = width_ratio)\n\n\nrow2 &lt;-  ((ts/hm2) | (plot_spacer()/\n                       wrap_elements(full = ad  + \n                                       theme(plot.margin = margin(-15,0, 7, 0)))))+\n  plot_layout(widths = width_ratio)\n\nrow3 &lt;- (birth_23 | plot_spacer())+\n  plot_layout(widths = width_ratio)\n\n(row0 /row1 /row2 / row3) +\n  plot_layout(heights = c(1,1,3,1))\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/fig2_3.svg\",\n       width = 15,height = 15,dpi = 500)\n\nggsave(\"./fig_manuscript/fig2_3.png\",\n       width = 15,height = 15,dpi = 500)\n\n\n\n\n\n\nZinszer, Kate, Katia Charland, Ruth Kigozi, Grant Dorsey, Moses R Kamya, and David L Buckeridge. 2014. “Determining Health-Care Facility Catchment Areas in Uganda Using Data on Malaria-Related Visits.” Bulletin of the World Health Organization 92 (3): 178–86. https://doi.org/10.2471/BLT.13.125260.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#expected-age-structure-of-children-catched-by-ch1",
    "href": "fig_manu2.html#expected-age-structure-of-children-catched-by-ch1",
    "title": "4  Manuscript figure",
    "section": "4.5 Expected age structure of children catched by CH1",
    "text": "4.5 Expected age structure of children catched by CH1\n\n\nCode\nexpected_age_cm &lt;- exp_age_23 %&gt;% \n  filter(district2 %in% district_consider) %&gt;% \n  group_by(age) %&gt;% \n  summarise(n = sum(expected_admission)) \n\nexpected_age_cm %&gt;% \n  ggplot(aes(x = age,y = n))+\n  geom_line()+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))\n\n\n\n\n\n\n\n\n\n\n\n\n\nZinszer, Kate, Katia Charland, Ruth Kigozi, Grant Dorsey, Moses R Kamya, and David L Buckeridge. 2014. “Determining Health-Care Facility Catchment Areas in Uganda Using Data on Malaria-Related Visits.” Bulletin of the World Health Organization 92 (3): 178–86. https://doi.org/10.2471/BLT.13.125260.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "fig_manu2.html#supplementation-plot",
    "href": "fig_manu2.html#supplementation-plot",
    "title": "5  Manuscript figure",
    "section": "5.4 Supplementation plot",
    "text": "5.4 Supplementation plot\n\n5.4.1 Attack rate\n\n\nCode\npop &lt;- readRDS(\"D:/OUCRU/hfmd/data/count_dangky.rds\")\npop_a &lt;- pop %&gt;% group_by(birth_month, birth_year) %&gt;%\n  summarise(n=sum(n)) %&gt;% arrange(birth_year)\n\ncolnames(pop_a) &lt;- c(\"m\",\"y\",\"n\")\n\npop_a$dob &lt;- str_c(pop_a$y,pop_a$m,sep = \"-\") %&gt;% ym()\n\ntime1 = df1$adm_date\nage1 =  df1$age1\ndob = pop_a$dob\nn = pop_a$n\n\ndft &lt;- data.frame(time1,age1) %&gt;%\n  filter(!is.na(time1) & !is.na(age1)) %&gt;%\n  arrange(time1)\n\n\ndft$agr=as.factor(cut(dft$age1, c(0,0.5,\n                                  1,1.5,\n                                  2,2.5,\n                                  3,3.5,\n                                  4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (dft$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                     \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                     \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                     \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nout_total &lt;- data.frame()\n\nhfmd23 &lt;- df1 %&gt;% filter(year(adm_week) == \"2023\") %&gt;%\n  filter(!is.na(adm_week) ) %&gt;%\n  count(adm_week)\n\nhfmd23$week &lt;- 1:length(hfmd23$adm_week)\nhfmd23$week &lt;- ifelse(hfmd23$week == 53,52,hfmd23$week)\n\nhfmd23$n2 &lt;- ifelse(hfmd23$week == 52, sum(hfmd23$n[hfmd23$week==52]), hfmd23$n)\n\nhfmd23 &lt;- hfmd23[-53,]\n\ndateaa &lt;- hfmd23$adm_week+3\n\nsus_pop &lt;- data.frame(dob = dob, n = n)\n\nfor (i in 1:52){\n  sus_pop$age &lt;- interval(sus_pop$dob, dateaa[i]) / years(1)\n  \n  sus_pop$agr=as.factor(cut(sus_pop$age, c(0,0.5,\n                                           1,1.5,\n                                           2,2.5,\n                                           3,3.5,\n                                           4,4.5,5,5.5,6,100), right=TRUE ))\n  levels (sus_pop$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                           \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                           \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                           \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n  outcum &lt;- sus_pop %&gt;% group_by(agr) %&gt;%\n    summarise(n = sum(n)) %&gt;%\n    as.data.frame()\n  outcum$date &lt;- rep(dateaa[i],nrow(outcum))\n  out_total &lt;- rbind(out_total,outcum)\n}\n\ndeno &lt;- out_total %&gt;%\n  pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\ncasss &lt;- wwww$wdat\n\ncasss$agr=as.factor(cut(casss$age, c(0,0.5,1,1.5,2,2.5,\n                                     3,3.5,4,4.5,5,5.5,6,100), right=TRUE ))\nlevels (casss$agr) = c(\"0-0.5\", \"0.5-1\", \"1.0-1.5\",\n                       \"1.5-2\",\"2-2.5\",\"2.5-3\",\n                       \"3-3.5\",\"3.5-4\",\"4-4.5\",\n                       \"4.5-5\",\"5-5.5\",\"5.5-6\",\"6+\")\n\ncasss &lt;- casss %&gt;% group_by(date,agr) %&gt;%\n  count() %&gt;% pivot_wider(names_from = agr, values_from = n) %&gt;% as.data.frame()\n\n\ncasss &lt;- casss[,-ncol(casss)]\ncasss &lt;- replace(casss,is.na(casss), 0)\ncasss &lt;- casss[,c(1:10,13,11,14,12)]\n\natkr &lt;- data.frame()\natkr &lt;- rbind(atkr,as.numeric(casss[1,-1])/as.numeric(deno[1,-1]))\nfor (i in 1:51){\n  new &lt;- as.numeric(casss[i+1,-1])/(as.numeric(deno[i+1,-1]) - as.numeric(casss[i,-1]))\n  atkr &lt;- rbind(atkr,new)\n}\natkr &lt;- cbind(deno$date,atkr)\n\ncolnames(atkr) &lt;- colnames(deno)\natkr &lt;- replace(atkr,is.na(atkr), 0)\n\n\n\natk_plot &lt;- atkr %&gt;% pivot_longer(cols=colnames(atkr)[-1],\n                                  names_to= 'agr',\n                                  values_to='atk') %&gt;% as.data.frame()\n\natk &lt;- ggplot(atk_plot, aes(x=as.character(date), y=agr, fill = atk)) +\n  geom_raster()+\n  scale_fill_paletteer_c(\"grDevices::Inferno\",\n                         breaks = c(0.01, 0.02, 0.03, 0.04, 0.05))+\n  scale_y_discrete(limits=rev)+\n  scale_x_discrete(name = \"Admission week\",labels = leb_month)+\n  theme_minimal()+\n  labs(tag = \"B\",fill = \"Attack rate\",y = \"Age group (years)\")+\n  theme(axis.title.y = element_text(size = 18),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        plot.tag = element_text(face = \"bold\", size = 18),\n        axis.title.x = element_text(size = 18),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 18))+ \n  guides(fill=guide_colourbar(barwidth=20,label.position=\"bottom\")) \n\nts/\n  atk\n\n\n\n\n\n\n\n\n\n\n\n5.4.2 births seasonality\n\n\nCode\nb_ss\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"./fig_manuscript/birth_seasonality.svg\",\n       width = 15,height = 9,dpi = 500)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manuscript figure</span>"
    ]
  },
  {
    "objectID": "viro_des.html",
    "href": "viro_des.html",
    "title": "4  Virology data description",
    "section": "",
    "text": "4.1 Demographic\nCode\nviro2 &lt;- viro_df %&gt;% \n  mutate(city = City %&gt;% \n           trimws(which = \"both\") %&gt;% \n           stri_trans_general(\"latin-ascii\") %&gt;% \n           tolower(),\n         sero_gr = case_when(\n           SeroGroup1 == \"ENT\" ~ \"EV\",\n           SeroGroup1 != \"ENT\" ~ SeroGroup1\n         ),\n         admission_date = as.Date(DateAdmission),\n         adm_month = month(admission_date),\n         age_adm = interval(DateBirth, admission_date) / years(1)) %&gt;% \n  select(city,sero_gr,admission_date,adm_month,age_adm,DateBirth)\n\nviro2$city &lt;- factor(viro2$city,\n                         levels = c(\"tp hcm\",viro2$city[!viro2$city == \"tp hcm\"] %&gt;% \n                                      unique()))\n\nviro2 %&gt;% \n  tbl_summary(by=sero_gr,\n              include = c(city,sero_gr))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nCV-A10\nN = 11\nCV-A6\nN = 91\nEV\nN = 161\nEV-A71\nN = 2981\nneg\nN = 361\nOther\nN = 11\n\n\n\n\ncity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    tp hcm\n0 (0%)\n4 (44%)\n4 (25%)\n110 (37%)\n18 (50%)\n1 (100%)\n\n\n    long an\n0 (0%)\n0 (0%)\n0 (0%)\n25 (8.4%)\n0 (0%)\n0 (0%)\n\n\n    hau giang\n0 (0%)\n0 (0%)\n2 (13%)\n19 (6.4%)\n2 (5.6%)\n0 (0%)\n\n\n    kien giang\n0 (0%)\n0 (0%)\n1 (6.3%)\n2 (0.7%)\n2 (5.6%)\n0 (0%)\n\n\n    binh duong\n0 (0%)\n0 (0%)\n0 (0%)\n13 (4.4%)\n2 (5.6%)\n0 (0%)\n\n\n    dong nai\n0 (0%)\n0 (0%)\n0 (0%)\n9 (3.0%)\n0 (0%)\n0 (0%)\n\n\n    dong thap\n1 (100%)\n0 (0%)\n0 (0%)\n13 (4.4%)\n1 (2.8%)\n0 (0%)\n\n\n    an giang\n0 (0%)\n0 (0%)\n3 (19%)\n14 (4.7%)\n2 (5.6%)\n0 (0%)\n\n\n    khanh hoa\n0 (0%)\n0 (0%)\n0 (0%)\n0 (0%)\n1 (2.8%)\n0 (0%)\n\n\n    tay ninh\n0 (0%)\n1 (11%)\n2 (13%)\n13 (4.4%)\n1 (2.8%)\n0 (0%)\n\n\n    tien giang\n0 (0%)\n1 (11%)\n2 (13%)\n16 (5.4%)\n5 (14%)\n0 (0%)\n\n\n    ba ria\n0 (0%)\n1 (11%)\n0 (0%)\n1 (0.3%)\n0 (0%)\n0 (0%)\n\n\n    binh thuan\n0 (0%)\n1 (11%)\n0 (0%)\n3 (1.0%)\n0 (0%)\n0 (0%)\n\n\n    ca mau\n0 (0%)\n0 (0%)\n2 (13%)\n13 (4.4%)\n0 (0%)\n0 (0%)\n\n\n    tra vinh\n0 (0%)\n0 (0%)\n0 (0%)\n9 (3.0%)\n1 (2.8%)\n0 (0%)\n\n\n    can tho\n0 (0%)\n0 (0%)\n0 (0%)\n22 (7.4%)\n0 (0%)\n0 (0%)\n\n\n    binh phuoc\n0 (0%)\n0 (0%)\n0 (0%)\n1 (0.3%)\n0 (0%)\n0 (0%)\n\n\n    bac lieu\n0 (0%)\n0 (0%)\n0 (0%)\n3 (1.0%)\n1 (2.8%)\n0 (0%)\n\n\n    vinh long\n0 (0%)\n0 (0%)\n0 (0%)\n6 (2.0%)\n0 (0%)\n0 (0%)\n\n\n    dak lak\n0 (0%)\n1 (11%)\n0 (0%)\n0 (0%)\n0 (0%)\n0 (0%)\n\n\n    soc trang\n0 (0%)\n0 (0%)\n0 (0%)\n3 (1.0%)\n0 (0%)\n0 (0%)\n\n\n    thua thien hue\n0 (0%)\n0 (0%)\n0 (0%)\n1 (0.3%)\n0 (0%)\n0 (0%)\n\n\n    ben tre\n0 (0%)\n0 (0%)\n0 (0%)\n2 (0.7%)\n0 (0%)\n0 (0%)\n\n\n\n1 n (%)\nCode\nlink &lt;- \"https://data.opendevelopmentmekong.net/dataset/999c96d8-fae0-4b82-9a2b-e481f6f50e12/resource/2818c2c5-e9c3-440b-a9b8-3029d7298065/download/diaphantinhenglish.geojson?fbclid=IwAR1coUVLkuEoJRsgaH81q6ocz1nVeGBirqpKRBN8WWxXQIJREUL1buFi1eE\"\n\nvn_spatial &lt;- sf::st_read(link) %&gt;% mutate(\n  city = \n    case_when(\n      Name == \"TP. Ho Chi Minh\" ~ \"tp hcm\",\n      Name != \"TP. Ho Chi Minh\" ~ Name\n    ) %&gt;% \n    trimws(which = \"both\") %&gt;% \n    stri_trans_general(\"latin-ascii\") %&gt;% \n    tolower()\n)\n\nviro2 %&gt;% \n  filter(sero_gr == \"EV-A71\") %&gt;% \n  group_by(city,sero_gr) %&gt;% \n  count() %&gt;% \n  ungroup() %&gt;% \n  full_join(.,vn_spatial, by = join_by(city)) %&gt;% \n  ggplot() + \n  geom_sf(aes(fill = n,geometry = geometry))+\n  paletteer::scale_fill_paletteer_c(\"ggthemes::Classic Red\",\n                                    na.value=\"white\",\n                                    name = \"Numbers of EV-A71 samples\")+\n  theme_void()+\n  theme(legend.position=\"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Virology data description</span>"
    ]
  },
  {
    "objectID": "viro_des.html#time",
    "href": "viro_des.html#time",
    "title": "4  Virology data description",
    "section": "4.2 Time",
    "text": "4.2 Time\n\n\nCode\nviro2 %&gt;% \n  mutate(adm_month = as.Date(floor_date(admission_date, \"month\"))) %&gt;%\n  group_by(adm_month,sero_gr) %&gt;% \n  count() %&gt;% \n  ggplot(aes(x = adm_month,y=n,fill = sero_gr))+\n  geom_col()+\n  scale_x_date(date_labels = \"%b\",\n               date_breaks = \"1 month\")+\n  labs(fill = \"Sero group\", y = \"Number of samples\",x = \"Month of admission\")+\n  theme_minimal()+\n  theme(legend.position=\"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Virology data description</span>"
    ]
  },
  {
    "objectID": "viro_des.html#age",
    "href": "viro_des.html#age",
    "title": "4  Virology data description",
    "section": "4.3 Age",
    "text": "4.3 Age\n\n\nCode\nviro2 %&gt;%\n  mutate(adm_month = as.Date(floor_date(admission_date, \"month\")),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;%\n  group_by(age_bin, sero_gr) %&gt;%\n  summarise(n = n(), .groups = \"drop_last\") %&gt;%\n  mutate(perc = n / sum(n)) %&gt;%\n  ungroup() %&gt;%\n  complete(age_bin,sero_gr,fill = list(perc=0)) %&gt;% \n  ggplot(aes(x = age_bin, y = perc, fill = sero_gr)) +\n  geom_col(position = \"stack\", color = \"black\") +\n  ggsci::scale_fill_jco() +\n  labs(x = \"Age (years)\", y = \"Percentage (%)\", fill = \"Serotype\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Virology data description</span>"
    ]
  },
  {
    "objectID": "viro_des.html#age-and-time",
    "href": "viro_des.html#age-and-time",
    "title": "4  Virology data description",
    "section": "4.4 Age and time",
    "text": "4.4 Age and time\n\n4.4.1 EV-A71 positive samples as funtion of age and time\n\n\nCode\nviro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\") %&gt;%\n  select(adm_month2,age_adm) %&gt;%\n  as.data.frame() %&gt;% \n  ggplot(aes(x=adm_month2, y = age_adm)) +\n  stat_density(\n    aes(fill = after_stat(count)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",breaks = seq(0,12,by = 1))+\n  labs(fill = \"Number of EV-A71 samples\",x = \"Month of admission\")+\n  theme(legend.position = \"bottom\",\n        legend.key.width =  unit(1, \"cm\"))\n\n\n\n\n\n\n\n\n\n\n\n4.4.2 age distribution EV-A71 positive samples as funtion of age and time\n\n\nCode\nviro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\" & month(adm_month2) &gt;= 6) %&gt;%\n  select(adm_month2,age_adm) %&gt;%\n  as.data.frame() %&gt;% \n  ggplot(aes(x=adm_month2, y = age_adm)) +\n  stat_density(\n    aes(fill = after_stat(density)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",\n                  limits = c(0,6),\n                  breaks = seq(0,6,by = 1))+\n  labs(fill = \"Density\",x = \"Month of admission\")+\n  theme(legend.position = \"bottom\",\n        legend.key.width =  unit(1, \"cm\"))\n\n\n\n\n\n\n\n\n\nI limited the age from 0-6 years old\n\n\n4.4.3 Select from May-Aug\nThis age profile coresspond with 2 sucessive collection time points in the 2nd figure in Fig1A\n\n\nCode\nviro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\" & month(adm_month2) &lt;= 8) %&gt;%\n  select(adm_month2,age_adm) %&gt;%\n  as.data.frame() %&gt;% \n  ggplot(aes(x=adm_month2, y = age_adm)) +\n  stat_density(\n    aes(fill = after_stat(count)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",\n                  limits = c(0,6),\n                  breaks = seq(0,6,by = 1))+\n  labs(fill = \"Number of EV-A71 samples\",x = \"Month of admission\")+\n  theme(legend.position = \"bottom\",\n        legend.key.width =  unit(1, \"cm\"))\n\n\n\n\n\n\n\n\n\nRaw data\n\n\nCode\ncount &lt;- viro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\" & month(adm_month2) &lt;= 8) %&gt;% \n  ggplot(aes(age_adm))+\n  geom_histogram(binwidth = 0.5,\n                 color = \"white\",fill = \"black\",alpha = 0.5)+\n  scale_x_continuous(breaks = seq(0,12,by = 1),\n                     limits = c(0,12))+\n  labs(x = \"Age(years)\",y = \"Number of EV-A71 samples\")+\n  theme_minimal()\n\n\nper &lt;- viro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;%\n  filter(month(adm_month2) &lt;= 8) %&gt;%\n  group_by(age_bin,sero_gr) %&gt;%\n  summarise(n = n(), .groups = \"drop_last\") %&gt;%\n  mutate(perc = n / sum(n)) %&gt;%\n  ungroup() %&gt;% \n  complete(age_bin,sero_gr,fill = list(perc =0)) %&gt;%\n  filter(sero_gr == \"EV-A71\") %&gt;% \n  ggplot(aes(x = age_bin, y = perc))+\n  geom_col()+\n  scale_y_continuous(name = \"Percentage of EV-A71 samples\",\n                     labels = scales::label_percent(scale = 100))+\n  labs(x = \"Age group\")+\n  theme_minimal()+\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1)\n  )\n\nlibrary(patchwork)\n\ncount/\n  per\n\n\n\n\n\n\n\n\n\n\n\n4.4.4 Select from Aug-Dec\nThis age profile coresspond with 2 sucessive collection time points in the 3rd figure in Fig1A\n\n\nCode\nviro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\" & month(adm_month2) &gt;= 8) %&gt;%\n  select(adm_month2,age_adm) %&gt;%\n  as.data.frame() %&gt;% \n  ggplot(aes(x=adm_month2, y = age_adm)) +\n  stat_density(\n    aes(fill = after_stat(count)),\n    geom = \"raster\",\n    position = \"identity\",\n    interpolate = TRUE\n  )+\n  scale_fill_paletteer_c(\"grDevices::Inferno\")+\n  theme_minimal()+\n  scale_y_reverse(name = \"Age (years)\",\n                  limits = c(0,6),\n                  breaks = seq(0,6,by = 1))+\n  labs(fill = \"Number of EV-A71 samples\",x = \"Month of admission\")+\n  theme(legend.position = \"bottom\",\n        legend.key.width =  unit(1, \"cm\"))\n\n\n\n\n\n\n\n\n\nRaw data\n\n\nCode\ncount &lt;- viro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;% \n  filter(sero_gr == \"EV-A71\" & month(adm_month2) &gt;= 8) %&gt;% \n  ggplot(aes(age_adm))+\n  geom_histogram(binwidth = 0.5,\n                 color = \"white\",fill = \"black\",alpha = 0.5)+\n  scale_x_continuous(breaks = seq(0,12,by = 1),\n                     limits = c(0,12))+\n  labs(x = \"Age(years)\",y = \"Number of EV-A71 samples\")+\n  theme_minimal()\n\n\nper &lt;- viro2 %&gt;%\n  mutate(adm_month = month(admission_date,label = TRUE),\n         adm_month2 = as.Date(floor_date(admission_date, \"month\"))%&gt;% as.character(),\n         age_bin = cut(age_adm,\n                       breaks = seq(0, max(age_adm, na.rm = TRUE) + 0.5, by = 0.5),\n                       right = FALSE)) %&gt;%\n  na.omit() %&gt;%\n  filter(month(adm_month2) &gt;= 8) %&gt;%\n  group_by(age_bin,sero_gr) %&gt;%\n  summarise(n = n(), .groups = \"drop_last\") %&gt;%\n  mutate(perc = n / sum(n)) %&gt;%\n  ungroup() %&gt;% \n  complete(age_bin,sero_gr,fill = list(perc =0)) %&gt;% \n  filter(sero_gr == \"EV-A71\") %&gt;% \n  ggplot(aes(x = age_bin, y = perc))+\n  geom_col()+\n  scale_y_continuous(name = \"Percentage of EV-A71 samples\",\n                     labels = scales::label_percent(scale = 100))+\n  labs(x = \"Age group\")+\n  theme_minimal()+\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1)\n  )\n\nlibrary(patchwork)\n\ncount/\n  per",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Virology data description</span>"
    ]
  },
  {
    "objectID": "viro_des.html#epidemiology-analysis",
    "href": "viro_des.html#epidemiology-analysis",
    "title": "4  Virology data description",
    "section": "4.5 Epidemiology analysis",
    "text": "4.5 Epidemiology analysis\n\n\n\nFigure1",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Virology data description</span>"
    ]
  }
]